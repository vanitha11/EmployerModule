"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");const t={local:"localStorage",session:"sessionStorage",default:"localStorage"};class s{constructor({key:e,storage:t,isSupported:s}={}){this.key=e,this.storage=t,this.isSupported=s,this.store=this.storageInstance()}storageInstance(){const e=t[this.storage]||t.default;return window[e]}lsSet(e){this.store.setItem(this.key,JSON.stringify(e))}lsGet(){return JSON.parse(this.store[this.key]||"{}")}lsClean(){this.lsSet("")}get(e,t){if(!this.isSupported)return null;const s=this.lsGet()[e];return void 0!==s?s:t}set(e,t){return this.isSupported?(this.lsSet({...this.lsGet(),[e]:t}),t):null}remove(e){return this.isSupported?this.set(e):null}clean(){return this.isSupported?this.lsClean():null}}function r(t){const r=new s(t),o=(e,t)=>(t&&r.set(e,t),r.get(e));return{storage:r,useStorage:(t,s)=>{const[r,i]=e.useState((()=>o(t,s)));return[r,e=>{o(t,e),i(e)}]}}}const o={key:"react-hook-storage",storage:"local",isSupported:!0};exports.default=function(e={}){if("undefined"!=typeof process&&(process.server||process.SERVER_BUILD))return;const{key:t,storage:s,isSupported:i}=e,n={...o,key:t||o.key,storage:s||o.storage,isSupported:void 0!==i?i:o.isSupported};try{const e="react-hook-storage-test";window.localStorage.setItem(e,e),window.localStorage.removeItem(e)}catch(e){n.isSupported=!1,console.error("Local or Session storage is not supported")}return new r(n)};
//# sourceMappingURL=react-hook-storage.js.map
