{"version":3,"file":"react-hook-storage.js","sources":["../src/Storage.js","../src/ReactHookStorage.js","../src/index.js"],"sourcesContent":["const STORAGES = {\n    local: 'localStorage',\n    session: 'sessionStorage',\n    default: 'localStorage',\n}\n\nexport default class Storage {\n    /**\n    * Storage constructor\n    */\n    constructor ({\n        key, storage, isSupported,\n    } = {}) {\n        this.key = key\n        this.storage = storage\n        this.isSupported = isSupported\n\n        this.store = this.storageInstance()\n    }\n\n    /**\n    * Private method to get store instance to used. Select between localStorage or sessionStorage\n    *\n    * @returns {any}\n    * @private\n    */\n    storageInstance () {\n        const storage = STORAGES[this.storage] || STORAGES.default\n        return window[storage]\n    }\n\n    /**\n    * Private method set a new value of store.\n    *\n    * @param {string} keye\n    * @param {*} value\n    * @private\n    */\n    lsSet (data) {\n        this.store.setItem(this.key, JSON.stringify(data))\n    }\n\n    /**\n    * Private method to get store.\n    *\n    * @returns {any}\n    * @private\n    */\n    lsGet () {\n        return JSON.parse(this.store[this.key] || '{}')\n    }\n\n    /**\n    * Private method to clean store.\n    *\n    * @returns {any}\n    * @private\n    */\n    lsClean () {\n        this.lsSet('')\n    }\n\n    /**\n    * Get a value of store\n    *\n    * @param {String} key\n    * @param {*} defaultValue\n    * @returns {*}\n    * @public\n    */\n    get (key, defaultValue) {\n        if (!this.isSupported) {\n            return null\n        }\n\n        const value = this.lsGet()[key]\n        return value !== undefined ? value : defaultValue\n    }\n\n    /**\n    * Set a value in store\n    *\n    * @param {String} key\n    * @param {*} value\n    * @returns {*}\n    * @public\n    */\n    set (key, value) {\n        if (!this.isSupported) {\n            return null\n        }\n\n        this.lsSet({\n            ...this.lsGet(),\n            [key]: value,\n        })\n\n        return value\n    }\n\n    /**\n    * Remove a value from store\n    *\n    * @param {String} key\n    * @returns {*}\n    * @public\n    */\n    remove (key) {\n        if (!this.isSupported) {\n            return null\n        }\n\n        return this.set(key)\n    }\n\n    /**\n    * Clean store\n    *\n    * @returns {*}\n    * @public\n    */\n    clean () {\n        if (!this.isSupported) {\n            return null\n        }\n\n        return this.lsClean()\n    }\n}\n","import { useState } from 'react'\nimport Storage from './Storage'\n\nfunction ReactHookStorage(options) {\n    /**\n     * Initialize storage\n     */\n    const storage = new Storage(options)\n\n    /**\n     * Set prop in storage (local or session)\n     * @param {string} key\n     * @param {any} value\n     */\n    const setStorage = (key, value) => {\n        if (value) storage.set(key, value)\n        return storage.get(key)\n    }\n\n    /**\n     * Hook to use storage\n     * @param {string} key\n     * @param {any} defaultValue\n     */\n    const useStorage = (key, defaultValue) => {\n        const [value, setValue] = useState(() => setStorage(key, defaultValue))\n        const fetchValue = (v) => {\n            setStorage(key, v)\n            setValue(v)\n        }\n\n        return [value, fetchValue]\n    }\n\n    return {\n        storage,\n        useStorage\n    }\n}\n\nexport default ReactHookStorage\n","import ReactHookStorage from './ReactHookStorage'\n\nconst defaultProps = {\n    key: 'react-hook-storage',\n    storage: 'local',\n    isSupported: true,\n}\n\n/**\n * Install react-hook-storage\n * @param {Object} options\n */\nfunction Initialize(options = {}) {\n    if (typeof process !== 'undefined' && (process.server || process.SERVER_BUILD)) return\n\n    const { key, storage, isSupported } = options\n    const props = {\n        ...defaultProps,\n        key: key || defaultProps.key,\n        storage: storage || defaultProps.storage,\n        isSupported: isSupported !== undefined ? isSupported : defaultProps.isSupported\n    }\n\n    try {\n        const test = 'react-hook-storage-test'\n        window.localStorage.setItem(test, test)\n        window.localStorage.removeItem(test)\n    } catch (e) {\n        props.isSupported = false\n        console.error('Local or Session storage is not supported')\n    }\n\n    return new ReactHookStorage(props)\n}\n\nexport default Initialize"],"names":["STORAGES","local","session","default","Storage","[object Object]","key","storage","isSupported","this","store","storageInstance","window","data","setItem","JSON","stringify","parse","lsSet","defaultValue","value","lsGet","undefined","set","lsClean","ReactHookStorage","options","setStorage","get","useStorage","setValue","useState","v","defaultProps","process","server","SERVER_BUILD","props","test","localStorage","removeItem","e","console","error"],"mappings":"2FAAA,MAAMA,EAAW,CACbC,MAAO,eACPC,QAAS,iBACTC,QAAS,gBAGE,MAAMC,EAIjBC,aAAaC,IACTA,EAAGC,QAAEA,EAAOC,YAAEA,GACd,IACAC,KAAKH,IAAMA,EACXG,KAAKF,QAAUA,EACfE,KAAKD,YAAcA,EAEnBC,KAAKC,MAAQD,KAAKE,kBAStBN,kBACI,MAAME,EAAUP,EAASS,KAAKF,UAAYP,EAASG,QACnD,OAAOS,OAAOL,GAUlBF,MAAOQ,GACHJ,KAAKC,MAAMI,QAAQL,KAAKH,IAAKS,KAAKC,UAAUH,IAShDR,QACI,OAAOU,KAAKE,MAAMR,KAAKC,MAAMD,KAAKH,MAAQ,MAS9CD,UACII,KAAKS,MAAM,IAWfb,IAAKC,EAAKa,GACN,IAAKV,KAAKD,YACN,OAAO,KAGX,MAAMY,EAAQX,KAAKY,QAAQf,GAC3B,YAAiBgB,IAAVF,EAAsBA,EAAQD,EAWzCd,IAAKC,EAAKc,GACN,OAAKX,KAAKD,aAIVC,KAAKS,MAAM,IACJT,KAAKY,QACRhB,CAACC,GAAMc,IAGJA,GARI,KAkBff,OAAQC,GACJ,OAAKG,KAAKD,YAIHC,KAAKc,IAAIjB,GAHL,KAYfD,QACI,OAAKI,KAAKD,YAIHC,KAAKe,UAHD,MCxHnB,SAASC,EAAiBC,GAItB,MAAMnB,EAAU,IAAIH,EAAQsB,GAOtBC,EAAa,CAACrB,EAAKc,KACjBA,GAAOb,EAAQgB,IAAIjB,EAAKc,GACrBb,EAAQqB,IAAItB,IAkBvB,MAAO,CACHC,QAAAA,EACAsB,WAZe,CAACvB,EAAKa,KACrB,MAAOC,EAAOU,GAAYC,YAAS,IAAMJ,EAAWrB,EAAKa,KAMzD,MAAO,CAACC,EALYY,IAChBL,EAAWrB,EAAK0B,GAChBF,EAASE,OC1BrB,MAAMC,EAAe,CACjB3B,IAAK,qBACLC,QAAS,QACTC,aAAa,mBAOjB,SAAoBkB,EAAU,IAC1B,GAAuB,oBAAZQ,UAA4BA,QAAQC,QAAUD,QAAQE,cAAe,OAEhF,MAAM9B,IAAEA,EAAGC,QAAEA,EAAOC,YAAEA,GAAgBkB,EAChCW,EAAQ,IACPJ,EACH3B,IAAKA,GAAO2B,EAAa3B,IACzBC,QAASA,GAAW0B,EAAa1B,QACjCC,iBAA6Bc,IAAhBd,EAA4BA,EAAcyB,EAAazB,aAGxE,IACI,MAAM8B,EAAO,0BACb1B,OAAO2B,aAAazB,QAAQwB,EAAMA,GAClC1B,OAAO2B,aAAaC,WAAWF,GACjC,MAAOG,GACLJ,EAAM7B,aAAc,EACpBkC,QAAQC,MAAM,6CAGlB,OAAO,IAAIlB,EAAiBY"}