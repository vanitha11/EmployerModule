[{"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\index.js":"1","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\App.js":"2","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\reportWebVitals.js":"3","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\store.js":"4","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\slice.js":"5","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\slice.js":"6","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\slice.js":"7","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\index.js":"8","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\index.js":"9","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\slice.js":"10","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\index.js":"11","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\SignupSuccess\\index.js":"12","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\ForgotPassword\\index.js":"13","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Activate\\index.js":"14","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\ResetPassword\\index.js":"15","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Account\\index.js":"16","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\VerifyEmail\\index.js":"17","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\UpdatePassword\\index.js":"18","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\action.js":"19","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\selector.js":"20","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\selector.js":"21","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\action.js":"22","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\card.js":"23","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\selector.js":"24","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\action.js":"25","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\hooks\\useValidation.js":"26","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\hooks\\useSessionStorage.js":"27","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\hooks\\useConfiguration.js":"28","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\action.js":"29","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Account\\editEmail.js":"30","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\helpers\\requestUtil.js":"31","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Message\\error.js":"32","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Message\\success.js":"33","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\index.js":"34","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Header\\index.js":"35","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\TextField\\index.js":"36","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Sidebar\\index.js":"37","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Footer\\index.js":"38","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Checkbox\\index.js":"39","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\TextField\\withLabel.js":"40","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\selector.js":"41","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\TextField\\formatters.js":"42","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\index.js":"43","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\action.js":"44","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\slice.js":"45","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\selector.js":"46"},{"size":613,"mtime":1653141978396,"results":"47","hashOfConfig":"48"},{"size":1825,"mtime":1653441373056,"results":"49","hashOfConfig":"48"},{"size":402,"mtime":1653141978400,"results":"50","hashOfConfig":"48"},{"size":471,"mtime":1653381379267,"results":"51","hashOfConfig":"48"},{"size":1481,"mtime":1653141975687,"results":"52","hashOfConfig":"48"},{"size":831,"mtime":1653141977651,"results":"53","hashOfConfig":"48"},{"size":657,"mtime":1653459315418,"results":"54","hashOfConfig":"48"},{"size":9137,"mtime":1653382227288,"results":"55","hashOfConfig":"48"},{"size":3063,"mtime":1653440179745,"results":"56","hashOfConfig":"48"},{"size":384,"mtime":1653141978086,"results":"57","hashOfConfig":"48"},{"size":11539,"mtime":1653141977647,"results":"58","hashOfConfig":"48"},{"size":2765,"mtime":1653141977672,"results":"59","hashOfConfig":"48"},{"size":3966,"mtime":1653283396902,"results":"60","hashOfConfig":"48"},{"size":5107,"mtime":1653141975065,"results":"61","hashOfConfig":"48"},{"size":8673,"mtime":1653141977581,"results":"62","hashOfConfig":"48"},{"size":13684,"mtime":1653440055298,"results":"63","hashOfConfig":"48"},{"size":4996,"mtime":1653286068099,"results":"64","hashOfConfig":"48"},{"size":12819,"mtime":1653440062623,"results":"65","hashOfConfig":"48"},{"size":958,"mtime":1653141975676,"results":"66","hashOfConfig":"48"},{"size":59,"mtime":1653459433380,"results":"67","hashOfConfig":"48"},{"size":51,"mtime":1653035732440,"results":"68","hashOfConfig":"48"},{"size":664,"mtime":1653141975354,"results":"69","hashOfConfig":"48"},{"size":1207,"mtime":1653141975363,"results":"70","hashOfConfig":"48"},{"size":53,"mtime":1653035731951,"results":"71","hashOfConfig":"48"},{"size":699,"mtime":1653141977645,"results":"72","hashOfConfig":"48"},{"size":2097,"mtime":1653141978354,"results":"73","hashOfConfig":"48"},{"size":411,"mtime":1653141978353,"results":"74","hashOfConfig":"48"},{"size":454,"mtime":1653141978350,"results":"75","hashOfConfig":"48"},{"size":272,"mtime":1653141978084,"results":"76","hashOfConfig":"48"},{"size":808,"mtime":1653283396887,"results":"77","hashOfConfig":"48"},{"size":1054,"mtime":1653141978303,"results":"78","hashOfConfig":"48"},{"size":595,"mtime":1653283397040,"results":"79","hashOfConfig":"48"},{"size":552,"mtime":1653283397040,"results":"80","hashOfConfig":"48"},{"size":410,"mtime":1653141978085,"results":"81","hashOfConfig":"48"},{"size":17653,"mtime":1653382470936,"results":"82","hashOfConfig":"48"},{"size":1461,"mtime":1653141978218,"results":"83","hashOfConfig":"48"},{"size":5317,"mtime":1653441427423,"results":"84","hashOfConfig":"48"},{"size":431,"mtime":1653141977990,"results":"85","hashOfConfig":"48"},{"size":682,"mtime":1653141977979,"results":"86","hashOfConfig":"48"},{"size":1004,"mtime":1653141978217,"results":"87","hashOfConfig":"48"},{"size":53,"mtime":1653035732477,"results":"88","hashOfConfig":"48"},{"size":614,"mtime":1653141978214,"results":"89","hashOfConfig":"48"},{"size":14648,"mtime":1653487022108,"results":"90","hashOfConfig":"48"},{"size":745,"mtime":1653461769691,"results":"91","hashOfConfig":"48"},{"size":683,"mtime":1653461612801,"results":"92","hashOfConfig":"48"},{"size":60,"mtime":1653462003761,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1riv8cd",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"110","usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"97"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"97"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"97"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"97"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"97"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"97"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"97"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"97"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"97"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"97"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"97"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"97"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"97"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\index.js",[],[],["260","261"],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\App.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\reportWebVitals.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\store.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\slice.js",["262","263"],[],"import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    isError: false,\n    isSuccess: false,\n    errorMessage: '',\n    data: {},\n    profileFlag: {}\n};\n\nexport const loginSlice = createSlice({\n    name: 'login'\n    , initialState,\n\n    reducers: {\n        loginRequest: (state) => {\n            state.isError = false;\n            state.isSuccess = false;\n            state.errorMessage = '';\n            data: {\n            }\n        },\n        loginSuccess: (state, action) => {\n            state.isError = false;\n            state.isSuccess = true;\n            state.errorMessage = '';\n            state.data = action.payload;\n            state.profileFlag = action.payload && action.payload.profileFlag;\n        },\n        setProfileFlag: (state, action) => {\n            const flagName = action.payload;\n            const newProfileFlag = {...state.profileFlag, [flagName]: true};\n            state.profileFlag = newProfileFlag;\n        },\n        loginFailure: (state, action) => {\n            state.isError = true;\n            state.isSuccess = false;\n            state.errorMessage = action.payload;\n        },\n        reset: state => {\n            state.isError = false;\n            state.isSuccess = false;\n            state.errorMessage = '';\n            state.data = {};\n        }\n    }\n});\n\nexport const {\n    loginRequest,\n    loginSuccess,\n    loginFailure,\n    setProfileFlag,\n    reset\n} = loginSlice.actions;\n\nexport default loginSlice.reducer;\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\slice.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\slice.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\index.js",["264","265","266","267","268","269"],[],"import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login, resetError} from \"./action\";\nimport {useNavigate} from \"react-router-dom\";\nimport TextField from \"../common/TextField\";\nimport useValidation from \"../../hooks/useValidation\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport useSessionStorage from \"../../hooks/useSessionStorage\";\nimport Loader from \"../common/Loader\";\nimport {loginSelector} from \"./selector\";\nimport useEventListener from '@use-it/event-listener'\n\n\nexport default () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const validate = useValidation();\n    const config = useConfiguration();\n    const storage = useSessionStorage();\n    const {isError, isSuccess, data, errorMessage, profileFlag} = useSelector(loginSelector);\n    const ENTER_KEYS = [13, 'Enter'];\n    const handleKeyEvent = ({key}) => {\n        if (ENTER_KEYS.includes(key)) {\n            const isValid = validateForm();\n            if (isValid) {\n                dispatch(login({url: `${config.baseUrl}/Candidates/validatelogin`, ...formData}));\n            }\n        }\n    }\n    useEventListener('keydown', handleKeyEvent);\n    useEffect(() => {\n        document.title = \"Overture Candidate Login\";\n    }, []);\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const [formErrors, setFormErrors] = useState({});\n    if (isSuccess) {\n        storage.setItem(\"login\", data);\n        if (profileFlag && profileFlag.isProfileSubmitted) {\n            navigate('/dashboard')\n        } else {\n            navigate('/dashboard');\n        }\n    }\n    const validateForm = () => {\n        const result = validate('login', [{name: 'email', data: formData.email}, {\n            name: 'password',\n            data: formData.password\n        }]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        return result.valid;\n    }\n    const updateFormValue = (target) => {\n        const {name, value} = target;\n        setFormData({...formData, [name]: value});\n    }\n    const loginClicked = (e) => {\n        e.preventDefault();\n        const isValid = validateForm();\n        if (isValid) {\n            dispatch(login({url: `${config.baseUrl}/Candidates/validatelogin`, ...formData}));\n        }\n    };\n\n    const signUpClicked = (e) => {\n        e.preventDefault();\n        dispatch(resetError());\n        navigate(\"/signup\");\n    }\n    const forgotPassword = (e) => {\n        e.preventDefault();\n        navigate(\"/forgot\");\n    }\n\n    const [passwordType, setPasswordType] = useState(\"password\");\n\n    const [passwordInput, setPasswordInput] = useState(\"\");\n\n    const [iconStyleText, seticonStyleText] = useState(\"zmdi zmdi-eye-off text-muted\");\n\n    const handlePasswordChange = (evnt) => {\n        setPasswordInput(evnt.target.value);\n    }\n    const togglePassword = () => {\n        if (passwordType === \"password\") {\n            setPasswordType(\"text\")\n            seticonStyleText(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordType(\"password\")\n        seticonStyleText(\"zmdi zmdi-eye-off text-muted\")\n    }\n    return (\n        <div className={\"\"}>\n            <Loader/>\n            <div className=\"page\">\n                <div className=\"\">\n                    <div className=\"container-login100\">\n                        <div className=\"wrap-login100 p-6\">\n                            <form className=\"login100-form needs-validation\">\n                                <span className=\"login100-form-title pb-5\">\n                                    <a href=\"\"><img src=\"assets/images/brand/logo-3.png\" className=\"header-brand-img\"\n                                                    alt=\"\"/></a>\n                                </span>\n                                <span className=\"login100-form-title pb-5\">\n                                Candidate Login\n                                </span>\n                                {\n                                    isError &&\n                                    <>\n                                        <div\n                                            className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\n                                            data-bs-autohide=\"false\">\n                                            <div className=\"logingerrormgs\">\n                                                <div className=\"toast-body\">\n                                                    {errorMessage || 'Login failed! Please try again.'}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div>&nbsp;</div>\n                                    </>\n                                }\n                                <div className=\"panel panel-primary\">\n                                    <div className=\"panel-body tabs-menu-body p-0 pt-5\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"tab5\">\n\n                                                <div class=\"wrap-input100 validate-input input-group\" id=\"Emailtoggle\">\n                                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Email</h5>\n                                                    </label>\n                                                </div>\n                                                <TextField placeholder={\"Email\"} type={\"email\"} name={'email'}\n                                                           iconClass={\"zmdi zmdi-email text-muted\"}\n                                                           updateValue={updateFormValue} errors={formErrors['email']}/>\n\n                                                <div class=\"wrap-input100 validate-input input-group\"\n                                                     id=\"Passwordtoggle\">\n                                                    <label for=\"exampleInputname\" class=\"logintextspace\">\n                                                        <h5>Password</h5></label>\n                                                </div>\n\n\n                                                <TextField placeholder={\"Password\"} clickeye={togglePassword}\n                                                           type={passwordType} name={'password'}\n                                                           iconClass={iconStyleText}\n                                                           onChange={handlePasswordChange}\n                                                           updateValue={updateFormValue}\n                                                           errors={formErrors['password']}/>\n\n\n                                                <div className=\"text-end pt-4\">\n                                                    <p className=\"mb-0\">\n                                                        <a href=\"#\" className=\"text-primary ms-1\"\n                                                           onClick={forgotPassword}>Forgot Password?</a></p>\n                                                </div>\n                                                <div className=\"container-login100-form-btn\">\n                                                    <a href=\"#\" className=\"login100-form-btn btn-primary\"\n                                                       onClick={loginClicked} onKeyPress={(event) => {\n                                                        if (event.key === 'Enter') {\n                                                            loginClicked(event);\n                                                        }\n                                                    }}>\n                                                        Login\n                                                    </a>\n                                                </div>\n                                                <div className=\"text-center pt-3\">\n                                                    <p className=\"text-dark mb-0\">Not a member?<a href=\"#\"\n                                                                                                  onClick={signUpClicked}\n                                                                                                  className=\"text-primary ms-1\">Sign\n                                                        Up</a></p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\index.js",["270","271","272","273","274"],[],"import React, {useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {dashboardSelector} from \"./selector\";\nimport {loadDashboard} from \"./action\";\nimport {useDispatch} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport Footer from \"../common/Footer\";\nimport Card from \"./card\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport useSessionStorage from \"../../hooks/useSessionStorage\";\n\nexport default () => {\n    const dispatch = useDispatch();\n    const config = useConfiguration();\n    const storage = useSessionStorage();\n    const navigate = useNavigate();\n    const login = storage.getItem(\"login\");\n    const {data} = useSelector(dashboardSelector);\n    const profileSubmitted = data.profileFlag && data.profileFlag.isProfileSubmitted;\n    useEffect(() => {\n        document.title = \"Overture Dashboard\";\n        if (config.baseUrl) {\n            if (!login) {\n                navigate(\"/\");\n            } else {\n                dispatch(loadDashboard(config.baseUrl, login.candidateId));\n            }\n        }\n    }, [config]);\n    const editProfile = (event) => {\n        event.preventDefault();\n        navigate(\"/profile\");\n    };\n    return (\n        <div className=\"page\">\n            <div className=\"page-main\">\n                <div className=\"main-content app-content mt-0 main-background\">\n                    <div className=\"side-app\">\n                        <div className=\"main-container container-fluid\">\n                            <div className=\"page-header\">\n                                <h1 className=\"page-title\">Candidate Dashboard</h1>\n                                <div>\n                                    \n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-6 col-md-6 col-lg-6 col-xl-3\">\n                                    <a href=\"#\" >\n                                        <Card title={\"Profile Builder\"} value={data.percentageOfCompletion}\n                                              valueLabel={profileSubmitted ? \"Edit Profile\" : \"Complete Profile\"}\n                                              pathColor={\"#4ecc48\"}\n                                              bgClass={\"bg-green\"} valueSuffix={\"%\"}>\n                                            <a data-bs-toggle=\"slide\" href=\"#\">\n                                                <div className=\"chart-circle-value-3 text-secondary fs-30\">\n                                                    <i className=\"icon icon-user-follow\"></i>\n                                                </div>\n                                            </a>\n                                        </Card>\n                                    </a>\n                                </div>\n                            </div>\n                           \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n};\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\slice.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\index.js",["275","276","277","278","279","280"],[],"import React, {useEffect, useState} from \"react\";\nimport TextField from \"../common/TextField\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {signUpSelector} from \"./selector\";\nimport useValidation from \"../../hooks/useValidation\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport Loader from \"../common/Loader\";\nimport {signup, reset} from \"./action\";\nimport Checkbox from \"../common/Checkbox\";\nimport {useSearchParams} from \"react-router-dom\";\n\nexport default () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const category = searchParams.get(\"category\");\n    const navigate = useNavigate();\n    const validate = useValidation();\n    const config = useConfiguration();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        document.title = \"Overture Candidate Signup\";\n    }, []);\n    const {signUpSuccess, signUpError, signUpErrorMessage} = useSelector(signUpSelector);\n    if (signUpSuccess) {\n        dispatch(reset());\n        navigate(\"/signup/success\");\n    }\n    const [signUpForm, setSignUpForm] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        zipCode: \"\",\n        terms: false\n    });\n    const [formErrors, setFormErrors] = useState({});\n    const goToLogin = () => {\n        navigate(\"/\");\n    }\n    const validateForm = () => {\n        const result = validate('signUp', [\n            {name: 'firstName', data: signUpForm.firstName},\n            {name: 'lastName', data: signUpForm.lastName},\n            {name: 'email', data: signUpForm.email},\n            {name: 'password', data: signUpForm.password},\n            {name: 'confirmPassword', data: signUpForm.confirmPassword},\n            {name: 'zipCode', data: signUpForm.zipCode},\n            {name: 'terms', data: signUpForm.terms}\n        ]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        return result.valid;\n    }\n    const customValidate = () => {\n        if (!signUpForm.terms) {\n            setFormErrors({...formErrors, terms: [\"You must agree to the terms and conditions\"]});\n            return false;\n        }\n        return true;\n    }\n    const updateFormValue = (target) => {\n        const {name, value} = target;\n        setSignUpForm({...signUpForm, [name]: value});\n        dispatch(reset());\n    }\n    const customValidation = () => {\n        if (signUpForm.password !== signUpForm.confirmPassword) {\n            setFormErrors({...formErrors, confirmPassword: [\"Password and Confirm Password must match\"]});\n            return false;\n        }\n        return true;\n    }\n    const signUpClicked = (e) => {\n        e.preventDefault();\n        if (!customValidation()) {\n            return false;\n        }\n        if (validateForm() && customValidate()) {\n            dispatch(signup({\n                url: `${config.baseUrl}/Candidates/signup`, formData: {\n                    firstName: signUpForm.firstName,\n                    lastName: signUpForm.lastName,\n                    email: signUpForm.email,\n                    password: signUpForm.password,\n                    zipCode: signUpForm.zipCode,\n                    jobCategoryId: category\n                }\n            }));\n        }\n    }\n\n    const [passwordType, setPasswordType] = useState(\"password\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [iconStyleText, seticonStyleText] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChange = (evnt) => {\n        setPasswordInput(evnt.target.value);\n    }\n    const togglePassword = () => {\n        if (passwordType === \"password\") {\n            setPasswordType(\"text\")\n            seticonStyleText(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordType(\"password\")\n        seticonStyleText(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    const [passwordTypeConfirm, setPasswordTypeConfirm] = useState(\"password\");\n    const [passwordInputConfirm, setPasswordInputConfirm] = useState(\"\");\n    const [iconStyleTextConfirm, seticonStyleTextConfirm] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChangeConfirm = (evnt) => {\n        setPasswordInputConfirm(evnt.target.value);\n    }\n    const togglePasswordConfirm = () => {\n        if (passwordTypeConfirm === \"password\") {\n            setPasswordTypeConfirm(\"text\")\n            seticonStyleTextConfirm(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordTypeConfirm(\"password\")\n        seticonStyleTextConfirm(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    return (\n        <div>\n            <Loader/>\n            <div className=\"page\">\n                <div className=\"\">\n                    <div className=\"container-login100\">\n                        <div className=\"wrap-login100 p-6\">\n                            <form className=\"login100-form validate-form\">\n                            <span className=\"login100-form-title pb-5\">\n                                <a href=\"/\">\n                                    <img src=\"assets/images/brand/logo-3.png\" className=\"header-brand-img\" alt=\"\"/>\n                                </a>\n                            </span>\n                                <span className=\"login100-form-title\">\n                                    Candidate Registration\n                                </span>\n                                {\n                                    signUpError &&\n                                    <>\n                                        <div\n                                            className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\n                                            data-bs-autohide=\"false\">\n                                            <div className=\"d-flex\">\n                                                <div className=\"toast-body\">\n                                                    {signUpErrorMessage || 'Sign up failed! Please try again.'}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div>&nbsp;</div>\n                                    </>\n                                }\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Firstnametoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>First name</h5></label>\n                                </div>\n                                <TextField placeholder={\"First name\"} name={'firstName'} type={\"text\"}\n                                           iconClass={\"mdi mdi-account\"} errors={formErrors['firstName']}\n                                           updateValue={updateFormValue}/>\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Lasttoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Last name</h5></label>\n                                </div>\n                                <TextField placeholder={\"Last name\"} name={'lastName'} type={\"text\"}\n                                           iconClass={\"mdi mdi-account\"} errors={formErrors['lastName']}\n                                           updateValue={updateFormValue}/>\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Emailtoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Email</h5></label>\n                                </div>\n                                <TextField placeholder={\"Email\"} name={'email'} type={\"email\"}\n                                           iconClass={\"zmdi zmdi-email\"} errors={formErrors['email']}\n                                           updateValue={updateFormValue}/>\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Passwordtoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Password</h5></label>\n                                </div>\n                                <TextField placeholder={'Password'} name={'password'} type={passwordType}\n                                           iconClass={iconStyleText} onChange={handlePasswordChange}\n                                           errors={formErrors['password']} updateValue={updateFormValue}\n                                           clickeye={togglePassword}\n                                />\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"ConfirmPasswordtoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Confirm Password</h5>\n                                    </label>\n                                </div>\n                                <TextField placeholder={'Confirm Password'} name={'confirmPassword'}\n                                           type={passwordTypeConfirm}\n                                           iconClass={iconStyleTextConfirm} onChange={handlePasswordChangeConfirm}\n                                           errors={formErrors['confirmPassword']} updateValue={updateFormValue}\n                                           clickeye={togglePasswordConfirm}\n                                />\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Zipcodetoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Zipcode</h5></label>\n                                </div>\n                                <TextField placeholder={'Zip Code'} name={'zipCode'} type={\"text\"}\n                                           iconClass={\"zmdi zmdi-google-maps\"} errors={formErrors['zipCode']}\n                                           updateValue={updateFormValue}/>\n                                <Checkbox name={\"terms\"} updateValue={updateFormValue} errors={formErrors['terms']}>\n                                    <>\n                                        I agree to the <a href=\"https://overturexl.com/terms-conditions.html\"\n                                                          target=\"_blank\">Terms and Conditions</a>\n                                    </>\n                                </Checkbox>\n                                <div className=\"container-login100-form-btn\">\n                                    <a href=\"Success.html\" className=\"login100-form-btn btn-primary\"\n                                       onClick={signUpClicked}>\n                                        Sign Up\n                                    </a>\n                                </div>\n                                <div className=\"text-center pt-3\">\n                                    <p className=\"text-dark mb-0\">Already have account?<a href=\"#\" onClick={goToLogin}\n                                                                                          className=\"text-primary ms-1\">Sign\n                                        In</a></p>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\SignupSuccess\\index.js",["281","282","283"],[],"import {useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {signUpSelector} from \"../Signup/selector\";\nimport requestUtil from '../../helpers/requestUtil';\nimport useConfiguration from \"../../hooks/useConfiguration\";\n\nconst {useNavigate} = require('react-router-dom');\nexport default () => {\n    const navigate = useNavigate();\n    const config = useConfiguration();\n    const {email} = useSelector(signUpSelector);\n    const gotoLogin = (e) => {\n        e.preventDefault();\n        navigate('/');\n    }\n    useEffect(() => {\n        document.title = \"Overture Candidate Login\";\n    }, []);\n    useEffect(() => {\n        config.baseUrl && requestUtil(`${config.baseUrl}/Candidates/sendmail?Email=${email}`, 'GET').then(() => {\n\n        });\n    }, [config]);\n    return (\n        <div className=\"page\">\n            <div className=\"\">\n                <div className=\"modal d-block pos-static\">\n                    <div className=\"container-login100\">\n                        <div className=\"wrap-login100 p-6\">\n                            <form className=\"login100-form validate-form\">\n                            <span className=\"login100-form-title pb-5\">\n                                <a href=\"/\"><img src=\"/assets/images/brand/logo-3.png\" className=\"header-brand-img\"\n                                                 alt=\"\"/></a>\n                            </span>\n                                <div className=\"\">\n                                    <div className=\"modal-body text-center p-4 pb-5\">\n\n                                        <i className=\"icon icon-check fs-70 text-success lh-1 my-4 d-inline-block\"></i>\n                                        <h4 className=\"text-success mb-4\">\n                                            Congratulations!<br/>\n                                            Signup successful!\n                                        </h4>\n                                        <p className=\"mb-4\">\n                                        </p><h4>\n                                        An email has been sent to your inbox.<br/>\n                                        Please verify your account by clicking the link sent to the email <br/>\n                                        you registered with and activate your account to complete your profile.\n\n                                    </h4>\n                                        <p></p>\n                                        <a className=\"btn btn-success pd-x-25\" href=\"#\" onClick={gotoLogin}>OK</a>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\ForgotPassword\\index.js",["284","285","286","287"],[],"import {useNavigate} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport useValidation from \"../../hooks/useValidation\";\nimport TextField from \"../common/TextField\";\nimport Error from '../common/Message/error';\nimport Success from \"../common/Message/success\";\nimport requestUtil from '../../helpers/requestUtil';\nimport Loader from \"../common/Loader\";\nimport {setLoadingPageTrue, setLoadingPageFalse} from \"../common/Loader/action\";\n\nexport default () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(null);\n    const [formErrors, setFormErrors] = useState({});\n    const [error, setError] = useState(false);\n    const [successMessage, setSuccessMessage] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const validate = useValidation();\n    const config = useConfiguration();\n    const validateEmail = () => {\n        const result = validate(\"forgotPassword\", [{'name': 'email', data: email}]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        return result.valid;\n    }\n    const gotoLogin = (e) => {\n        e.preventDefault();\n        navigate(\"/\");\n    }\n    const resetPassword = (event) => {\n        event.preventDefault();\n        if (validateEmail()) {\n            dispatch(setLoadingPageTrue());\n            requestUtil(`${config.baseUrl}/Candidates/forgotpassword?email=${email}`, 'POST', {})\n                .then(response => {\n                    setSuccessMessage(response.message);\n                    dispatch(setLoadingPageFalse());\n                }).catch(error => {\n                dispatch(setLoadingPageFalse());\n                setError(true)\n                setErrorMessage(error.message);\n            });\n        }\n    }\n    const updateFormValue = (target) => {\n        setEmail(target.value);\n    }\n    return (<div className=\"page\">\n        <Loader/>\n        <div className=\"\">\n            <div className=\"container-login100\">\n                <div className=\"wrap-login100 p-6\">\n                    <form className=\"login100-form validate-form\">\n                            <span className=\"login100-form-title pb-5\">\n                                <a href=\"\"><img src=\"assets/images/brand/logo-3.png\" className=\"header-brand-img\"\n                                                alt=\"\"/></a>\n                            </span>\n                        <span className=\"login100-form-title pb-5\">\n                                Forgot Password\n                        </span>\n                        {\n                            error && <Error errorMessage={errorMessage}/>\n                        }\n                        {\n                            successMessage && <Success successMessage={successMessage} />\n                        }\n                        <p className=\"text-muted\">Enter the email address registered on your account</p>\n                        <TextField placeholder={\"Email\"} name={'email'} type={\"email\"} iconClass={\"zmdi zmdi-email\"}\n                                   errors={formErrors['email']} updateValue={updateFormValue}/>\n                        <div className=\"submit\">\n                            <a className=\"btn btn-primary d-grid\" href=\"#\" onClick={resetPassword}>Send Password Reset\n                                Link</a>\n                        </div>\n                        <div className=\"text-center mt-4\">\n                            <p className=\"text-dark mb-0\">Got it?<a className=\"text-primary ms-1\" href=\"#\"\n                                                                    onClick={gotoLogin}>Login</a>\n                            </p>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>)\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Activate\\index.js",["288","289","290","291","292","293","294","295"],[],"import {useSearchParams} from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {setLoadingPageTrue, setLoadingPageFalse} from \"../common/Loader/action\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport requestUtil from \"../../helpers/requestUtil\";\nimport Loader from \"../common/Loader\";\n\nexport default () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const code = encodeURIComponent(searchParams.get(\"activationCode\"));\n    const config = useConfiguration();\n    const navigate = useNavigate();\n    const [activationSuccess, setActivationSuccess] = useState(false);\n    const [activationMessage, setActivationMessage] = useState(\"\");\n    const [activationSuccessNumber, setactivationSuccessNumber] = useState(0);\n    const url = config.baseUrl;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        document.title = \"Activate\";\n        dispatch(setLoadingPageTrue());\n        if (code && url) {\n            // requestUtil(`${url}/Candidates/activate/${code}`, \"POST\").then((result) => {\n            requestUtil(`${url}/Candidates/activateuser`, \"POST\", {EncryptedString: code}).then((result) => {\n                dispatch(setLoadingPageFalse());\n                setActivationSuccess(true);\n                setActivationMessage(result.message);\n                setactivationSuccessNumber(1);\n\n            }).catch((error) => {\n                dispatch(setLoadingPageFalse());\n                setActivationSuccess(false)\n                setActivationMessage(error.message);\n                setactivationSuccessNumber(2);\n            });\n        }\n    }, [code, url]);\n    return (\n        <div className=\"\">\n            <Loader/>\n            <div className=\"\">\n                <div className=\"\">\n                    <div className=\"modal d-block pos-static\">\n                        <div className=\"container-login100\">\n                            <div className=\"wrap-login100 p-6\">\n                                <form className=\"login100-form validate-form\">\n                                <span className=\"login100-form-title pb-5\">\n                                    <a href=\"\"><img src=\"assets/images/brand/Overturelogofull.png\"\n                                                    className=\"header-brand-img\" alt=\"\"/></a>\n                                </span>\n                                    {\n                                        activationSuccessNumber == 1 && <div className=\"\">\n                                            <div className=\"modal-body text-center p-4 pb-5\">\n                                                <i className=\"icon icon-check fs-70 text-success lh-1 my-4 d-inline-block\"></i>\n                                                <h4 className=\"text-success mb-4\">\n                                                    Congratulations!<br/>\n                                                    {activationMessage}\n                                                </h4>\n                                                <p className=\"mb-4\">\n                                                    <h4>\n                                                        Please login and submit your profile.\n                                                    </h4>\n                                                </p>\n                                                <a className=\"btn btn-primary\" href=\"#\" onClick={(event => {\n                                                    event.preventDefault();\n                                                    navigate(\"/\");\n                                                })}>OK</a>\n                                            </div>\n                                        </div>\n                                    }\n                                    {\n                                        activationSuccessNumber == 2 && <>\n                                            <div\n                                                className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                                role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\n                                                data-bs-autohide=\"false\">\n                                                <div className=\"d-flex\">\n                                                    <div className=\"toast-body\">\n                                                        {activationMessage || 'Activation failed! Please try again.'}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div>&nbsp;</div>\n                                        </>\n                                    }\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\ResetPassword\\index.js",["296","297","298","299","300","301","302","303"],[],"import Loader from \"../common/Loader\";\nimport TextField from \"../common/TextField\";\nimport React, {useState, useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {setLoadingPageTrue, setLoadingPageFalse} from \"../common/Loader/action\";\nimport {useDispatch} from \"react-redux\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport requestUtil from \"../../helpers/requestUtil\";\nimport useValidation from \"../../hooks/useValidation\";\n\nexport default () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const code = encodeURIComponent(searchParams.get(\"resetCode\"));\n    const config = useConfiguration();\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [formErrors, setFormErrors] = useState({});\n    const [validEmail, setValidEmail] = useState(false);\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const url = config.baseUrl;\n    const validate = useValidation();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    useEffect(() => {\n        document.title = \"Reset Password\";\n        if (code && url) {\n            dispatch(setLoadingPageTrue());\n            //requestUtil(`${url}/Candidates/validateaccountforforgetpassword?activationcode=${code}`, \"GET\").then((result) => {\n            requestUtil(`${url}/Candidates/validateaccountforforgetpasswordcandidate?activationcode=${code}`, \"POST\", {EncryptedString: code}).then((result) => {\n                dispatch(setLoadingPageFalse());\n                if (result && result.isEmailExist) {\n                    setValidEmail(true);\n                    setUserName(result.email);\n                } else {\n                    setErrorMessage(result.message);\n                }\n            }).catch((error) => {\n                dispatch(setLoadingPageFalse());\n                setErrorMessage(error.message || \"Something went wrong\");\n            });\n        }\n    }, [code, url])\n    const validateForm = () => {\n        const result = validate('resetPassword', [{name: 'newPassword', data: newPassword}, {\n            name: 'confirmNewPassword',\n            data: confirmNewPassword\n        }]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        return result.valid;\n    }\n    const customPasswordCheck = () => {\n        if (newPassword && confirmNewPassword) {\n            if (newPassword !== confirmNewPassword) {\n                setFormErrors({'confirmNewPassword': [\"Password and Confirm Password must be same\"]});\n                return false;\n            }\n        }\n        return true;\n    }\n    const updateFormValue = (target) => {\n        if (target.name === \"newPassword\") {\n            setNewPassword(target.value);\n        } else if (target.name === \"confirmNewPassword\") {\n            setConfirmNewPassword(target.value);\n        }\n    }\n    const resetPassword = (event) => {\n        event.preventDefault();\n        if (validateForm() && customPasswordCheck()) {\n            dispatch(setLoadingPageTrue());\n            requestUtil(`${url}/Candidates/resetpassword/${userName}/${newPassword}`, \"POST\", {\n                password: formErrors.password\n            }).then((result) => {\n                dispatch(setLoadingPageFalse());\n                if (result && result.isEmailExist) {\n                    navigate(\"/\");\n                } else {\n                    setErrorMessage(result.message);\n                }\n            }).catch((error) => {\n                dispatch(setLoadingPageFalse());\n                setErrorMessage(error.message);\n            });\n        }\n    }\n    const gotoLogin = (e) => {\n        e.preventDefault();\n        navigate(\"/\");\n    }\n\n\n    const [passwordType, setPasswordType] = useState(\"password\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [iconStyleText, seticonStyleText] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChange = (evnt) => {\n        setPasswordInput(evnt.target.value);\n    }\n    const togglePassword = () => {\n        if (passwordType === \"password\") {\n            setPasswordType(\"text\")\n            seticonStyleText(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordType(\"password\")\n        seticonStyleText(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    const [passwordTypeConfirm, setPasswordTypeConfirm] = useState(\"password\");\n    const [passwordInputConfirm, setPasswordInputConfirm] = useState(\"\");\n    const [iconStyleTextConfirm, seticonStyleTextConfirm] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChangeConfirm = (evnt) => {\n        setPasswordInputConfirm(evnt.target.value);\n    }\n    const togglePasswordConfirm = () => {\n        if (passwordTypeConfirm === \"password\") {\n            setPasswordTypeConfirm(\"text\")\n            seticonStyleTextConfirm(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordTypeConfirm(\"password\")\n        seticonStyleTextConfirm(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    return (\n        <div className=\"page\">\n            <Loader/>\n            <div className=\"\">\n                <div className=\"container-login100\">\n                    <div className=\"wrap-login100 p-6\">\n                        <form className=\"login100-form validate-form\">\n                            <span className=\"login100-form-title pb-5\">\n                                <a href=\"\">\n                                    <img src=\"assets/images/brand/logo-3.png\" className=\"header-brand-img\" alt=\"\"/>\n                                </a>\n                            </span>\n                            <span className=\"login100-form-title pb-5\">\n                                Password Reset\n                            </span>\n                            {\n                                errorMessage &&\n                                <>\n                                    <div\n                                        className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                        role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                                        <div className=\"d-flex\">\n                                            <div className=\"toast-body\">\n                                                {errorMessage || 'Reset password failed! Please try again.'}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>&nbsp;</div>\n                                </>\n                            }\n                            {\n                                validEmail && <>\n                                    <TextField placeholder={\"Password\"} divClass={\"col-lg-12\"} label={\"New Password\"}\n                                               name={'newPassword'} type={passwordType} clickeye={togglePassword}\n                                               iconClass={iconStyleText} onChange={handlePasswordChange}\n                                               errors={formErrors['newPassword']}\n                                               updateValue={updateFormValue}/>\n\n\n                                    <TextField placeholder={\"Confirm Password\"} divClass={\"col-lg-12\"}\n                                               label={\"Confirm Password\"}\n                                               name={'confirmNewPassword'} type={passwordTypeConfirm}\n                                               clickeye={togglePasswordConfirm}\n                                               iconClass={iconStyleTextConfirm} onChange={handlePasswordChangeConfirm}\n                                               errors={formErrors['confirmNewPassword']} updateValue={updateFormValue}/>\n\n\n                                    <div className=\"submit\">\n                                        <a className=\"btn btn-primary d-grid\" href=\"#\" onClick={resetPassword}>Save</a>\n                                    </div>\n                                </>\n                            }\n                            <div className=\"text-center mt-4\">\n                                <a className=\"text-primary ms-1\" href=\"#\" onClick={gotoLogin}>Login</a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Account\\index.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],[],"import Loader from \"../common/Loader\";\nimport Header from \"../common/Header\";\nimport Sidebar from \"../common/Sidebar\";\nimport React, {useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {logOut} from \"../Login/action\";\n\nimport {useSelector, useDispatch} from \"react-redux\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport useSessionStorage from \"../../hooks/useSessionStorage\";\nimport {dashboardSelector} from \"../Dashboard/selector\";\nimport EditEmail from \"./editEmail\";\nimport useValidation from \"../../hooks/useValidation\";\nimport './account.css';\nimport requestUtil from \"../../helpers/requestUtil\";\nimport {setLoadingPageFalse, setLoadingPageTrue} from \"../common/Loader/action\";\nimport Error from \"../common/Message/error\";\n\nexport default () => {\n    const [changeEmail, setChangeEmail] = useState(false);\n    const [newEmail, setNewEmail] = useState('');\n    const [formErrors, setFormErrors] = useState({});\n    const [registrationErrors, setRegistrationErrors] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const config = useConfiguration();\n    const storage = useSessionStorage();\n    const dispatch = useDispatch();\n    const validate = useValidation();\n    const login = storage.getItem(\"login\");\n    const { data } = useSelector(dashboardSelector);\n    const navigate = useNavigate();\n    \n    useEffect(() =>{\n        document.title=\"Overture Account\";\n        \n    }, [config]);\n    const deactivateAccount = (event) => {\n        event.preventDefault();\n        dispatch(setLoadingPageTrue());\n        requestUtil(`${config.baseUrl}/Candidates/deactivate/${login.candidateId}`, 'POST').then(response => {\n            dispatch(logOut()).then(() => {\n                    dispatch(setLoadingPageFalse());\n                    navigate(\"/\")\n                    window.location.reload();\n                }\n            );\n        }).catch(error => {\n            dispatch(setLoadingPageFalse());\n            setErrorMessage(error.message);\n        });\n    }\n    const deleteAccount = (event) => {\n        event.preventDefault();\n        dispatch(setLoadingPageTrue());\n        requestUtil(`${config.baseUrl}/Candidates/deleteaccount/${login.candidateId}`, 'POST').then(response => {\n            dispatch(logOut()).then(() => {\n                    dispatch(setLoadingPageFalse());\n                    navigate(\"/\");\n                    window.location.reload();\n                }\n            );\n        }).catch(error => {\n            dispatch(setLoadingPageFalse());\n            setErrorMessage(error.message);\n        });\n    }\n    const editEmail = (event) => {\n        event.preventDefault();\n        setChangeEmail(!changeEmail);\n        setNewEmail('');\n        setErrorMessage('');\n        setMessage('');\n    }\n    const updateEmail = (target) => {\n        setNewEmail(target.value);\n    }\n    const validateEmail = () => {\n        const result = validate(\"updateEmail\", [{'name': 'email', data: newEmail}]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        if(newEmail===data.email) {\n            setFormErrors({\"email\": ['New email should not be same as old email']});\n            return false;\n        }\n        return result.valid;\n    }\n    const saveEmail = (event) => {\n        event.preventDefault();\n        if(validateEmail()){\n            dispatch(setLoadingPageTrue());\n            requestUtil(`${config.baseUrl}/Candidates/updateemailid`, \"POST\", {\n                candidateId: login.candidateId,\n                oldEmailId: login.email,\n                newEmailId: newEmail\n            }).then(response => {\n                setMessage(response.message);\n                requestUtil(`${config.baseUrl}/Candidates/sendmail-for-changeemailid`, \"POST\", {\n                    candidateId: login.candidateId,\n                    oldEmailId: login.email,\n                    newEmailId: newEmail\n                }).catch(error => {\n                    setErrorMessage(error.message || \"Failed to send email\");\n                    dispatch(setLoadingPageFalse());\n                })\n            }).catch(error => {\n                setErrorMessage(error.message || \"Failed to update email\");\n                dispatch(setLoadingPageFalse());\n            });\n        }\n    }\n    const validatePersonalInfo = () => {\n        const keys = Object.keys(data);\n        const registrationResult = validate(\"personalInfo\", keys.map(key => {\n            return {\n                name: key, data: data[key]\n            }\n        }));\n        if (registrationResult.valid) {\n            setRegistrationErrors({});\n        } else {\n            setRegistrationErrors(registrationResult.errors);\n        }\n        return registrationResult.valid;\n    }\n    const savePersonalInfo = () => {\n        if(validatePersonalInfo()){\n            dispatch(setLoadingPageTrue());\n            requestUtil(`${config.baseUrl}/Candidates/savemyaccountinfo`, \"POST\", {\n                candidateId: login.candidateId,\n                ...data\n            }).then(response => {\n                setMessage(response.message);\n                setLoadingPageFalse();\n               \n            }).catch(error => {\n                setErrorMessage(error.message || \"Failed to update personal info\");\n                dispatch(setLoadingPageFalse());\n            });\n        }\n    }\n    const cancelEdit = () => {\n        \n    }\n    return (\n    <div className=\"page\">\n        <div className=\"page-main\">\n            <div className=\"main-content app-content mt-0 main-background\">\n                <div className=\"side-app\">\n                    <div className=\"main-container container-fluid\">\n                       \n                        <div className=\"row\">\n                            {\n                                errorMessage && !changeEmail ?\n                                    <Error errorMessage={errorMessage} />\n                                    : null\n                            }\n                            <div className=\"col-xl-12\">\n                                <div className=\"card\">\n                                    {\n                                        changeEmail \n                                       \n                                    }\n                                    <div className=\"row\">\n                                        <div className=\"col-xl-8\">\n                                            \n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <div className=\"card-title\">Deactivate Account</div>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <p>When you de-activate you can come back anytime to re-activate</p>\n                                                    <label className=\"custom-control custom-checkbox mb-0\">\n                                                    </label>\n                                                </div>\n                                                <div className=\"card-footer text-end\">\n                                                    <a href=\"#\" onClick={deactivateAccount}\n                                                       className=\"btn btn-primary my-1\">Deactivate</a>&nbsp;\n                                                    <a href=\"javascript:void(0)\" className=\"btn btn-danger my-1\">Cancel</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-xl-4\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <div className=\"card-title\">Edit Contact</div>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <div className=\"text-center chat-image mb-5\">\n                                                        <div className=\"avatar avatar-xxl chat-profile mb-3 brround\">\n                                                            <a className=\"\" href=\"#\" onClick={(event => {\n                                                                event.preventDefault();\n                                                                navigate(\"/profile\");\n                                                            })}>\n                                                                <img alt=\"avatar\" src=\"/assets/images/users/7.jpg\"\n                                                                     className=\"brround\"/>\n                                                            </a>\n                                                        </div>\n                                                        <div className=\"main-chat-msg-name\">\n                                                            <a href=\"profile.html\">\n                                                                <h5 className=\"mb-1 text-dark fw-semibold\">{`${data.firstName} ${data.lastName}`}</h5>\n                                                            </a>\n                                                            <p className=\"text-muted mt-0 mb-0 pt-0 fs-13\">Registered nurse</p>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"card-body no-padding\">\n                                                        <div className=\"social social-profile-buttons\">\n                                                            <a className=\"social-icon text-primary\" href=\"\"><i className=\"fe fe-mail\"></i></a>\n                                                            <span className=\"my-auto\">{data.email}</span>\n                                                            <button id=\"bAcep\" type=\"button\" className=\"btn  btn-sm\"\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modaldemo8\"\n                                                                    title=\"Edit email\" onClick={editEmail}>\n                                                                <i className=\"fe fe-edit\"></i>\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"social social-profile-buttons\">\n                                                            <a className=\"social-icon text-primary\" href=\"\"><i\n                                                                className=\"fe fe-phone\"></i></a>\n                                                            <span className=\"my-auto\">{data.cellPhoneNumber}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-footer text-end\">\n                                                    <a href=\"javascript:void(0)\" className=\"btn btn-primary my-1\">Update</a>&nbsp;\n                                                    <a href=\"javascript:void(0)\" className=\"btn btn-danger my-1\">Cancel</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-xl-8\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <div className=\"card-title\">Delete Account</div>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <p>when you delete account, you will lose all your profile and\n                                                        associated\n                                                        information</p>\n                                                    <label className=\"custom-control custom-checkbox mb-0\">\n                                                    </label>\n                                                </div>\n                                                <div className=\"card-footer text-end\">\n                                                    <a href=\"#\" className=\"btn btn-primary my-1\" onClick={deleteAccount}>Delete\n                                                        Account</a>&nbsp;\n                                                    <a href=\"javascript:void(0)\" className=\"btn btn-danger my-1\">Cancel</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\VerifyEmail\\index.js",["329","330","331","332","333"],[],"import {useSearchParams} from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {setLoadingPageTrue, setLoadingPageFalse} from \"../common/Loader/action\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport requestUtil from \"../../helpers/requestUtil\";\nimport Loader from \"../common/Loader\";\n\nexport default () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    //const code = searchParams.get(\"activationCode\");\n    const code = encodeURIComponent(searchParams.get(\"activationCode\"));\n    const config = useConfiguration();\n    const navigate = useNavigate();\n    const [activationSuccess, setActivationSuccess] = useState(false);\n    const [activationMessage, setActivationMessage] = useState(\"\");\n    const url = config.baseUrl;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        document.title = \"VerifyEmail\";\n        dispatch(setLoadingPageTrue());\n        if (code && url) {\n            //requestUtil(`${url}/Candidates/verifynewemail?encryptedString=${code}`, \"GET\").then((result) => {\n                requestUtil(`${url}/Candidates/verifynewemail`, \"POST\", {encryptedString: code}).then((result) => {\n                dispatch(setLoadingPageFalse());\n                setActivationSuccess(true);\n                setActivationMessage(result.message);\n            }).catch((error) => {\n                dispatch(setLoadingPageFalse());\n                setActivationSuccess(false)\n                setActivationMessage(error.message);\n            });\n        }\n    }, [code, url]);\n    return (\n        <div className=\"\">\n            <Loader/>\n            <div className=\"\">\n                <div className=\"\">\n                    <div className=\"modal d-block pos-static\">\n                        <div className=\"container-login100\">\n                            <div className=\"wrap-login100 p-6\">\n                                <form className=\"login100-form validate-form\">\n                                <span className=\"login100-form-title pb-5\">\n                                    <a href=\"\"><img src=\"assets/images/brand/Overturelogofull.png\"\n                                                    className=\"header-brand-img\" alt=\"\"/></a>\n                                </span>\n                                    {\n                                        activationSuccess && <div className=\"\">\n                                            <div className=\"modal-body text-center p-4 pb-5\">\n                                                <i className=\"icon icon-check fs-70 text-success lh-1 my-4 d-inline-block\"></i>\n                                                <h4 className=\"text-success mb-4\">\n                                                    Congratulations!<br/>\n                                                    {activationMessage}\n                                                </h4>\n                                                <p className=\"mb-4\">\n                                                    <h4>\n                                                        Please login and submit your profile.\n                                                    </h4>\n                                                </p>\n                                                <a className=\"btn btn-primary\" href=\"#\" onClick={(event => {\n                                                    event.preventDefault();\n                                                    navigate(\"/\");\n                                                })}>OK</a>\n                                            </div>\n                                        </div>\n                                    }\n                                    {\n                                        !activationSuccess && <>\n                                            <div\n                                                className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                                role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\n                                                data-bs-autohide=\"false\">\n                                                <div className=\"d-flex\">\n                                                    <div className=\"toast-body\">\n                                                        {activationMessage || 'Activation failed! Please try again.'}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div>&nbsp;</div>\n                                        </>\n                                    }\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\UpdatePassword\\index.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347"],[],"import Loader from \"../common/Loader\";\nimport Header from \"../common/Header\";\nimport Sidebar from \"../common/Sidebar\";\nimport React, {useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport useSessionStorage from \"../../hooks/useSessionStorage\";\nimport TextField from \"../common/TextField\";\nimport requestUtil from \"../../helpers/requestUtil\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport useValidation from \"../../hooks/useValidation\";\nimport {setLoadingPageFalse, setLoadingPageTrue} from \"../common/Loader/action\";\n\nexport default () => {\n    const storage = useSessionStorage();\n    const navigate = useNavigate();\n    const config = useConfiguration();\n    const dispatch = useDispatch();\n    const [currentPassword, setCurrentPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [formErrors, setFormErrors] = useState({});\n    //const [passwordType, setPasswordType] = useState(\"password\");\n    const login = storage.getItem(\"login\");\n    const validate = useValidation();\n    const updateFormValue = (target) => {\n        if (target.name === \"currentPassword\") {\n            setCurrentPassword(target.value);\n        } else if (target.name === \"newPassword\") {\n            setNewPassword(target.value);\n        } else if (target.name === \"confirmPassword\") {\n            setConfirmPassword(target.value);\n        }\n    }\n    const validateForm = () => {\n        const result = validate('updatePassword', [{\n            name: 'currentPassword',\n            data: currentPassword\n        }, {name: 'newPassword', data: newPassword}, {name: 'confirmPassword', data: confirmPassword}]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        return result.valid;\n    }\n    const customPasswordCheck = () => {\n        if (newPassword && confirmPassword) {\n            if (newPassword !== confirmPassword) {\n                setFormErrors({'confirmPassword': [\"Password and Confirm Password must be same\"]});\n                return false;\n            }\n        }\n        if (currentPassword && newPassword) {\n            if (currentPassword === newPassword) {\n                setFormErrors({'newPassword': [\"New Password must be different from Current Password\"]});\n                return false;\n            }\n        }\n        return true;\n    }\n    const updatePassword = (event) => {\n        event.preventDefault();\n        if (validateForm() && customPasswordCheck()) {\n            dispatch(setLoadingPageTrue());\n            requestUtil(`${config.baseUrl}/Candidates/changepassword/`, \"POST\", {\n                candidateId: login.candidateId,\n                oldPassword: currentPassword,\n                newPassword: newPassword\n            }).then((result) => {\n                dispatch(setLoadingPageFalse());\n                if (result && result.isEmailExist) {\n                    navigate(\"/dashboard\");\n                } else {\n                    setErrorMessage(result.message);\n                }\n            }).catch((error) => {\n                dispatch(setLoadingPageFalse());\n                setErrorMessage(error.message);\n            });\n        }\n    }\n    useEffect(() => {\n        if (!login) {\n            // navigate('/');\n        }\n    }, [])\n\n\n    const [passwordType, setPasswordType] = useState(\"password\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [iconStyleText, seticonStyleText] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChange = (evnt) => {\n        setPasswordInput(evnt.target.value);\n    }\n    const togglePassword = () => {\n        if (passwordType === \"password\") {\n            setPasswordType(\"text\")\n            seticonStyleText(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordType(\"password\")\n        seticonStyleText(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    const [passwordTypeNew, setPasswordTypeNew] = useState(\"password\");\n    const [passwordInputNew, setPasswordInputNew] = useState(\"\");\n    const [iconStyleTextNew, seticonStyleTextNew] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChangeNew = (evnt) => {\n        setPasswordInputNew(evnt.target.value);\n    }\n    const togglePasswordNew = () => {\n        if (passwordTypeNew === \"password\") {\n            setPasswordTypeNew(\"text\")\n            seticonStyleTextNew(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordTypeNew(\"password\")\n        seticonStyleTextNew(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    const [passwordTypeConfirm, setPasswordTypeConfirm] = useState(\"password\");\n    const [passwordInputConfirm, setPasswordInputConfirm] = useState(\"\");\n    const [iconStyleTextConfirm, seticonStyleTextConfirm] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChangeConfirm = (evnt) => {\n        setPasswordInputConfirm(evnt.target.value);\n    }\n    const togglePasswordConfirm = () => {\n        if (passwordTypeConfirm === \"password\") {\n            setPasswordTypeConfirm(\"text\")\n            seticonStyleTextConfirm(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordTypeConfirm(\"password\")\n        seticonStyleTextConfirm(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-main\">\n                <div className=\"main-content app-content mt-0 main-background\">\n                    <div className=\"side-app\">\n                        <div className=\"main-container container-fluid\">\n                            <div className=\"page-header\">\n                                <h1 className=\"page-title\">Update Password</h1>\n                                <div>\n                                    <ol className=\"breadcrumb\">\n                                        <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Dashboard</a></li>\n                                        <li className=\"breadcrumb-item\" aria-current=\"page\"><a\n                                            href=\"javascript:void(0)\">Profile Builder</a></li>\n                                    </ol>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"row\">\n                                    <div className=\"col-xl-8\">\n                                        <div className=\"card\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">Update Password</h3>\n                                            </div>\n                                            {\n                                                errorMessage &&\n                                                <>\n                                                    <div\n                                                        className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                                        role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\n                                                        data-bs-autohide=\"false\">\n                                                        <div className=\"d-flex\">\n                                                            <div className=\"toast-body\">\n                                                                {errorMessage || 'Reset password failed! Please try again.'}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div>&nbsp;</div>\n                                                </>\n                                            }\n                                            <div className=\"col-md-12 col-xl-12\">\n                                                <div className=\"card-body\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-lg-6 col-md-12\">\n                                                            <div className=\"form-group\">\n                                                                <h5><label htmlFor=\"exampleInputname\"><b>Email :\n                                                                    {login && login.email} </b></label></h5>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <TextField placeholder={\"Current Password*\"}\n                                                                   divClass={\"col-lg-6\"} label={\"Current Password\"}\n                                                                   name={'currentPassword'} type={passwordType}\n                                                                   iconClass={iconStyleText}\n                                                                   onChange={handlePasswordChange}\n                                                                   errors={formErrors['currentPassword']}\n                                                                   clickeye={togglePassword}\n                                                                   updateValue={updateFormValue}/>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <TextField placeholder={\"New Password*\"} divClass={\"col-lg-6\"}\n                                                                   label={\"New Password\"}\n                                                                   name={'newPassword'} type={passwordTypeNew}\n                                                                   iconClass={iconStyleTextNew}\n                                                                   onChange={handlePasswordChangeNew}\n                                                                   errors={formErrors['newPassword']}\n                                                                   clickeye={togglePasswordNew}\n                                                                   updateValue={updateFormValue}/>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <TextField placeholder={\"Confirm Password*\"}\n                                                                   divClass={\"col-lg-6\"} label={\"Confirm Password\"}\n                                                                   name={'confirmPassword'} type={passwordTypeConfirm}\n                                                                   iconClass={iconStyleTextConfirm}\n                                                                   onChange={handlePasswordChangeConfirm}\n                                                                   errors={formErrors['confirmPassword']}\n                                                                   clickeye={togglePasswordConfirm}\n                                                                   updateValue={updateFormValue}/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"card-footer text-end\">\n                                                <a href=\"#\" className=\"btn btn-primary my-1\" onClick={updatePassword}>Update\n                                                    Password</a>\n                                                &nbsp;&nbsp;\n                                                <a href=\"#\" className=\"btn btn-danger my-1\" onClick={() => {\n                                                    navigate('/dashboard');\n                                                }}>Cancel</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\action.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\selector.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Login\\selector.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\action.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Dashboard\\card.js",["348"],[],"import React from \"react\";\nimport {CircularProgressbarWithChildren, buildStyles} from \"react-circular-progressbar\";\nimport 'react-circular-progressbar/dist/styles.css';\nimport './card.css';\n\nexport default (props) => {\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"text-center\">\n                    <small className=\"text-muted\">{props.smallTitle || 'My'}</small>\n                    <h2 className=\"mb-2 mt-0\">{props.title}</h2>\n                    <div className={\"circular-progress\"}>\n                        <CircularProgressbarWithChildren value={props.value} styles={buildStyles({\n                            pathColor: `${props.pathColor}`,\n                        })}>\n                            {props.children}\n                        </CircularProgressbarWithChildren>\n                    </div>\n                    <p className=\"mb-0 text-start\">\n                        <span className={`dot-label ${props.bgClass} me-2`}/>\n                        {props.valueLabel}<span className=\"float-end\">{props.value}{props.valueSuffix}</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\selector.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Signup\\action.js",["349"],[],"import {setLoading} from \"../common/Loader/slice\";\nimport requestUtil from '../../helpers/requestUtil';\nimport {signUpSuccess, signUpError, resetError} from './slice';\n\nexport function signup({url, formData}) {\n    return async dispatch => {\n        try {\n            dispatch(setLoading(true));\n            const data = await requestUtil(url, 'POST', formData);\n            dispatch(signUpSuccess(formData.email));\n        } catch (error) {\n            console.log(error);\n            dispatch(signUpError(error.message || \"Sign up failed\"));\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function reset() {\n    return async dispatch => {\n        dispatch(resetError());\n    };\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\hooks\\useValidation.js",["350"],[],"import useConfiguration from \"./useConfiguration\";\n\nfunction useValidation() {\n    const config = useConfiguration();\n\n    function validate(formName, values) {\n\n        const validationResult = {\n            valid: true,\n            errors: {}\n        };\n        const isEmptyObject = (value) => {\n            return typeof value === 'object' && Object.keys(value).length === 0;\n        }\n        const isEmpty = (value) => {\n            return value === undefined || value === null || (value.trim && value.trim()) === '' || isEmptyObject(value);\n        };\n        if (!config.validations) {\n            return validationResult;\n        }\n        const validationConfig = config.validations[formName];\n        values.map(value => {\n            const validationObj = validationConfig[value.name] || {};\n            validationResult.errors[value.name] = [];\n            if (validationObj.required && (isEmpty(value.data) || value.data.length === 0)) {\n                validationResult.errors[value.name].push(\"This field is required\");\n                validationResult.valid = false;\n            }\n            if (validationObj.min && value.data && value.data.length < validationObj.min) {\n                validationResult.errors[value.name].push(`At least ${validationObj.min} characters long`);\n                validationResult.valid = false;\n            }\n            if (validationObj.max && value.data && value.data.length > validationObj.max) {\n                validationResult.errors[value.name].push(`At most ${validationObj.max} characters long`);\n                validationResult.valid = false;\n            }\n            if (validationObj.pattern && value.data) {\n                const regex = new RegExp(validationObj.pattern);\n                if (!regex.test(value.data)) {\n                    validationResult.errors[value.name].push(validationObj.message || `This field has invalid pattern`);\n                    validationResult.valid = false;\n                }\n            }\n        });\n        return validationResult;\n    }\n\n    return validate;\n}\n\nexport default useValidation;\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\hooks\\useSessionStorage.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\hooks\\useConfiguration.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\action.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Account\\editEmail.js",["351"],[],"import React from \"react\";\nimport TextField from \"../common/TextField/withLabel\";\nimport Error from \"../common/Message/error\";\nimport Success from \"../common/Message/success\";\n\nexport default (props) => {\n    return (\n            <div className=\"row\">\n                {\n                    props.errorMessage && <Error errorMessage={props.errorMessage}/>\n                }\n                {\n                    props.message && <Success successMessage={props.message} />\n                }\n                <TextField divClass={\"col-lg-12 col-md-12\"} placeholder={\"Email\"} name={'email'} type={\"email\"}\n                           iconClass={\"zmdi zmdi-email\"} label={\"Email*\"}\n                           updateValue={props.updateValue} value={props.newEmail} errors={props.errors}/>\n            </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\helpers\\requestUtil.js",["352"],[],"export default async (url, method, body, headers, fileBody) => {\n    const requestHeaders = {\n        'Content-Type': fileBody ? '' : 'application/json',\n        'Accept': fileBody ? '*/*' : 'application/json',\n        ...headers\n    };\n    const request = fileBody ? {\n        method,\n        body\n    } : {\n        method,\n        headers: requestHeaders,\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(url, request);\n    if (response.ok) {\n        const data = await response.json();\n        if (data.statusCode && data.statusCode !== 200) {\n            throw new Error(data.message);\n        }\n        return data.data;\n    } else {\n        const contentType = response.headers.get(\"content-type\");\n        let message = '';\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n            const data = await response.json();\n            message = data.message ? data.message : data;\n        } else {\n            message = await response.text();\n        }\n        throw new Error(message);\n    }\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Message\\error.js",["353"],[],"import React from \"react\";\n\nexport default (props) => {\n\n    return (\n        <>\n            <div\n                className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                <div className=\"d-flex\">\n                    <div className=\"toast-body\">\n                        {props.errorMessage || 'Something went wrong! Please try again.'}\n                    </div>\n                </div>\n            </div>\n            <div>&nbsp;</div>\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Message\\success.js",["354"],[],"import React from \"react\";\n\nexport default (props) => {\n    return (\n        <>\n            <div\n                className=\"toast wrap-input100 align-items-center text-white bg-success border-0 show\"\n                role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                <div className=\"d-flex\">\n                    <div className=\"toast-body\">\n                        {props.successMessage}\n                    </div>\n                </div>\n            </div>\n            <div>&nbsp;</div>\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\index.js",["355"],[],"import {loaderSelector} from \"./selector\";\nimport {useSelector} from \"react-redux\";\n\nexport default () => {\n    const {isLoading} = useSelector(loaderSelector);\n    return (\n        <>\n            {\n                isLoading ? <div id=\"global-loader\">\n                    <img src=\"assets/images/loader.svg\" className=\"loader-img\" alt=\"Loader\"/>\n                </div> : null\n            }\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Header\\index.js",["356","357","358","359","360","361","362","363","364"],[],"import './header.css';\nimport {useNavigate} from \"react-router-dom\";\nimport useSessionStorage from \"../../../hooks/useSessionStorage\";\nimport {useDispatch} from \"react-redux\";\nimport {logOut} from \"../../Login/action\";\n\nexport default () => {\n    const navigate = useNavigate();\n    const storage = useSessionStorage();\n    const dispatch = useDispatch();\n    const login = storage.getItem(\"login\")\n    const gotoProfilePage = (event) => {\n        event.preventDefault();\n        navigate('/account');\n    }\n    const logout = (event) => {\n        event.preventDefault();\n        storage.setItem(\"login\", null);\n        dispatch(logOut()).then(() => {\n            navigate('/');\n            window.location.reload();\n        })\n    }\n    const gotoUpdatePassword = (event) => {\n        event.preventDefault();\n        navigate('/updatepassword');\n    }\n    return (\n        <>\n            <div className=\"app-header header sticky app-header-margin\">\n                <div className=\"container-fluid main-container\">\n                    <div className=\"d-flex\">\n                        <a aria-label=\"Hide Sidebar\" className=\"app-sidebar__toggle\" data-bs-toggle=\"sidebar\"\n                           href=\"#\"></a>\n                        <a className=\"logo-horizontal\" href=\"MyDashboard\">\n                            <img src=\"/assets/images/brand/logo.png\" className=\"header-brand-img light-logo\"\n                                 alt=\"logo\"/>\n                            <img src=\"/assets/images/brand/logo-3.png\" className=\"header-brand-img light-logo\"\n                                 alt=\"logo\"/>\n                        </a>\n                        <div className=\"main-header-center ms-3 d-none d-lg-block\">\n                            <input className=\"form-control\" placeholder=\"Search for results...\" type=\"search\"/>\n                            <button className=\"btn px-0 pt-2\"><i className=\"fe fe-search\" aria-hidden=\"true\"></i>\n                            </button>\n                        </div>\n                        <div className=\"d-flex order-lg-2 ms-auto header-right-icons\">\n                            <button className=\"navbar-toggler navresponsive-toggler d-lg-none ms-auto\" type=\"button\"\n                                    data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent-4\"\n                                    aria-controls=\"navbarSupportedContent-4\" aria-expanded=\"false\"\n                                    aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon fe fe-more-vertical\"></span>\n                            </button>\n                            <div className=\"navbar navbar-collapse responsive-navbar p-0\">\n                                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-4\">\n                                    <div className=\"d-flex order-lg-2\">\n                                        {/*\n                                        <div className=\"dropdown  d-flex notifications\">\n                                            <a className=\"nav-link icon\" data-bs-toggle=\"dropdown\">\n                                                <i className=\"fe fe-bell\"></i><span className=\" pulse\"></span>\n                                            </a>\n                                            <div className=\"dropdown-menu dropdown-menu-end dropdown-menu-arrow\">\n                                                <div className=\"drop-heading border-bottom\">\n                                                    <div className=\"d-flex\">\n                                                        <h6 className=\"mt-1 mb-0 fs-16 fw-semibold text-dark\">Notifications</h6>\n                                                    </div>\n                                                </div>\n                                                <div className=\"notifications-menu\">\n                                                    <a className=\"dropdown-item d-flex\" href=\"notify-list.html\">\n                                                        <div\n                                                            className=\"me-3 notifyimg  bg-primary brround box-shadow-primary\">\n                                                            <i className=\"fe fe-mail\"></i>\n                                                        </div>\n                                                        <div className=\"mt-1 wd-80p\">\n                                                            <h5 className=\"notification-label mb-1\">New Application\n                                                                received</h5>\n                                                            <span className=\"notification-subtext\">3 days ago</span>\n                                                        </div>\n                                                    </a>\n                                                    <a className=\"dropdown-item d-flex\" href=\"notify-list.html\">\n                                                        <div\n                                                            className=\"me-3 notifyimg  bg-secondary brround box-shadow-secondary\">\n                                                            <i className=\"fe fe-check-circle\"></i>\n                                                        </div>\n                                                        <div className=\"mt-1 wd-80p\">\n                                                            <h5 className=\"notification-label mb-1\">Project has been\n                                                                approved</h5>\n                                                            <span className=\"notification-subtext\">2 hours ago</span>\n                                                        </div>\n                                                    </a>\n                                                    <a className=\"dropdown-item d-flex\" href=\"notify-list.html\">\n                                                        <div\n                                                            className=\"me-3 notifyimg  bg-success brround box-shadow-success\">\n                                                            <i className=\"fe fe-shopping-cart\"></i>\n                                                        </div>\n                                                        <div className=\"mt-1 wd-80p\">\n                                                            <h5 className=\"notification-label mb-1\">Your Product\n                                                                Delivered</h5>\n                                                            <span className=\"notification-subtext\">30 min ago</span>\n                                                        </div>\n                                                    </a>\n                                                    <a className=\"dropdown-item d-flex\" href=\"notify-list.html\">\n                                                        <div className=\"me-3 notifyimg bg-pink brround box-shadow-pink\">\n                                                            <i className=\"fe fe-user-plus\"></i>\n                                                        </div>\n                                                        <div className=\"mt-1 wd-80p\">\n                                                            <h5 className=\"notification-label mb-1\">Friend Requests</h5>\n                                                            <span className=\"notification-subtext\">1 day ago</span>\n                                                        </div>\n                                                    </a>\n                                                </div>\n                                                <div className=\"dropdown-divider m-0\"></div>\n                                                <a href=\"notify-list.html\"\n                                                   className=\"dropdown-item text-center p-3 text-muted\">View all\n                                                    Notification</a>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"dropdown  d-flex message\">\n                                            <a className=\"nav-link icon text-center\" data-bs-toggle=\"dropdown\">\n                                                <i className=\"fe fe-message-square\"></i><span\n                                                className=\"pulse-danger\"></span>\n                                            </a>\n                                            <div className=\"dropdown-menu dropdown-menu-end dropdown-menu-arrow\">\n                                                <div className=\"drop-heading border-bottom\">\n                                                    <div className=\"d-flex\">\n                                                        <h6 className=\"mt-1 mb-0 fs-16 fw-semibold text-dark\">You have 5\n                                                            Messages</h6>\n                                                        <div className=\"ms-auto\">\n                                                            <a href=\"#\"\n                                                               className=\"text-muted p-0 fs-12\">make all unread</a>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"message-menu\">\n                                                    <a className=\"dropdown-item d-flex\" href=\"chat.html\">\n                                                        <span\n                                                            className=\"avatar avatar-md brround me-3 align-self-center cover-image users1\"\n                                                            data-bs-image-src=\"~/assets/images/users/1.jpg\"></span>\n                                                        <div className=\"wd-90p\">\n                                                            <div className=\"d-flex\">\n                                                                <h5 className=\"mb-1\">Peter Theil</h5>\n                                                                <small className=\"text-muted ms-auto text-end\">\n                                                                    6:45 am\n                                                                </small>\n                                                            </div>\n                                                            <span>Commented on file Guest list....</span>\n                                                        </div>\n                                                    </a>\n                                                    <a className=\"dropdown-item d-flex\" href=\"chat.html\">\n                                                        <span\n                                                            className=\"avatar avatar-md brround me-3 align-self-center cover-image users15\"\n                                                            data-bs-image-src=\"~/assets/images/users/15.jpg\"></span>\n                                                        <div className=\"wd-90p\">\n                                                            <div className=\"d-flex\">\n                                                                <h5 className=\"mb-1\">Abagael Luth</h5>\n                                                                <small className=\"text-muted ms-auto text-end\">\n                                                                    10:35 am\n                                                                </small>\n                                                            </div>\n                                                            <span>New Meetup Started......</span>\n                                                        </div>\n                                                    </a>\n                                                    <a className=\"dropdown-item d-flex\" href=\"chat.html\">\n                                                        <span\n                                                            className=\"avatar avatar-md brround me-3 align-self-center cover-image users12\"\n                                                            data-bs-image-src=\"~/assets/images/users/12.jpg\"\n                                                            ></span>\n                                                        <div className=\"wd-90p\">\n                                                            <div className=\"d-flex\">\n                                                                <h5 className=\"mb-1\">Brizid Dawson</h5>\n                                                                <small className=\"text-muted ms-auto text-end\">\n                                                                    2:17 pm\n                                                                </small>\n                                                            </div>\n                                                            <span>Brizid is in the Warehouse...</span>\n                                                        </div>\n                                                    </a>\n                                                    <a className=\"dropdown-item d-flex\" href=\"chat.html\">\n                                                        <span\n                                                            className=\"avatar avatar-md brround me-3 align-self-center cover-image users4\"\n                                                            data-bs-image-src=\"~/assets/images/users/4.jpg\"\n                                                            ></span>\n                                                        <div className=\"wd-90p\">\n                                                            <div className=\"d-flex\">\n                                                                <h5 className=\"mb-1\">Shannon Shaw</h5>\n                                                                <small className=\"text-muted ms-auto text-end\">\n                                                                    7:55 pm\n                                                                </small>\n                                                            </div>\n                                                            <span>New Product Realease......</span>\n                                                        </div>\n                                                    </a>\n\n                                                </div>\n                                                <div className=\"dropdown-divider m-0\"></div>\n                                                <a href=\"#\"\n                                                   className=\"dropdown-item text-center p-3 text-muted\">See all\n                                                    Messages</a>\n                                            </div>\n                                        </div>\n                                        */}\n                                        <div className=\"dropdown d-flex profile-1\">\n                                            <a href=\"#\" data-bs-toggle=\"dropdown\"\n                                               className=\"nav-link leading-none d-flex\">\n                                                <img src=\"assets/images/users/nurseuserm.jpg\" alt=\"profile-user\"\n                                                     className=\"avatar  profile-user brround cover-image\"/>\n                                            </a>\n                                            <div className=\"dropdown-menu dropdown-menu-end dropdown-menu-arrow\">\n                                                <div className=\"drop-heading\">\n                                                    <div className=\"text-center\">\n                                                        <h5 className=\"text-dark mb-0 fs-14 fw-semibold\">{login && login.fullName}</h5>\n                                                        <small className=\"text-muted\">Registered nurse</small>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dropdown-divider m-0\"></div>\n                                                <a className=\"dropdown-item\" href=\"#\" >\n                                                    <i className=\"dropdown-icon fe fe-user\"></i> My Account\n                                                </a>\n                                                <a className=\"dropdown-item\" href=\"#\" onClick={logout}>\n                                                    <i className=\"dropdown-icon fe fe-alert-circle\"></i> Sign out\n                                                </a>\n                                                <a className=\"dropdown-item\" href=\"#\" >\n                                                    <i className=\"dropdown-icon zmdi zmdi-lock\"></i> Update Password\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"jumps-prevent jumps-prevent-padding\"></div>\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\TextField\\index.js",["365","366"],[],"import React from \"react\";\nimport formatters from \"./formatters\";\nimport './input.css';\n\nexport default (props) => {\n    const formatValue = (target) => {\n        if (props.format) {\n            target.value = formatters(target.value, props.format);\n        }\n        return target;\n    };\n    return (\n        <>\n            {\n                props.label && <div className=\"wrap-input100 validate-input input-group\">\n                    <label htmlFor={props.name} className=\"logintextspace\"><h5>{props.label}</h5></label>\n                </div>\n            }\n            <div className=\"wrap-input100 validate-input input-group is-invalid\"\n                 data-bs-validate=\"Valid email is required: ex@abc.xyz\">\n                <a className={`input-group-text bg-white text-muted`}>\n                    <i className={props.iconClass} aria-hidden=\"true\" onClick={props.clickeye}></i>\n                </a>\n                <input\n                    className={`input100 border-start-0 form-control ms-0 ${(props.errors && props.errors.length > 0) && 'has-errors'}`}\n                    type={props.type} placeholder={props.placeholder} required={props.required}\n                    autoFocus={props.autoFocus}\n                    onChange={(event) => props.updateValue(formatValue(event.target))} name={props.name}/>\n            </div>\n            {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Sidebar\\index.js",["367","368","369","370","371","372"],[],"import './sidebar.css';\nimport {useNavigate} from \"react-router-dom\";\n\nexport default () => {\n    const navigate = useNavigate();\n    const navigateToProfile = (event) => {\n        event.preventDefault();\n        navigate('/profile');\n    }\n    return (\n        <>\n            <div className=\"sticky sticky-margin\">\n                <div className=\"app-sidebar__overlay\" data-bs-toggle=\"sidebar\"></div>\n                <div className=\"app-sidebar ps\">\n                    <div className=\"side-header\">\n                        <a className=\"header-brand1\" href=\"#\">\n                            <img src=\"assets/images/brand/logo.png\" className=\"header-brand-img desktop-logo\"\n                                 alt=\"logo\"/>\n                            <img src=\"assets/images/brand/logo-1.png\" className=\"header-brand-img toggle-logo\"\n                                 alt=\"logo\"/>\n                            <img src=\"assets/images/brand/logo-2.png\" className=\"header-brand-img light-logo\"\n                                 alt=\"logo\"/>\n                            <img src=\"assets/images/brand/logo-3.png\" className=\"header-brand-img light-logo1\"\n                                 alt=\"logo\"/>\n                        </a>\n                    </div>\n                    <div className=\"main-sidemenu\">\n                        <div className=\"slide-left disabled\" id=\"slide-left\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#7b8191\" width=\"24\" height=\"24\"\n                                 viewBox=\"0 0 24 24\">\n                                <path d=\"M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z\"></path>\n                            </svg>\n                        </div>\n                        <ul className=\"side-menu side-menu-margin\">\n                            <li className=\"sub-category\">\n                                <h3>Main</h3>\n                            </li>\n                            <li className=\"slide\">\n                                <a className=\"side-menu__item\" data-bs-toggle=\"slide\" href=\"#\" onClick={(event) => {\n                                    event.preventDefault();\n                                    navigate('/dashboard');\n                                }}>\n                                    <i className=\"side-menu__icon fe fe-home\"></i>\n                                    <span className=\"side-menu__label\">Employer Dashboard</span>\n                                </a>\n                            </li>\n\n                            {/*<li className=\"sub-category\">\n                            <h3>Profilet</h3>\n    </li>*/}\n\n                            <li className=\"slide\">\n                                <a className=\"side-menu__item\" data-bs-toggle=\"slide\" href=\"#\" onClick={(event) => {\n                                    event.preventDefault();\n                                    navigate('/locations');\n                                }}\n                                   ><i\n                                    className=\"side-menu__icon fe fe-layers\"></i><span className=\"side-menu__label\">Locations</span></a>\n\n                            </li>\n\n                            <li className=\"slide\">\n                                <a className=\"side-menu__item\" data-bs-toggle=\"slide\" href=\"#\"\n                                   ><i\n                                    className=\"side-menu__icon fe fe-layers\"></i><span className=\"side-menu__label\">Menu 2</span></a>\n\n                            </li>\n                            {/*<li className=\"slide\">\n                            <a className=\"side-menu__item\" data-bs-toggle=\"slide\" href=\"ProfileEdit.html\"><i\n                                className=\"side-menu__icon fe fe-users\"></i><span className=\"side-menu__label\">My Account</span><i\n                                className=\"angle fe fe-chevron-right\"></i></a>\n\n                            <ul className=\"slide-menu open\">\n                                <li className=\"is-expanded\"><a href=\"ProfileEdit.html\" className=\"sub-slide-item\">My\n                                    Account</a></li>\n                                <li className=\"is-expanded\"><a href=\"BankAccount.html\" className=\"sub-slide-item\">Bank\n                                    Account</a></li>\n\n                            </ul>\n    </li>*/}\n\n                        </ul>\n                        <div className=\"slide-right\" id=\"slide-right\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#7b8191\" width=\"24\" height=\"24\"\n                                 viewBox=\"0 0 24 24\">\n                                <path\n                                    d=\"M10.707 17.707 16.414 12l-5.707-5.707-1.414 1.414L13.586 12l-4.293 4.293z\"></path>\n                            </svg>\n                        </div>\n                    </div>\n                    <div className=\"ps__rail-x rail\">\n                        <div className=\"ps__thumb-x railthumb\" tabIndex=\"0\"></div>\n                    </div>\n                    <div className=\"ps__rail-y railright\">\n                        <div className=\"ps__thumb-y railrightthumb\" tabIndex=\"0\"></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"jumps-prevent jump-padding\"></div>\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Footer\\index.js",["373"],[],"export default () => {\n\n    return (\n        <footer className=\"footer main-background\">\n            <div className=\"container\">\n                <div className=\"row align-items-center flex-row-reverse\">\n                    <div className=\"col-md-12 col-sm-12 text-center\">\n                        © 2022 Overture. All Rights Reserved.\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Checkbox\\index.js",["374"],[],"import React from \"react\";\n\nexport default (props) => {\n\n    return (\n        <>\n            <label className=\"custom-control custom-checkbox mt-4\">\n                <input type=\"checkbox\" className=\"custom-control-input\" name={props.name}\n                       value={props.value} checked={props.checked}\n                       onChange={(event => props.updateValue({name: props.name, value: event.target.checked}))}/>\n                <span className=\"custom-control-label\">\n                    {props.children}\n                </span>\n            </label>\n            {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n        </>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\TextField\\withLabel.js",["375"],[],"import React from \"react\";\nimport './input.css';\nimport formatters from \"./formatters\";\n\nexport default (props) => {\n    const formatValue = (target) => {\n        if (props.format) {\n            target.value = formatters(target.value, props.format);\n        }\n        return target;\n    };\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return (\n        <div className={divClass}>\n            <div className=\"form-group\">\n                {!props.noLabel && <label htmlFor={props.name}>{props.label}</label>}\n                <input type=\"text\" className=\"form-control\" id={props.name} value={props.value}\n                       placeholder={props.placeholder} name={props.name}\n                       onChange={(event) => props.updateValue(formatValue(event.target))}\n                       autoFocus={props.autoFocus}/>\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\Loader\\selector.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\common\\TextField\\formatters.js",["376"],[],"function phoneNumber(value) {\n    if (!value) return value;\n    const phoneNumber = value.replace(/[^\\d]/g, '');\n    const phoneNumberLength = phoneNumber.length;\n    if (phoneNumberLength < 4) return phoneNumber;\n    if (phoneNumberLength < 7) {\n        return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`;\n    }\n    return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(\n        3,\n        6\n    )}-${phoneNumber.slice(6, 10)}`;\n}\n\nexport default (value, format) => {\n    switch (format) {\n        case 'phone':\n            return phoneNumber(value);\n        default:\n            return value;\n    }\n};\n","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\index.js",["377","378","379","380","381","382","383","384","385","386"],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\action.js",["387"],[],"import {setLoading} from \"../common/Loader/slice\";\r\nimport requestUtil from \"../../helpers/requestUtil\";\r\nimport locationList from './list.json';\r\nimport { getLocationListSuccess, getLocationListError } from \"./slice\";\r\n\r\nexport function getLocationList() {\r\n    return async (dispatch) => {\r\n        dispatch(setLoading(true));\r\n        try {\r\n            //const response = await requestUtil(`${url}/Dashboard/myprofileinfo/${candidateId}`, \"GET\");\r\n            const response = locationList;\r\n            dispatch(getLocationListSuccess(response.data));\r\n        } catch (error) {\r\n            dispatch(getLocationListError(error.message));\r\n            dispatch(setLoading(false));\r\n        }\r\n        dispatch(setLoading(false));\r\n    };\r\n}","D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\slice.js",[],[],"D:\\React_Project\\DevOTWebUI_ReactTeam\\src\\components\\Locations\\selector.js",[],[],{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","severity":1,"message":"393","line":20,"column":13,"nodeType":"394","messageId":"395","endLine":21,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":20,"column":13,"nodeType":"398","messageId":"399","endLine":20,"endColumn":17,"fix":"400"},{"ruleId":"401","severity":1,"message":"402","line":14,"column":1,"nodeType":"403","endLine":190,"endColumn":2},{"ruleId":"404","severity":1,"message":"405","line":83,"column":12,"nodeType":"398","messageId":"406","endLine":83,"endColumn":25},{"ruleId":"407","severity":1,"message":"408","line":108,"column":37,"nodeType":"409","endLine":108,"endColumn":48},{"ruleId":"407","severity":1,"message":"408","line":160,"column":57,"nodeType":"409","endLine":161,"endColumn":85},{"ruleId":"407","severity":1,"message":"408","line":164,"column":53,"nodeType":"409","endLine":169,"endColumn":56},{"ruleId":"407","severity":1,"message":"408","line":174,"column":96,"nodeType":"409","endLine":176,"endColumn":129},{"ruleId":"401","severity":1,"message":"402","line":12,"column":1,"nodeType":"403","endLine":70,"endColumn":3},{"ruleId":"410","severity":1,"message":"411","line":29,"column":8,"nodeType":"412","endLine":29,"endColumn":16,"suggestions":"413"},{"ruleId":"404","severity":1,"message":"414","line":30,"column":11,"nodeType":"398","messageId":"406","endLine":30,"endColumn":22},{"ruleId":"407","severity":1,"message":"408","line":48,"column":37,"nodeType":"409","endLine":48,"endColumn":50},{"ruleId":"407","severity":1,"message":"408","line":53,"column":45,"nodeType":"409","endLine":53,"endColumn":80},{"ruleId":"401","severity":1,"message":"402","line":13,"column":1,"nodeType":"403","endLine":229,"endColumn":2},{"ruleId":"404","severity":1,"message":"415","line":14,"column":26,"nodeType":"398","messageId":"406","endLine":14,"endColumn":41},{"ruleId":"404","severity":1,"message":"405","line":97,"column":12,"nodeType":"398","messageId":"406","endLine":97,"endColumn":25},{"ruleId":"404","severity":1,"message":"416","line":113,"column":12,"nodeType":"398","messageId":"406","endLine":113,"endColumn":32},{"ruleId":"417","severity":1,"message":"418","line":204,"column":56,"nodeType":"409","messageId":"419","endLine":205,"endColumn":75,"fix":"420"},{"ruleId":"407","severity":1,"message":"408","line":215,"column":88,"nodeType":"409","endLine":216,"endColumn":121},{"ruleId":"401","severity":1,"message":"402","line":8,"column":1,"nodeType":"403","endLine":61,"endColumn":2},{"ruleId":"410","severity":1,"message":"421","line":23,"column":8,"nodeType":"412","endLine":23,"endColumn":16,"suggestions":"422"},{"ruleId":"407","severity":1,"message":"408","line":51,"column":41,"nodeType":"409","endLine":51,"endColumn":109},{"ruleId":"401","severity":1,"message":"402","line":13,"column":1,"nodeType":"403","endLine":90,"endColumn":2},{"ruleId":"407","severity":1,"message":"408","line":61,"column":33,"nodeType":"409","endLine":61,"endColumn":44},{"ruleId":"407","severity":1,"message":"408","line":77,"column":29,"nodeType":"409","endLine":77,"endColumn":100},{"ruleId":"407","severity":1,"message":"408","line":81,"column":66,"nodeType":"409","endLine":82,"endColumn":89},{"ruleId":"401","severity":1,"message":"402","line":10,"column":1,"nodeType":"403","endLine":95,"endColumn":2},{"ruleId":"404","severity":1,"message":"415","line":11,"column":26,"nodeType":"398","messageId":"406","endLine":11,"endColumn":41},{"ruleId":"404","severity":1,"message":"423","line":15,"column":12,"nodeType":"398","messageId":"406","endLine":15,"endColumn":29},{"ruleId":"410","severity":1,"message":"424","line":38,"column":8,"nodeType":"412","endLine":38,"endColumn":19,"suggestions":"425"},{"ruleId":"407","severity":1,"message":"408","line":49,"column":37,"nodeType":"409","endLine":49,"endColumn":48},{"ruleId":"426","severity":1,"message":"427","line":53,"column":65,"nodeType":"428","messageId":"429","endLine":53,"endColumn":67},{"ruleId":"407","severity":1,"message":"408","line":65,"column":49,"nodeType":"409","endLine":68,"endColumn":53},{"ruleId":"426","severity":1,"message":"427","line":73,"column":65,"nodeType":"428","messageId":"429","endLine":73,"endColumn":67},{"ruleId":"401","severity":1,"message":"402","line":12,"column":1,"nodeType":"403","endLine":191,"endColumn":2},{"ruleId":"404","severity":1,"message":"415","line":13,"column":26,"nodeType":"398","messageId":"406","endLine":13,"endColumn":41},{"ruleId":"410","severity":1,"message":"424","line":44,"column":8,"nodeType":"412","endLine":44,"endColumn":19,"suggestions":"430"},{"ruleId":"404","severity":1,"message":"405","line":99,"column":12,"nodeType":"398","messageId":"406","endLine":99,"endColumn":25},{"ruleId":"404","severity":1,"message":"416","line":115,"column":12,"nodeType":"398","messageId":"406","endLine":115,"endColumn":32},{"ruleId":"407","severity":1,"message":"408","line":138,"column":33,"nodeType":"409","endLine":138,"endColumn":44},{"ruleId":"407","severity":1,"message":"408","line":178,"column":41,"nodeType":"409","endLine":178,"endColumn":112},{"ruleId":"407","severity":1,"message":"408","line":183,"column":33,"nodeType":"409","endLine":183,"endColumn":95},{"ruleId":"404","severity":1,"message":"431","line":1,"column":8,"nodeType":"398","messageId":"406","endLine":1,"endColumn":14},{"ruleId":"404","severity":1,"message":"432","line":2,"column":8,"nodeType":"398","messageId":"406","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"433","line":3,"column":8,"nodeType":"398","messageId":"406","endLine":3,"endColumn":15},{"ruleId":"404","severity":1,"message":"434","line":12,"column":8,"nodeType":"398","messageId":"406","endLine":12,"endColumn":17},{"ruleId":"401","severity":1,"message":"402","line":19,"column":1,"nodeType":"403","endLine":261,"endColumn":2},{"ruleId":"404","severity":1,"message":"435","line":22,"column":12,"nodeType":"398","messageId":"406","endLine":22,"endColumn":22},{"ruleId":"404","severity":1,"message":"436","line":23,"column":12,"nodeType":"398","messageId":"406","endLine":23,"endColumn":30},{"ruleId":"404","severity":1,"message":"437","line":24,"column":12,"nodeType":"398","messageId":"406","endLine":24,"endColumn":19},{"ruleId":"404","severity":1,"message":"438","line":75,"column":11,"nodeType":"398","messageId":"406","endLine":75,"endColumn":22},{"ruleId":"404","severity":1,"message":"439","line":91,"column":11,"nodeType":"398","messageId":"406","endLine":91,"endColumn":20},{"ruleId":"404","severity":1,"message":"440","line":129,"column":11,"nodeType":"398","messageId":"406","endLine":129,"endColumn":27},{"ruleId":"404","severity":1,"message":"441","line":145,"column":11,"nodeType":"398","messageId":"406","endLine":145,"endColumn":21},{"ruleId":"407","severity":1,"message":"408","line":180,"column":53,"nodeType":"409","endLine":181,"endColumn":89},{"ruleId":"407","severity":1,"message":"408","line":182,"column":53,"nodeType":"409","endLine":182,"endColumn":114},{"ruleId":"442","severity":1,"message":"443","line":182,"column":61,"nodeType":"444","messageId":"445","endLine":182,"endColumn":81},{"ruleId":"407","severity":1,"message":"408","line":194,"column":61,"nodeType":"409","endLine":197,"endColumn":65},{"ruleId":"407","severity":1,"message":"408","line":211,"column":61,"nodeType":"409","endLine":211,"endColumn":109},{"ruleId":"407","severity":1,"message":"408","line":220,"column":61,"nodeType":"409","endLine":220,"endColumn":109},{"ruleId":"407","severity":1,"message":"408","line":227,"column":53,"nodeType":"409","endLine":227,"endColumn":115},{"ruleId":"442","severity":1,"message":"443","line":227,"column":61,"nodeType":"444","messageId":"445","endLine":227,"endColumn":81},{"ruleId":"407","severity":1,"message":"408","line":228,"column":53,"nodeType":"409","endLine":228,"endColumn":114},{"ruleId":"442","severity":1,"message":"443","line":228,"column":61,"nodeType":"444","messageId":"445","endLine":228,"endColumn":81},{"ruleId":"407","severity":1,"message":"408","line":245,"column":53,"nodeType":"409","endLine":245,"endColumn":122},{"ruleId":"407","severity":1,"message":"408","line":247,"column":53,"nodeType":"409","endLine":247,"endColumn":114},{"ruleId":"442","severity":1,"message":"443","line":247,"column":61,"nodeType":"444","messageId":"445","endLine":247,"endColumn":81},{"ruleId":"401","severity":1,"message":"402","line":10,"column":1,"nodeType":"403","endLine":92,"endColumn":2},{"ruleId":"404","severity":1,"message":"415","line":11,"column":26,"nodeType":"398","messageId":"406","endLine":11,"endColumn":41},{"ruleId":"410","severity":1,"message":"424","line":35,"column":8,"nodeType":"412","endLine":35,"endColumn":19,"suggestions":"446"},{"ruleId":"407","severity":1,"message":"408","line":46,"column":37,"nodeType":"409","endLine":46,"endColumn":48},{"ruleId":"407","severity":1,"message":"408","line":62,"column":49,"nodeType":"409","endLine":65,"endColumn":53},{"ruleId":"404","severity":1,"message":"431","line":1,"column":8,"nodeType":"398","messageId":"406","endLine":1,"endColumn":14},{"ruleId":"404","severity":1,"message":"432","line":2,"column":8,"nodeType":"398","messageId":"406","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"433","line":3,"column":8,"nodeType":"398","messageId":"406","endLine":3,"endColumn":15},{"ruleId":"401","severity":1,"message":"402","line":14,"column":1,"nodeType":"403","endLine":238,"endColumn":2},{"ruleId":"410","severity":1,"message":"447","line":88,"column":8,"nodeType":"412","endLine":88,"endColumn":10,"suggestions":"448"},{"ruleId":"404","severity":1,"message":"405","line":92,"column":12,"nodeType":"398","messageId":"406","endLine":92,"endColumn":25},{"ruleId":"404","severity":1,"message":"449","line":108,"column":12,"nodeType":"398","messageId":"406","endLine":108,"endColumn":28},{"ruleId":"404","severity":1,"message":"416","line":124,"column":12,"nodeType":"398","messageId":"406","endLine":124,"endColumn":32},{"ruleId":"407","severity":1,"message":"408","line":149,"column":73,"nodeType":"409","endLine":149,"endColumn":102},{"ruleId":"442","severity":1,"message":"443","line":149,"column":81,"nodeType":"444","messageId":"445","endLine":149,"endColumn":101},{"ruleId":"407","severity":1,"message":"408","line":150,"column":93,"nodeType":"409","endLine":151,"endColumn":71},{"ruleId":"442","severity":1,"message":"443","line":151,"column":50,"nodeType":"444","messageId":"445","endLine":151,"endColumn":70},{"ruleId":"407","severity":1,"message":"408","line":221,"column":49,"nodeType":"409","endLine":221,"endColumn":119},{"ruleId":"407","severity":1,"message":"408","line":224,"column":49,"nodeType":"409","endLine":226,"endColumn":52},{"ruleId":"401","severity":1,"message":"402","line":6,"column":1,"nodeType":"403","endLine":28,"endColumn":2},{"ruleId":"404","severity":1,"message":"450","line":9,"column":19,"nodeType":"398","messageId":"406","endLine":9,"endColumn":23},{"ruleId":"451","severity":1,"message":"452","line":22,"column":26,"nodeType":"453","messageId":"454","endLine":22,"endColumn":28},{"ruleId":"401","severity":1,"message":"402","line":6,"column":1,"nodeType":"403","endLine":20,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":1,"column":1,"nodeType":"403","endLine":33,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":3,"column":1,"nodeType":"403","endLine":19,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":3,"column":1,"nodeType":"403","endLine":18,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":4,"column":1,"nodeType":"403","endLine":15,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":7,"column":1,"nodeType":"403","endLine":237,"endColumn":2},{"ruleId":"404","severity":1,"message":"455","line":12,"column":11,"nodeType":"398","messageId":"406","endLine":12,"endColumn":26},{"ruleId":"404","severity":1,"message":"456","line":24,"column":11,"nodeType":"398","messageId":"406","endLine":24,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":33,"column":25,"nodeType":"409","endLine":34,"endColumn":37},{"ruleId":"407","severity":1,"message":"408","line":33,"column":25,"nodeType":"409","endLine":34,"endColumn":37},{"ruleId":"407","severity":1,"message":"408","line":203,"column":45,"nodeType":"409","endLine":204,"endColumn":89},{"ruleId":"407","severity":1,"message":"408","line":216,"column":49,"nodeType":"409","endLine":216,"endColumn":88},{"ruleId":"407","severity":1,"message":"408","line":219,"column":49,"nodeType":"409","endLine":219,"endColumn":104},{"ruleId":"407","severity":1,"message":"408","line":222,"column":49,"nodeType":"409","endLine":222,"endColumn":88},{"ruleId":"401","severity":1,"message":"402","line":5,"column":1,"nodeType":"403","endLine":33,"endColumn":2},{"ruleId":"407","severity":1,"message":"459","line":21,"column":17,"nodeType":"409","endLine":21,"endColumn":71},{"ruleId":"401","severity":1,"message":"402","line":4,"column":1,"nodeType":"403","endLine":102,"endColumn":2},{"ruleId":"404","severity":1,"message":"460","line":6,"column":11,"nodeType":"398","messageId":"406","endLine":6,"endColumn":28},{"ruleId":"407","severity":1,"message":"408","line":16,"column":25,"nodeType":"409","endLine":16,"endColumn":63},{"ruleId":"407","severity":1,"message":"408","line":39,"column":33,"nodeType":"409","endLine":42,"endColumn":36},{"ruleId":"407","severity":1,"message":"408","line":53,"column":33,"nodeType":"409","endLine":57,"endColumn":37},{"ruleId":"407","severity":1,"message":"408","line":63,"column":33,"nodeType":"409","endLine":64,"endColumn":37},{"ruleId":"401","severity":1,"message":"402","line":1,"column":1,"nodeType":"403","endLine":14,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":3,"column":1,"nodeType":"403","endLine":18,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":5,"column":1,"nodeType":"403","endLine":25,"endColumn":2},{"ruleId":"401","severity":1,"message":"402","line":15,"column":1,"nodeType":"403","endLine":22,"endColumn":3},{"ruleId":"404","severity":1,"message":"461","line":7,"column":9,"nodeType":"398","messageId":"406","endLine":7,"endColumn":20},{"ruleId":"401","severity":1,"message":"402","line":14,"column":1,"nodeType":"403","endLine":197,"endColumn":2},{"ruleId":"410","severity":1,"message":"424","line":26,"column":10,"nodeType":"412","endLine":26,"endColumn":12,"suggestions":"462"},{"ruleId":"407","severity":1,"message":"408","line":43,"column":65,"nodeType":"409","endLine":43,"endColumn":94},{"ruleId":"442","severity":1,"message":"443","line":43,"column":73,"nodeType":"444","messageId":"445","endLine":43,"endColumn":93},{"ruleId":"407","severity":1,"message":"459","line":96,"column":57,"nodeType":"409","endLine":96,"endColumn":177},{"ruleId":"407","severity":1,"message":"459","line":98,"column":61,"nodeType":"409","endLine":98,"endColumn":149},{"ruleId":"407","severity":1,"message":"459","line":99,"column":61,"nodeType":"409","endLine":99,"endColumn":149},{"ruleId":"407","severity":1,"message":"459","line":100,"column":61,"nodeType":"409","endLine":100,"endColumn":149},{"ruleId":"407","severity":1,"message":"459","line":102,"column":57,"nodeType":"409","endLine":102,"endColumn":169},{"ruleId":"404","severity":1,"message":"463","line":2,"column":8,"nodeType":"398","messageId":"406","endLine":2,"endColumn":19},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'data:' is defined but never used.","Identifier","unused",{"range":"466","text":"467"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'passwordInput' is assigned a value but never used.","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'login', and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["468"],"'editProfile' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","'passwordInputConfirm' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"469","text":"470"},"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["471"],"'activationSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["472"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["473"],"'Loader' is defined but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","'EditEmail' is defined but never used.","'formErrors' is assigned a value but never used.","'registrationErrors' is assigned a value but never used.","'message' is assigned a value but never used.","'updateEmail' is assigned a value but never used.","'saveEmail' is assigned a value but never used.","'savePersonalInfo' is assigned a value but never used.","'cancelEdit' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["474"],"React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.",["475"],"'passwordInputNew' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'gotoProfilePage' is assigned a value but never used.","'gotoUpdatePassword' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'navigateToProfile' is assigned a value but never used.","'useNavigate' is defined but never used.",["476"],"'requestUtil' is defined but never used.","no-global-assign","no-unsafe-negation",[423,429],"",{"desc":"477","fix":"478"},[10495,10495]," rel=\"noreferrer\"",{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"481","fix":"483"},{"desc":"481","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},"Update the dependencies array to be: [config, dispatch, login, navigate]",{"range":"489","text":"490"},"Update the dependencies array to be: [config, email]",{"range":"491","text":"492"},"Update the dependencies array to be: [code, dispatch, url]",{"range":"493","text":"494"},{"range":"495","text":"494"},{"range":"496","text":"494"},"Update the dependencies array to be: [login]",{"range":"497","text":"498"},"Update the dependencies array to be: [dispatch]",{"range":"499","text":"500"},[1085,1093],"[config, dispatch, login, navigate]",[769,777],"[config, email]",[1725,1736],"[code, dispatch, url]",[2107,2118],[1635,1646],[3505,3507],"[login]",[844,846],"[dispatch]"]