{"ast":null,"code":"import { setHolidayPreference, setPreferredWorkDays, setTravelDistance, setVaccination, addPreferredShifts, setMasterDatas, loadPreferencedata, removePreferredShifts } from './slice';\nimport { setLoading } from \"../../common/Loader/slice\";\nimport { nextTab } from \"../action\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport { stateToServer } from \"./transformer\";\nimport { setError } from \"../slice\";\nimport { updateProfileFlag } from \"../../Login/action\";\nexport function updateHolidayPreference(value) {\n  return dispatch => {\n    dispatch(setHolidayPreference(value));\n  };\n}\nexport function updatePreferredWorkDays(value) {\n  return dispatch => {\n    dispatch(setPreferredWorkDays(value));\n  };\n}\nexport function updateTravelDistance(value) {\n  return dispatch => {\n    dispatch(setTravelDistance(value));\n  };\n}\nexport function updateVaccination(value) {\n  return dispatch => {\n    dispatch(setVaccination(value));\n  };\n}\nexport function updatePreferredShifts(value, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addPreferredShifts(value));\n        break;\n\n      case 'remove':\n        dispatch(removePreferredShifts(value));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function getMasterData(baseUrl) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const shifts = await requestUtil(`${baseUrl}/Dropdown/GetPreferredShifts`, 'GET');\n      const travelDistance = await requestUtil(`${baseUrl}/Dropdown/GetTravelDistances`, 'GET');\n      const preferredWorkDays = await requestUtil(`${baseUrl}/Dropdown/GetPreferredWorkDays`, 'GET');\n      const holidayPreference = await requestUtil(`${baseUrl}/Dropdown/GetWillingtoworkholidays`, 'GET');\n      const covidVaccine = await requestUtil(`${baseUrl}/Dropdown/GetCovidvaccinated`, 'GET');\n      let keyIndex = 0;\n      const formattedHolidays = holidayPreference.reduce((acc, curr, index) => {\n        if (index % 3 === 0) {\n          keyIndex++;\n          acc[`row${keyIndex}`] = [curr];\n        } else {\n          acc[`row${keyIndex}`].push(curr);\n        }\n\n        return acc;\n      }, {});\n      const formattedWorkdays = preferredWorkDays.reduce((acc, curr, index) => {\n        if (index % 3 === 0) {\n          keyIndex++;\n          acc[`row${keyIndex}`] = [curr];\n        } else {\n          acc[`row${keyIndex}`].push(curr);\n        }\n\n        return acc;\n      }, {});\n      dispatch(setLoading(false));\n      dispatch(setMasterDatas({\n        shifts,\n        travelDistance,\n        preferredWorkDays: formattedWorkdays,\n        preferredWorkDaysRaw: preferredWorkDays,\n        holidayPreference: formattedHolidays,\n        covidVaccine,\n        holidayPreferenceRaw: holidayPreference\n      }));\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error.message));\n    }\n  };\n}\nexport function savePreference(_ref) {\n  let {\n    url,\n    userId,\n    candidateId,\n    gotoNextTab = true\n  } = _ref;\n  return async (dispatch, getState) => {\n    dispatch(setLoading(true));\n    const stateData = getState().preference;\n    const data = stateToServer(stateData, candidateId, userId);\n\n    try {\n      await requestUtil(`${url}/Candidates/savepreferenceinfo`, 'POST', data);\n\n      if (gotoNextTab) {\n        dispatch(nextTab());\n        dispatch(updateProfileFlag('isPreferenceInfoCompleted'));\n      }\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function getPreference(baseUrl, userId) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const data = await requestUtil(`${baseUrl}/Candidates/getpreferenceinfo/${userId}`, 'GET');\n      dispatch(setLoading(false));\n      dispatch(loadPreferencedata(data));\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error.message));\n    }\n  };\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/action.js"],"names":["setHolidayPreference","setPreferredWorkDays","setTravelDistance","setVaccination","addPreferredShifts","setMasterDatas","loadPreferencedata","removePreferredShifts","setLoading","nextTab","requestUtil","stateToServer","setError","updateProfileFlag","updateHolidayPreference","value","dispatch","updatePreferredWorkDays","updateTravelDistance","updateVaccination","updatePreferredShifts","action","getMasterData","baseUrl","shifts","travelDistance","preferredWorkDays","holidayPreference","covidVaccine","keyIndex","formattedHolidays","reduce","acc","curr","index","push","formattedWorkdays","preferredWorkDaysRaw","holidayPreferenceRaw","error","message","savePreference","url","userId","candidateId","gotoNextTab","getState","stateData","preference","data","getPreference"],"mappings":"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","sourcesContent":["import {\n    setHolidayPreference,\n    setPreferredWorkDays,\n    setTravelDistance,\n    setVaccination,\n    addPreferredShifts,\n    setMasterDatas,\n    loadPreferencedata,\n    removePreferredShifts\n} from './slice';\nimport {setLoading} from \"../../common/Loader/slice\";\nimport {nextTab} from \"../action\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport {stateToServer} from \"./transformer\";\nimport {setError} from \"../slice\";\nimport {updateProfileFlag} from \"../../Login/action\";\n\nexport function updateHolidayPreference(value) {\n    return (dispatch) => {\n        dispatch(setHolidayPreference(value));\n    };\n}\n\nexport function updatePreferredWorkDays(value) {\n    return (dispatch) => {\n        dispatch(setPreferredWorkDays(value));\n    };\n}\n\nexport function updateTravelDistance(value) {\n    return (dispatch) => {\n        dispatch(setTravelDistance(value));\n    };\n}\n\nexport function updateVaccination(value) {\n    return (dispatch) => {\n        dispatch(setVaccination(value));\n    };\n}\n\nexport function updatePreferredShifts(value, action) {\n    return (dispatch) => {\n        switch (action) {\n            case 'add':\n                dispatch(addPreferredShifts(value));\n                break;\n            case 'remove':\n                dispatch(removePreferredShifts(value));\n                break;\n            default:\n                break;\n        }\n    };\n}\n\nexport function getMasterData(baseUrl) {\n    return async (dispatch) => {\n        dispatch(setLoading(true));\n        try {\n            const shifts = await requestUtil(`${baseUrl}/Dropdown/GetPreferredShifts`, 'GET');\n            const travelDistance = await requestUtil(`${baseUrl}/Dropdown/GetTravelDistances`, 'GET');\n            const preferredWorkDays = await requestUtil(`${baseUrl}/Dropdown/GetPreferredWorkDays`, 'GET');\n            const holidayPreference = await requestUtil(`${baseUrl}/Dropdown/GetWillingtoworkholidays`, 'GET');\n            const covidVaccine = await requestUtil(`${baseUrl}/Dropdown/GetCovidvaccinated`, 'GET');\n            let keyIndex = 0;\n            const formattedHolidays = holidayPreference.reduce((acc, curr, index) => {\n                if (index % 3 === 0) {\n                    keyIndex++;\n                    acc[`row${keyIndex}`] = [curr];\n                } else {\n                    acc[`row${keyIndex}`].push(curr);\n                }\n                return acc;\n            }, {});\n\n            const formattedWorkdays = preferredWorkDays.reduce((acc, curr, index) => {\n                if (index % 3 === 0) {\n                    keyIndex++;\n                    acc[`row${keyIndex}`] = [curr];\n                } else {\n                    acc[`row${keyIndex}`].push(curr);\n                }\n                return acc;\n            }, {});\n\n            dispatch(setLoading(false));\n            dispatch(setMasterDatas({\n                shifts,\n                travelDistance,\n                preferredWorkDays: formattedWorkdays,\n                preferredWorkDaysRaw: preferredWorkDays,\n                holidayPreference: formattedHolidays,\n                covidVaccine,\n                holidayPreferenceRaw: holidayPreference\n            }));\n        } catch (error) {\n            dispatch(setLoading(false));\n            dispatch(setError(error.message));\n        }\n    };\n}\n\nexport function savePreference({url, userId, candidateId, gotoNextTab = true}) {\n    return async (dispatch, getState) => {\n        dispatch(setLoading(true));\n        const stateData = getState().preference;\n        const data = stateToServer(stateData, candidateId, userId);\n        try {\n            await requestUtil(`${url}/Candidates/savepreferenceinfo`, 'POST', data);\n            if (gotoNextTab) {\n                dispatch(nextTab());\n                dispatch(updateProfileFlag('isPreferenceInfoCompleted'));\n            }\n        } catch (error) {\n            dispatch(setError(error.message))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function getPreference(baseUrl, userId) {\n    return async (dispatch) => {\n        dispatch(setLoading(true));\n        try {\n            const data = await requestUtil(`${baseUrl}/Candidates/getpreferenceinfo/${userId}`, 'GET');\n            dispatch(setLoading(false));\n            dispatch(loadPreferencedata(data));\n        } catch (error) {\n            dispatch(setLoading(false));\n            dispatch(setError(error.message));\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}