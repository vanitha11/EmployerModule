{"ast":null,"code":"export function validateResume(formValues) {\n  const errorObj = {\n    isValid: true,\n    errors: {}\n  };\n\n  if (!formValues.categories || formValues.categories.length === 0) {\n    errorObj.errors.categories = [];\n    errorObj.errors.categories.push('Please select at least one category');\n    errorObj.isValid = false;\n  }\n\n  if (formValues.certifications) {\n    const certifications = formValues.certifications;\n    const isPrimaryPresent = isPrimaryCertEntered(certifications);\n\n    if (!isPrimaryPresent) {\n      if (!isOtherCertEntered(certifications)) {\n        errorObj.errors.certifications = {};\n        errorObj.errors.certifications.primary = [];\n        errorObj.errors.certifications.primary.push('Please select primary certification or enter other certification');\n        errorObj.isValid = false;\n      }\n    }\n  }\n\n  if (formValues.emrehr) {\n    const emrehr = formValues.emrehr;\n    const isPrimaryPresent = isPrimaryEmrehrEntered(emrehr);\n\n    if (!isPrimaryPresent) {\n      if (!isOtherEmrehrEntered(emrehr)) {\n        errorObj.errors.emrehr = {};\n        errorObj.errors.emrehr.primary = [];\n        errorObj.errors.emrehr.primary.push('Please select primary emr/ehr or enter other emr/ehr');\n        errorObj.isValid = false;\n      }\n    }\n  }\n\n  return errorObj;\n}\n\nconst isPrimaryCertEntered = certifications => {\n  if (certifications.primary && certifications.primary.length > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isOtherCertEntered = certifications => {\n  if (certifications.others && certifications.others.find(oth => !isEmpty(oth))) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isPrimaryEmrehrEntered = emrehr => {\n  if (emrehr.primary && emrehr.primary.length > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isOtherEmrehrEntered = emrehr => {\n  if (emrehr.others && emrehr.others.find(oth => !isEmpty(oth))) {\n    return true;\n  }\n\n  return false;\n};\n\nfunction isEmpty(str) {\n  return !str || str.length === 0;\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/customResumeValidation.js"],"names":["validateResume","formValues","errorObj","isValid","errors","categories","length","push","certifications","isPrimaryPresent","isPrimaryCertEntered","isOtherCertEntered","primary","emrehr","isPrimaryEmrehrEntered","isOtherEmrehrEntered","others","find","oth","isEmpty","str"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACvC,QAAMC,QAAQ,GAAE;AACZC,IAAAA,OAAO,EAAE,IADG;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAAhB;;AAIA,MAAG,CAACH,UAAU,CAACI,UAAZ,IAA0BJ,UAAU,CAACI,UAAX,CAAsBC,MAAtB,KAAiC,CAA9D,EAAgE;AAC5DJ,IAAAA,QAAQ,CAACE,MAAT,CAAgBC,UAAhB,GAA6B,EAA7B;AACAH,IAAAA,QAAQ,CAACE,MAAT,CAAgBC,UAAhB,CAA2BE,IAA3B,CAAgC,qCAAhC;AACAL,IAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;;AACD,MAAGF,UAAU,CAACO,cAAd,EAA8B;AAC1B,UAAMA,cAAc,GAAGP,UAAU,CAACO,cAAlC;AACA,UAAMC,gBAAgB,GAAGC,oBAAoB,CAACF,cAAD,CAA7C;;AACA,QAAG,CAACC,gBAAJ,EAAsB;AAClB,UAAG,CAACE,kBAAkB,CAACH,cAAD,CAAtB,EAAwC;AACpCN,QAAAA,QAAQ,CAACE,MAAT,CAAgBI,cAAhB,GAAiC,EAAjC;AACAN,QAAAA,QAAQ,CAACE,MAAT,CAAgBI,cAAhB,CAA+BI,OAA/B,GAAyC,EAAzC;AACAV,QAAAA,QAAQ,CAACE,MAAT,CAAgBI,cAAhB,CAA+BI,OAA/B,CAAuCL,IAAvC,CAA4C,kEAA5C;AACAL,QAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;AACJ;AACJ;;AACD,MAAGF,UAAU,CAACY,MAAd,EAAsB;AAClB,UAAMA,MAAM,GAAGZ,UAAU,CAACY,MAA1B;AACA,UAAMJ,gBAAgB,GAAGK,sBAAsB,CAACD,MAAD,CAA/C;;AACA,QAAG,CAACJ,gBAAJ,EAAsB;AAClB,UAAG,CAACM,oBAAoB,CAACF,MAAD,CAAxB,EAAkC;AAC9BX,QAAAA,QAAQ,CAACE,MAAT,CAAgBS,MAAhB,GAAyB,EAAzB;AACAX,QAAAA,QAAQ,CAACE,MAAT,CAAgBS,MAAhB,CAAuBD,OAAvB,GAAiC,EAAjC;AACAV,QAAAA,QAAQ,CAACE,MAAT,CAAgBS,MAAhB,CAAuBD,OAAvB,CAA+BL,IAA/B,CAAoC,sDAApC;AACAL,QAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;AACJ;AACJ;;AACD,SAAOD,QAAP;AACH;;AAED,MAAMQ,oBAAoB,GAAIF,cAAD,IAAoB;AAC7C,MAAGA,cAAc,CAACI,OAAf,IAA0BJ,cAAc,CAACI,OAAf,CAAuBN,MAAvB,GAAgC,CAA7D,EAA+D;AAC3D,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAMA,MAAMK,kBAAkB,GAAIH,cAAD,IAAoB;AAC3C,MAAGA,cAAc,CAACQ,MAAf,IAAyBR,cAAc,CAACQ,MAAf,CAAsBC,IAAtB,CAA2BC,GAAG,IAAI,CAACC,OAAO,CAACD,GAAD,CAA1C,CAA5B,EAA6E;AACzE,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAOA,MAAMJ,sBAAsB,GAAID,MAAD,IAAY;AACvC,MAAGA,MAAM,CAACD,OAAP,IAAkBC,MAAM,CAACD,OAAP,CAAeN,MAAf,GAAwB,CAA7C,EAA+C;AAC3C,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAMA,MAAMS,oBAAoB,GAAIF,MAAD,IAAY;AACrC,MAAGA,MAAM,CAACG,MAAP,IAAiBH,MAAM,CAACG,MAAP,CAAcC,IAAd,CAAmBC,GAAG,IAAI,CAACC,OAAO,CAACD,GAAD,CAAlC,CAApB,EAA6D;AACzD,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAMA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAQ,CAACA,GAAD,IAAQA,GAAG,CAACd,MAAJ,KAAe,CAA/B;AACH","sourcesContent":["export function validateResume(formValues) {\n    const errorObj ={\n        isValid: true,\n        errors: {}\n    }\n    if(!formValues.categories || formValues.categories.length === 0){\n        errorObj.errors.categories = [];\n        errorObj.errors.categories.push('Please select at least one category');\n        errorObj.isValid = false;\n    }\n    if(formValues.certifications) {\n        const certifications = formValues.certifications;\n        const isPrimaryPresent = isPrimaryCertEntered(certifications);\n        if(!isPrimaryPresent) {\n            if(!isOtherCertEntered(certifications)) {\n                errorObj.errors.certifications = {};\n                errorObj.errors.certifications.primary = []\n                errorObj.errors.certifications.primary.push('Please select primary certification or enter other certification');\n                errorObj.isValid = false;\n            }\n        }\n    }\n    if(formValues.emrehr) {\n        const emrehr = formValues.emrehr;\n        const isPrimaryPresent = isPrimaryEmrehrEntered(emrehr);\n        if(!isPrimaryPresent) {\n            if(!isOtherEmrehrEntered(emrehr)) {\n                errorObj.errors.emrehr = {};\n                errorObj.errors.emrehr.primary = []\n                errorObj.errors.emrehr.primary.push('Please select primary emr/ehr or enter other emr/ehr');\n                errorObj.isValid = false;\n            }\n        }\n    }\n    return errorObj;\n}\n\nconst isPrimaryCertEntered = (certifications) => {\n    if(certifications.primary && certifications.primary.length > 0){\n        return true;\n    }\n    return false;\n}\nconst isOtherCertEntered = (certifications) => {\n    if(certifications.others && certifications.others.find(oth => !isEmpty(oth))){\n        return true;\n    }\n    return false;\n}\n\nconst isPrimaryEmrehrEntered = (emrehr) => {\n    if(emrehr.primary && emrehr.primary.length > 0){\n        return true;\n    }\n    return false;\n}\nconst isOtherEmrehrEntered = (emrehr) => {\n    if(emrehr.others && emrehr.others.find(oth => !isEmpty(oth))){\n        return true;\n    }\n    return false;\n}\nfunction isEmpty(str) {\n    return (!str || str.length === 0 );\n}\n"]},"metadata":{},"sourceType":"module"}