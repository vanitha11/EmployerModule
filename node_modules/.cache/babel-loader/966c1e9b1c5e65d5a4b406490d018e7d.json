{"ast":null,"code":"import _toConsumableArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";import{serverToState}from\"./transformer\";var initialState={preferredShifts:[],travelDistance:{},preferredWorkDays:{preference:\"0\",options:[]},holidayPreference:{preference:\"0\",options:[]},vaccination:null,masterDatas:{shifts:[],travelDistance:[],preferredWorkDays:{},preferredWorkDaysRaw:[],covidVaccine:[],holidayPreference:{},holidayPreferenceRaw:[]}};export var preferenceSlice=createSlice({name:\"preference\",initialState:initialState,reducers:{loadPreferencedata:function loadPreferencedata(state,action){var transformedData=serverToState(action.payload,state.masterDatas);state.preferredShifts=transformedData.preferredShifts;state.travelDistance=transformedData.travelDistance;state.preferredWorkDays=transformedData.preferredWorkDays;state.holidayPreference=transformedData.holidayPreference;state.vaccination=transformedData.vaccination;},addPreferredShifts:function addPreferredShifts(state,action){var newShifts=[].concat(_toConsumableArray(state.preferredShifts),[action.payload]);state.preferredShifts=newShifts;},removePreferredShifts:function removePreferredShifts(state,action){var newShifts=state.preferredShifts.filter(function(shift){return shift.id!==action.payload.id;});state.preferredShifts=newShifts;},setTravelDistance:function setTravelDistance(state,action){state.travelDistance=action.payload;},setPreferredWorkDays:function setPreferredWorkDays(state,action){state.preferredWorkDays=action.payload;},setHolidayPreference:function setHolidayPreference(state,action){state.holidayPreference=action.payload;},setVaccination:function setVaccination(state,action){state.vaccination=action.payload;},setMasterDatas:function setMasterDatas(state,action){if(action.payload.shifts){state.masterDatas.shifts=action.payload.shifts;state.masterDatas.travelDistance=action.payload.travelDistance;state.masterDatas.preferredWorkDays=action.payload.preferredWorkDays;state.masterDatas.preferredWorkDaysRaw=action.payload.preferredWorkDaysRaw;state.masterDatas.holidayPreference=action.payload.holidayPreference;state.masterDatas.holidayPreferenceRaw=action.payload.holidayPreferenceRaw;state.masterDatas.covidVaccine=action.payload.covidVaccine;}}}});var _preferenceSlice$acti=preferenceSlice.actions,addPreferredShifts=_preferenceSlice$acti.addPreferredShifts,removePreferredShifts=_preferenceSlice$acti.removePreferredShifts,setTravelDistance=_preferenceSlice$acti.setTravelDistance,setPreferredWorkDays=_preferenceSlice$acti.setPreferredWorkDays,setHolidayPreference=_preferenceSlice$acti.setHolidayPreference,setVaccination=_preferenceSlice$acti.setVaccination,setMasterDatas=_preferenceSlice$acti.setMasterDatas,loadPreferencedata=_preferenceSlice$acti.loadPreferencedata;export{addPreferredShifts,removePreferredShifts,setTravelDistance,setPreferredWorkDays,setHolidayPreference,setVaccination,setMasterDatas,loadPreferencedata};export default preferenceSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/slice.js"],"names":["createSlice","serverToState","initialState","preferredShifts","travelDistance","preferredWorkDays","preference","options","holidayPreference","vaccination","masterDatas","shifts","preferredWorkDaysRaw","covidVaccine","holidayPreferenceRaw","preferenceSlice","name","reducers","loadPreferencedata","state","action","transformedData","payload","addPreferredShifts","newShifts","removePreferredShifts","filter","shift","id","setTravelDistance","setPreferredWorkDays","setHolidayPreference","setVaccination","setMasterDatas","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {serverToState} from \"./transformer\";\n\nconst initialState = {\n    preferredShifts: [],\n    travelDistance: {},\n    preferredWorkDays: {\n        preference: \"0\",\n        options: []\n    },\n    holidayPreference: {\n        preference: \"0\",\n        options: []\n    },\n    vaccination: null,\n    masterDatas: {\n        shifts: [],\n        travelDistance: [],\n        preferredWorkDays: {},\n        preferredWorkDaysRaw: [],\n        covidVaccine: [],\n        holidayPreference: {},\n        holidayPreferenceRaw: []\n    }\n}\n\nexport const preferenceSlice = createSlice({\n    name: \"preference\",\n    initialState,\n    reducers: {\n        loadPreferencedata: (state, action) => {\n            const transformedData = serverToState(action.payload, state.masterDatas);\n            state.preferredShifts = transformedData.preferredShifts;\n            state.travelDistance = transformedData.travelDistance;\n            state.preferredWorkDays = transformedData.preferredWorkDays;\n            state.holidayPreference = transformedData.holidayPreference;\n            state.vaccination = transformedData.vaccination;\n        },\n        addPreferredShifts: (state, action) => {\n            const newShifts = [...state.preferredShifts, action.payload];\n            state.preferredShifts = newShifts;\n        },\n        removePreferredShifts: (state, action) => {\n            const newShifts = state.preferredShifts.filter(shift => shift.id !== action.payload.id)\n            state.preferredShifts = newShifts;\n        },\n        setTravelDistance: (state, action) => {\n            state.travelDistance = action.payload;\n        },\n        setPreferredWorkDays: (state, action) => {\n            state.preferredWorkDays = action.payload;\n        },\n        setHolidayPreference: (state, action) => {\n            state.holidayPreference = action.payload;\n        },\n        setVaccination: (state, action) => {\n            state.vaccination = action.payload;\n        },\n        setMasterDatas: (state, action) => {\n            if (action.payload.shifts) {\n                state.masterDatas.shifts = action.payload.shifts;\n                state.masterDatas.travelDistance = action.payload.travelDistance;\n                state.masterDatas.preferredWorkDays = action.payload.preferredWorkDays;\n                state.masterDatas.preferredWorkDaysRaw = action.payload.preferredWorkDaysRaw;\n                state.masterDatas.holidayPreference = action.payload.holidayPreference;\n                state.masterDatas.holidayPreferenceRaw = action.payload.holidayPreferenceRaw;\n                state.masterDatas.covidVaccine = action.payload.covidVaccine;\n            }\n        }\n    }\n});\n\nexport const {\n    addPreferredShifts, removePreferredShifts, setTravelDistance, setPreferredWorkDays,\n    setHolidayPreference, setVaccination, setMasterDatas, loadPreferencedata\n} = preferenceSlice.actions;\nexport default preferenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}