{"ast":null,"code":"import React from\"react\";import'./input.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var divClass=props.divClass?props.divClass:'col-lg-6 col-md-12';return/*#__PURE__*/_jsx(\"div\",{className:divClass,children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[!props.noLabel&&/*#__PURE__*/_jsx(\"label\",{htmlFor:props.name,children:props.label}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:props.name,value:props.value,placeholder:props.placeholder,name:props.name,onChange:function onChange(event){return props.updateValue(event.target);},autoFocus:props.autoFocus}),props.errors&&props.errors.map(function(error){return/*#__PURE__*/_jsx(\"div\",{className:\"invalid-input\",children:error});})]})});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextField/withLabel.js"],"names":["React","props","divClass","noLabel","name","label","value","placeholder","event","updateValue","target","autoFocus","errors","map","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,C,wFAEA,eAAe,SAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAAN,CAAiBD,KAAK,CAACC,QAAvB,CAAkC,oBAAnD,CACA,mBACI,YAAK,SAAS,CAAEA,QAAhB,uBACI,aAAK,SAAS,CAAC,YAAf,WACM,CAACD,KAAK,CAACE,OAAP,eAAkB,cAAO,OAAO,CAAEF,KAAK,CAACG,IAAtB,UAA6BH,KAAK,CAACI,KAAnC,EADxB,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,cAA7B,CAA4C,EAAE,CAAEJ,KAAK,CAACG,IAAtD,CAA4D,KAAK,CAAEH,KAAK,CAACK,KAAzE,CACO,WAAW,CAAEL,KAAK,CAACM,WAD1B,CACuC,IAAI,CAAEN,KAAK,CAACG,IADnD,CAEO,QAAQ,CAAE,kBAACI,KAAD,QAAWP,CAAAA,KAAK,CAACQ,WAAN,CAAkBD,KAAK,CAACE,MAAxB,CAAX,EAFjB,CAGQ,SAAS,CAAET,KAAK,CAACU,SAHzB,EAFJ,CAMKV,KAAK,CAACW,MAAN,EAAgBX,KAAK,CAACW,MAAN,CAAaC,GAAb,CAAiB,SAAAC,KAAK,qBAAK,YAAK,SAAS,CAAC,eAAf,UAAgCA,KAAhC,EAAL,EAAtB,CANrB,GADJ,EADJ,CAYH,CAdD","sourcesContent":["import React from \"react\";\nimport './input.css';\n\nexport default (props) => {\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return(\n        <div className={divClass}>\n            <div className=\"form-group\">\n                { !props.noLabel && <label htmlFor={props.name}>{props.label}</label> }\n                <input type=\"text\" className=\"form-control\" id={props.name} value={props.value}\n                       placeholder={props.placeholder} name={props.name}\n                       onChange={(event) => props.updateValue(event.target)}\n                        autoFocus={props.autoFocus}/>\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}