{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={userName:undefined,items:[],loading:false};export var dashboardSlice=createSlice({name:'dashboard',initialState:initialState,reducers:{loadDashBoardRequest:function loadDashBoardRequest(state,action){state.loading=true;state.items=[];},loadDashBoardResponse:function loadDashBoardResponse(state,action){state.loading=false;state.items=action.payload;}}});var _dashboardSlice$actio=dashboardSlice.actions,loadDashBoardRequest=_dashboardSlice$actio.loadDashBoardRequest,loadDashBoardResponse=_dashboardSlice$actio.loadDashBoardResponse;export{loadDashBoardRequest,loadDashBoardResponse};export default dashboardSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Dashboard/slice.js"],"names":["createSlice","initialState","userName","undefined","items","loading","dashboardSlice","name","reducers","loadDashBoardRequest","state","action","loadDashBoardResponse","payload","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAEC,SADO,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,OAAO,CAAE,KAHQ,CAArB,CAMA,MAAO,IAAMC,CAAAA,cAAc,CAAGN,WAAW,CAAC,CACtCO,IAAI,CAAE,WADgC,CACnBN,YAAY,CAAZA,YADmB,CAEtCO,QAAQ,CAAE,CACPC,oBAAoB,CAAE,8BAACC,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACL,OAAN,CAAgB,IAAhB,CACAK,KAAK,CAACN,KAAN,CAAc,EAAd,CACH,CAJM,CAKPQ,qBAAqB,CAAE,+BAACF,KAAD,CAAQC,MAAR,CAAmB,CACtCD,KAAK,CAACL,OAAN,CAAgB,KAAhB,CACAK,KAAK,CAACN,KAAN,CAAcO,MAAM,CAACE,OAArB,CACH,CARM,CAF4B,CAAD,CAAlC,CAaA,0BAGHP,cAAc,CAACQ,OAHZ,CACHL,oBADG,uBACHA,oBADG,CAEHG,qBAFG,uBAEHA,qBAFG,C,mDAKP,cAAeN,CAAAA,cAAc,CAACS,OAA9B","sourcesContent":["import { createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    userName: undefined,\n    items: [],\n    loading: false,\n}\n\nexport const dashboardSlice = createSlice({\n    name: 'dashboard', initialState,\n    reducers: {\n       loadDashBoardRequest: (state, action) => {\n           state.loading = true;\n           state.items = []\n       },\n       loadDashBoardResponse: (state, action) => {\n           state.loading = false;\n           state.items = action.payload;\n       }\n    }\n});\nexport const {\n    loadDashBoardRequest,\n    loadDashBoardResponse\n} = dashboardSlice.actions;\n\nexport default dashboardSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}