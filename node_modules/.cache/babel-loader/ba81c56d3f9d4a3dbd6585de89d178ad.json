{"ast":null,"code":"import { setResumeBuilderData, setResumeBuilderError, setNoResume, setWorkHistory, setEducation, setCertifications, addPrimaryCertification, removePrimaryCertification, setSpecialities, setEducationLevel, addPrimaryEmrEhr, removePrimaryEmrEhr, setEmrEhr, setResumeFile, addCategory, removeCategory, setMasterDatas } from './slice';\nimport { setLoading } from \"../../common/Loader/slice\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport { nextTab } from \"../action\";\nexport function updateEducationLevel(level) {\n  return dispatch => {\n    dispatch(setEducationLevel(level));\n  };\n}\nexport function updateNoResume(data) {\n  return dispatch => {\n    dispatch(setNoResume(data));\n  };\n}\nexport function updateWorkHistory(workHistory) {\n  return dispatch => {\n    dispatch(setWorkHistory(workHistory));\n  };\n}\nexport function updateEducation(education) {\n  return dispatch => {\n    dispatch(setEducation(education));\n  };\n}\nexport function updateSpeciality(speciality) {\n  return dispatch => {\n    dispatch(setSpecialities(speciality));\n  };\n}\nexport function updatePrimaryCertification(cert, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addPrimaryCertification(cert));\n        break;\n\n      case 'remove':\n        dispatch(removePrimaryCertification(cert));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function updatePrimaryEmrEhr(emrEhr, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addPrimaryEmrEhr(emrEhr));\n        break;\n\n      case 'remove':\n        dispatch(removePrimaryEmrEhr(emrEhr));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function updateCategory(category, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addCategory(category));\n        break;\n\n      case 'remove':\n        dispatch(removeCategory(category));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function updateEmrEhr(emrEhr) {\n  return dispatch => {\n    dispatch(setEmrEhr(emrEhr));\n  };\n}\nexport function updateCertification(certification) {\n  return dispatch => {\n    dispatch(setCertifications(certification));\n  };\n}\nexport function setResumeBuilder(data) {\n  return async dispatch => {\n    dispatch(setResumeBuilderData(data));\n  };\n}\nexport function getCurrentResumeBuilder(_ref) {\n  let {\n    url,\n    userId\n  } = _ref;\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(`${url}/${userId}`, 'GET');\n      dispatch(setResumeBuilderData(response));\n    } catch (error) {\n      dispatch(setResumeBuilderError(true));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function saveResumeBuilder(_ref2) {\n  let {\n    url,\n    userId,\n    gotoNextTab = true\n  } = _ref2;\n  return async (dispatch, getState) => {\n    dispatch(setLoading(true));\n    const {\n      data\n    } = getState().resumeBuilder;\n\n    try {\n      //await requestUtil(`${url}/${userId}`, 'POST', data);\n      gotoNextTab && dispatch(nextTab());\n    } catch (error) {\n      dispatch(setResumeBuilderError(true));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function updateResumeFile(file) {\n  return dispatch => {\n    dispatch(setResumeFile(file));\n  };\n}\nexport function loadMasterDatas(url) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(`${url}/Dropdown/GetLevelOfEducations`, 'GET');\n      dispatch(setMasterDatas({\n        educationLevel: response\n      }));\n    } catch (error) {\n      dispatch(setResumeBuilderError(true));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function loadJobCategories(url, jobId) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(`${url}/Dropdown/getjobcategories/${jobId}`, 'GET');\n      dispatch(setMasterDatas({\n        jobCategories: response\n      }));\n    } catch (error) {\n      dispatch(setResumeBuilderError(true));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function loadCertifications(url, jobId) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(`${url}/Dropdown/getcertifications/${jobId}`, 'GET');\n      dispatch(setMasterDatas({\n        certifications: response\n      }));\n    } catch (error) {\n      dispatch(setResumeBuilderError(true));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function loadEmrehr(url, jobId) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(`${url}/Dropdown/getemrehrsystems/${jobId}`, 'GET');\n      dispatch(setMasterDatas({\n        emrehr: response\n      }));\n    } catch (error) {\n      dispatch(setResumeBuilderError(true));\n    }\n\n    dispatch(setLoading(false));\n  };\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/action.js"],"names":["setResumeBuilderData","setResumeBuilderError","setNoResume","setWorkHistory","setEducation","setCertifications","addPrimaryCertification","removePrimaryCertification","setSpecialities","setEducationLevel","addPrimaryEmrEhr","removePrimaryEmrEhr","setEmrEhr","setResumeFile","addCategory","removeCategory","setMasterDatas","setLoading","requestUtil","nextTab","updateEducationLevel","level","dispatch","updateNoResume","data","updateWorkHistory","workHistory","updateEducation","education","updateSpeciality","speciality","updatePrimaryCertification","cert","action","updatePrimaryEmrEhr","emrEhr","updateCategory","category","updateEmrEhr","updateCertification","certification","setResumeBuilder","getCurrentResumeBuilder","url","userId","response","error","saveResumeBuilder","gotoNextTab","getState","resumeBuilder","updateResumeFile","file","loadMasterDatas","educationLevel","loadJobCategories","jobId","jobCategories","loadCertifications","certifications","loadEmrehr","emrehr"],"mappings":"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","sourcesContent":["import { setResumeBuilderData, setResumeBuilderError, setNoResume, setWorkHistory,\n    setEducation, setCertifications, addPrimaryCertification, removePrimaryCertification,\n    setSpecialities, setEducationLevel, addPrimaryEmrEhr, removePrimaryEmrEhr, setEmrEhr,\n    setResumeFile, addCategory, removeCategory, setMasterDatas } from './slice';\nimport {setLoading} from \"../../common/Loader/slice\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport {nextTab} from \"../action\";\n\nexport function updateEducationLevel(level) {\n    return (dispatch) => {\n        dispatch(setEducationLevel(level));\n    }\n}\nexport function updateNoResume(data) {\n  return (dispatch) => {\n    dispatch(setNoResume(data));\n  };\n}\nexport function updateWorkHistory(workHistory) {\n  return (dispatch) => {\n    dispatch(setWorkHistory(workHistory));\n  };\n}\nexport function updateEducation(education) {\n  return (dispatch) => {\n    dispatch(setEducation(education));\n  };\n}\nexport function updateSpeciality(speciality) {\n  return (dispatch) => {\n    dispatch(setSpecialities(speciality));\n  };\n}\nexport function updatePrimaryCertification(cert, action) {\n  return (dispatch) => {\n      switch (action) {\n          case 'add':\n              dispatch(addPrimaryCertification(cert));\n              break;\n          case 'remove':\n              dispatch(removePrimaryCertification(cert));\n              break;\n          default:\n              break;\n      }\n  };\n}\n\nexport function updatePrimaryEmrEhr(emrEhr, action) {\n  return (dispatch) => {\n      switch (action) {\n          case 'add':\n              dispatch(addPrimaryEmrEhr(emrEhr));\n              break;\n          case 'remove':\n              dispatch(removePrimaryEmrEhr(emrEhr));\n              break;\n          default:\n              break;\n      }\n  };\n}\nexport function updateCategory(category, action) {\n    return (dispatch) => {\n        switch (action) {\n            case 'add':\n                dispatch(addCategory(category));\n                break;\n            case 'remove':\n                dispatch(removeCategory(category));\n                break;\n            default:\n                break;\n        }\n    };\n}\nexport function updateEmrEhr(emrEhr) {\n  return (dispatch) => {\n    dispatch(setEmrEhr(emrEhr));\n  };\n}\nexport function updateCertification(certification) {\n  return (dispatch) => {\n    dispatch(setCertifications(certification));\n  };\n}\n\nexport function setResumeBuilder(data) {\n    return async dispatch => {\n        dispatch(setResumeBuilderData(data));\n    };\n}\nexport function getCurrentResumeBuilder({url, userId}) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/${userId}`, 'GET');\n            dispatch(setResumeBuilderData(response));\n        } catch (error) {\n            dispatch(setResumeBuilderError(true))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function saveResumeBuilder({url, userId, gotoNextTab=true}) {\n    return async (dispatch, getState) => {\n        dispatch(setLoading(true));\n        const { data } = getState().resumeBuilder;\n        try {\n            //await requestUtil(`${url}/${userId}`, 'POST', data);\n            gotoNextTab && dispatch(nextTab());\n        } catch (error) {\n            dispatch(setResumeBuilderError(true))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function updateResumeFile(file) {\n    return (dispatch) => {\n        dispatch(setResumeFile(file));\n    };\n}\n\nexport function loadMasterDatas(url) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/Dropdown/GetLevelOfEducations`, 'GET');\n            dispatch(setMasterDatas({\n                educationLevel: response\n            }));\n        } catch (error) {\n            dispatch(setResumeBuilderError(true))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function loadJobCategories(url, jobId) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/Dropdown/getjobcategories/${jobId}`, 'GET');\n            dispatch(setMasterDatas({\n                jobCategories: response\n            }));\n        } catch (error) {\n            dispatch(setResumeBuilderError(true))\n        }\n        dispatch(setLoading(false));\n    };\n}\nexport function loadCertifications(url, jobId) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/Dropdown/getcertifications/${jobId}`, 'GET');\n            dispatch(setMasterDatas({\n                certifications: response\n            }));\n        } catch (error) {\n            dispatch(setResumeBuilderError(true))\n        }\n        dispatch(setLoading(false));\n    };\n}\nexport function loadEmrehr(url, jobId) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/Dropdown/getemrehrsystems/${jobId}`, 'GET');\n            dispatch(setMasterDatas({\n                emrehr: response\n            }));\n        } catch (error) {\n            dispatch(setResumeBuilderError(true))\n        }\n        dispatch(setLoading(false));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}