{"ast":null,"code":"import { setResumeBuilderData, setNoResume, setWorkHistory, setEducation, setCertifications, addPrimaryCertification, removePrimaryCertification, setSpecialities, setEducationLevel, addPrimaryEmrEhr, removePrimaryEmrEhr, setEmrEhr, setResumeFile, addCategory, removeCategory, setMasterDatas } from './slice';\nimport { setError } from \"../slice\";\nimport { setLoading } from \"../../common/Loader/slice\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport { nextTab } from \"../action\";\nimport { stateToServer } from './transformer';\nexport function updateEducationLevel(level) {\n  return dispatch => {\n    dispatch(setEducationLevel(level));\n  };\n}\nexport function updateNoResume(data) {\n  return dispatch => {\n    dispatch(setNoResume(data));\n  };\n}\nexport function updateWorkHistory(workHistory) {\n  return dispatch => {\n    dispatch(setWorkHistory(workHistory));\n  };\n}\nexport function updateEducation(education) {\n  return dispatch => {\n    dispatch(setEducation(education));\n  };\n}\nexport function updateSpeciality(speciality) {\n  return dispatch => {\n    dispatch(setSpecialities(speciality));\n  };\n}\nexport function updatePrimaryCertification(cert, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addPrimaryCertification(cert));\n        break;\n\n      case 'remove':\n        dispatch(removePrimaryCertification(cert));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function updatePrimaryEmrEhr(emrEhr, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addPrimaryEmrEhr(emrEhr));\n        break;\n\n      case 'remove':\n        dispatch(removePrimaryEmrEhr(emrEhr));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function updateCategory(category, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addCategory(category));\n        break;\n\n      case 'remove':\n        dispatch(removeCategory(category));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function updateEmrEhr(emrEhr) {\n  return dispatch => {\n    dispatch(setEmrEhr(emrEhr));\n  };\n}\nexport function updateCertification(certification) {\n  return dispatch => {\n    dispatch(setCertifications(certification));\n  };\n}\nexport function getCurrentResumeBuilder(_ref) {\n  let {\n    url,\n    userId\n  } = _ref;\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(`${url}/${userId}`, 'GET');\n      dispatch(setResumeBuilderData(response));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function saveResumeBuilder(_ref2) {\n  let {\n    url,\n    candidateId,\n    userId,\n    gotoNextTab = true\n  } = _ref2;\n  return async (dispatch, getState) => {\n    dispatch(setLoading(true));\n    const stateData = getState().resumeBuilder;\n    const transformedData = stateToServer(stateData, candidateId, userId);\n\n    try {\n      await requestUtil(`${url}/Candidates/savejobinfo`, 'POST', transformedData);\n      gotoNextTab && dispatch(nextTab());\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function updateResumeFile(file) {\n  return dispatch => {\n    dispatch(setResumeFile(file));\n  };\n}\nexport function loadMasterDatas(url, jobId) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const educationLevel = await requestUtil(`${url}/Dropdown/GetLevelOfEducations`, 'GET');\n      const jobCategories = await requestUtil(`${url}/Dropdown/getjobcategories/${jobId}`, 'GET');\n      const certifications = await requestUtil(`${url}/Dropdown/getcertifications/${jobId}`, 'GET');\n      const emrehr = await requestUtil(`${url}/Dropdown/getemrehrsystems/${jobId}`, 'GET');\n      const specialities = await requestUtil(`${url}/Dropdown/getspecialties/${jobId}`, 'GET');\n      dispatch(setMasterDatas({\n        educationLevel: educationLevel,\n        jobCategories,\n        certifications,\n        emrehr,\n        specialities\n      }));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function uploadResume(url, userId, file) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const formdata = new FormData();\n      formdata.append('file', file);\n      await requestUtil(`${url}/Candidates/resumeupload?CandidateId=${userId}`, 'POST', formdata, null, true);\n    } catch (error) {\n      dispatch(updateResumeFile({\n        name: ''\n      }));\n      dispatch(setError(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/action.js"],"names":["setResumeBuilderData","setNoResume","setWorkHistory","setEducation","setCertifications","addPrimaryCertification","removePrimaryCertification","setSpecialities","setEducationLevel","addPrimaryEmrEhr","removePrimaryEmrEhr","setEmrEhr","setResumeFile","addCategory","removeCategory","setMasterDatas","setError","setLoading","requestUtil","nextTab","stateToServer","updateEducationLevel","level","dispatch","updateNoResume","data","updateWorkHistory","workHistory","updateEducation","education","updateSpeciality","speciality","updatePrimaryCertification","cert","action","updatePrimaryEmrEhr","emrEhr","updateCategory","category","updateEmrEhr","updateCertification","certification","getCurrentResumeBuilder","url","userId","response","error","message","saveResumeBuilder","candidateId","gotoNextTab","getState","stateData","resumeBuilder","transformedData","updateResumeFile","file","loadMasterDatas","jobId","educationLevel","jobCategories","certifications","emrehr","specialities","uploadResume","formdata","FormData","append","name"],"mappings":"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","sourcesContent":["import { setResumeBuilderData, setNoResume, setWorkHistory,\n    setEducation, setCertifications, addPrimaryCertification, removePrimaryCertification,\n    setSpecialities, setEducationLevel, addPrimaryEmrEhr, removePrimaryEmrEhr, setEmrEhr,\n    setResumeFile, addCategory, removeCategory, setMasterDatas } from './slice';\nimport { setError } from \"../slice\";\nimport {setLoading} from \"../../common/Loader/slice\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport {nextTab} from \"../action\";\nimport { stateToServer } from './transformer';\n\nexport function updateEducationLevel(level) {\n    return (dispatch) => {\n        dispatch(setEducationLevel(level));\n    }\n}\nexport function updateNoResume(data) {\n  return (dispatch) => {\n    dispatch(setNoResume(data));\n  };\n}\nexport function updateWorkHistory(workHistory) {\n  return (dispatch) => {\n    dispatch(setWorkHistory(workHistory));\n  };\n}\nexport function updateEducation(education) {\n  return (dispatch) => {\n    dispatch(setEducation(education));\n  };\n}\nexport function updateSpeciality(speciality) {\n  return (dispatch) => {\n    dispatch(setSpecialities(speciality));\n  };\n}\nexport function updatePrimaryCertification(cert, action) {\n  return (dispatch) => {\n      switch (action) {\n          case 'add':\n              dispatch(addPrimaryCertification(cert));\n              break;\n          case 'remove':\n              dispatch(removePrimaryCertification(cert));\n              break;\n          default:\n              break;\n      }\n  };\n}\n\nexport function updatePrimaryEmrEhr(emrEhr, action) {\n  return (dispatch) => {\n      switch (action) {\n          case 'add':\n              dispatch(addPrimaryEmrEhr(emrEhr));\n              break;\n          case 'remove':\n              dispatch(removePrimaryEmrEhr(emrEhr));\n              break;\n          default:\n              break;\n      }\n  };\n}\nexport function updateCategory(category, action) {\n    return (dispatch) => {\n        switch (action) {\n            case 'add':\n                dispatch(addCategory(category));\n                break;\n            case 'remove':\n                dispatch(removeCategory(category));\n                break;\n            default:\n                break;\n        }\n    };\n}\nexport function updateEmrEhr(emrEhr) {\n  return (dispatch) => {\n    dispatch(setEmrEhr(emrEhr));\n  };\n}\nexport function updateCertification(certification) {\n  return (dispatch) => {\n    dispatch(setCertifications(certification));\n  };\n}\n\nexport function getCurrentResumeBuilder({url, userId}) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/${userId}`, 'GET');\n            dispatch(setResumeBuilderData(response));\n        } catch (error) {\n            dispatch(setError(error.message))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function saveResumeBuilder({url, candidateId, userId, gotoNextTab=true}) {\n    return async (dispatch, getState) => {\n        dispatch(setLoading(true));\n        const stateData = getState().resumeBuilder;\n        const transformedData = stateToServer(stateData, candidateId, userId);\n        try {\n            await requestUtil(`${url}/Candidates/savejobinfo`, 'POST', transformedData);\n            gotoNextTab && dispatch(nextTab());\n        } catch (error) {\n            dispatch(setError(error.message))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function updateResumeFile(file) {\n    return (dispatch) => {\n        dispatch(setResumeFile(file));\n    };\n}\n\nexport function loadMasterDatas(url, jobId) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const educationLevel = await requestUtil(`${url}/Dropdown/GetLevelOfEducations`, 'GET');\n            const jobCategories = await requestUtil(`${url}/Dropdown/getjobcategories/${jobId}`, 'GET');\n            const certifications = await requestUtil(`${url}/Dropdown/getcertifications/${jobId}`, 'GET');\n            const emrehr = await requestUtil(`${url}/Dropdown/getemrehrsystems/${jobId}`, 'GET');\n            const specialities = await requestUtil(`${url}/Dropdown/getspecialties/${jobId}`, 'GET');\n            dispatch(setMasterDatas({\n                educationLevel: educationLevel,\n                jobCategories,\n                certifications,\n                emrehr,\n                specialities\n            }));\n        } catch (error) {\n            dispatch(setError(error.message))\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function uploadResume(url, userId, file) {\n    return async dispatch => {\n        dispatch(setLoading(true));\n        try {\n            const formdata = new FormData();\n            formdata.append('file', file);\n            await requestUtil(`${url}/Candidates/resumeupload?CandidateId=${userId}`, 'POST', formdata, null, true);\n        } catch (error) {\n            dispatch(updateResumeFile({\n                name: ''\n            }));\n            dispatch(setError(error.message))\n        }\n        dispatch(setLoading(false));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}