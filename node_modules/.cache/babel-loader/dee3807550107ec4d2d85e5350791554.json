{"ast":null,"code":"import _defineProperty from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import TextField from\"../../common/TextField/withLabel\";import React from\"react\";import{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{personalInfoSelector}from\"./selector\";import{updatePersonalInfo}from\"./action\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var errors=props.errors;var _useSelector=useSelector(personalInfoSelector),data=_useSelector.data;var dispatch=useDispatch();var _React$useState=React.useState(data),_React$useState2=_slicedToArray(_React$useState,2),form=_React$useState2[0],setForm=_React$useState2[1];useEffect(function(){dispatch(updatePersonalInfo(form));},[form]);var updateReferenceValue=function updateReferenceValue(target,index){var name=target.id.split('-')[0];var newReference=_toConsumableArray(data.references);var toUpdate=newReference.map(function(ref,i){if(i==index){return _objectSpread(_objectSpread({},ref),{},_defineProperty({},name,target.value));}return ref;});setForm(_objectSpread(_objectSpread({},data),{},{references:toUpdate}));};var removereferences=function removereferences(index){var newReferenses=_toConsumableArray(data.references);newReferenses.splice(index,1);setForm(_objectSpread(_objectSpread({},data),{},{references:newReferenses}));};var addNewRow=function addNewRow(){setForm(_objectSpread(_objectSpread({},data),{},{references:[].concat(_toConsumableArray(data.references),[{firstName:'',lastName:'',phoneNumber:''}])}));};return/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-8 col-md-8\",children:[data.references.map(function(reference,index){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",id:\"direferences\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(TextField,{name:\"firstName-\".concat(index),label:'First Name',placeholder:\"First Name\",noLabel:false,divClass:\"col-lg-3 col-md-3\",value:reference.firstName,updateValue:function updateValue(target){return updateReferenceValue(target,index);},errors:errors[index]&&errors[index]['firstName']}),/*#__PURE__*/_jsx(TextField,{name:\"lastName-\".concat(index),label:'Last Name',placeholder:\"Last Name\",noLabel:false,divClass:\"col-lg-3 col-md-3\",value:reference.lastName,updateValue:function updateValue(target){return updateReferenceValue(target,index);},errors:errors[index]&&errors[index]['lastName']}),/*#__PURE__*/_jsx(TextField,{name:\"phoneNumber-\".concat(index),label:'Phone Number',placeholder:\"Phone Number\",noLabel:false,divClass:\"col-lg-3 col-md-3\",value:reference.phoneNumber,format:\"phone\",updateValue:function updateValue(target){return updateReferenceValue(target,index);},errors:errors[index]&&errors[index]['phoneNumber']}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm deleteIconMargin\",children:/*#__PURE__*/_jsx(\"a\",{onClick:function onClick(){return removereferences(index);},children:/*#__PURE__*/_jsx(\"i\",{className:\"fe fe-trash-2\"})})})]})},index);}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-md-3\",children:/*#__PURE__*/_jsx(\"a\",{id:\"btnreferences\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-1 col-md-3\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-2x icon-plus\",\"data-bs-toggle\":\"tooltip\",title:\"\",\"data-bs-original-title\":\"icon-plus\",\"aria-label\":\"Add References\",style:{\"font-size\":\"20px\"},onClick:addNewRow})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-md-3\",onClick:addNewRow,children:\"Add New\"})]})})})})]})});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/referenceForm.js"],"names":["TextField","React","useEffect","useSelector","useDispatch","personalInfoSelector","updatePersonalInfo","props","errors","data","dispatch","useState","form","setForm","updateReferenceValue","target","index","name","id","split","newReference","references","toUpdate","map","ref","i","value","removereferences","newReferenses","splice","addNewRow","firstName","lastName","phoneNumber","reference"],"mappings":"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","sourcesContent":["import TextField from \"../../common/TextField/withLabel\";\nimport React from \"react\";\nimport {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {personalInfoSelector} from \"./selector\";\nimport {updatePersonalInfo} from \"./action\";\n\nexport default (props) => {\n    const {errors} = props;\n    const {data} = useSelector(personalInfoSelector);\n    const dispatch = useDispatch();\n    const [form, setForm] = React.useState(data);\n    useEffect(() => {\n        dispatch(updatePersonalInfo(form));\n    }, [form]);\n    const updateReferenceValue = (target, index) => {\n        const name = target.id.split('-')[0];\n        const newReference = [...data.references];\n        const toUpdate = newReference.map((ref, i) => {\n            if (i == index) {\n                return {\n                    ...ref,\n                    [name]: target.value\n                }\n            }\n            return ref;\n        });\n        setForm({\n            ...data,\n            references: toUpdate\n        });\n    };\n    const removereferences = (index) => {\n        const newReferenses = [...data.references];\n        newReferenses.splice(index, 1);\n        setForm({\n            ...data,\n            references: newReferenses\n        });\n    };\n    const addNewRow = () => {\n        setForm({\n            ...data,\n            references: [\n                ...data.references,\n                {\n                    firstName: '',\n                    lastName: '',\n                    phoneNumber: ''\n                }\n            ]\n        });\n    };\n    return (\n        <div className=\"card-body\">\n            <div className=\"col-lg-8 col-md-8\">\n                {\n                    data.references.map((reference, index) => (\n                        <div className=\"row\" id=\"direferences\" key={index}>\n                            <div className=\"row\">\n                                <TextField name={`firstName-${index}`} label={'First Name'}\n                                           placeholder={\"First Name\"} noLabel={false}\n                                           divClass={\"col-lg-3 col-md-3\"}\n                                           value={reference.firstName}\n                                           updateValue={(target) => updateReferenceValue(target, index)}\n                                           errors={errors[index] && errors[index]['firstName']}/>\n                                <TextField name={`lastName-${index}`} label={'Last Name'}\n                                           placeholder={\"Last Name\"} noLabel={false}\n                                           divClass={\"col-lg-3 col-md-3\"}\n                                           value={reference.lastName}\n                                           updateValue={(target) => updateReferenceValue(target, index)}\n                                           errors={errors[index] && errors[index]['lastName']}/>\n                                <TextField name={`phoneNumber-${index}`} label={'Phone Number'}\n                                           placeholder={\"Phone Number\"} noLabel={false}\n                                           divClass={\"col-lg-3 col-md-3\"}\n                                           value={reference.phoneNumber} format={\"phone\"}\n                                           updateValue={(target) => updateReferenceValue(target, index)}\n                                           errors={errors[index] && errors[index]['phoneNumber']}/>\n                                <div className=\"col-sm deleteIconMargin\">\n                                    <a onClick={() => removereferences(index)}><i\n                                        className=\"fe fe-trash-2\"></i></a>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-md-3\">\n                        <a id=\"btnreferences\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-1 col-md-3\">\n                                    <i className=\"icon-2x icon-plus\" data-bs-toggle=\"tooltip\" title=\"\"\n                                       data-bs-original-title=\"icon-plus\"\n                                       aria-label=\"Add References\" style={{\"font-size\": \"20px\"}}\n                                       onClick={addNewRow}></i>\n                                </div>\n                                <div className=\"col-lg-6 col-md-3\" onClick={addNewRow}>\n                                    Add New\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}