{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isError: false,\n  isSuccess: false,\n  errorMessage: '',\n  data: {}\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginRequest: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.errorMessage = '';\n\n      data: {}\n    },\n    loginSuccess: (state, action) => {\n      state.isError = false;\n      state.isSuccess = true;\n      state.errorMessage = '';\n      state.data = action.payload;\n    },\n    loginFailure: (state, action) => {\n      state.isError = true;\n      state.isSuccess = false;\n      state.errorMessage = action.payload;\n    },\n    reset: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.errorMessage = '';\n      state.data = {};\n    }\n  }\n});\nexport const {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  reset\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Login/slice.js"],"names":["createSlice","initialState","isError","isSuccess","errorMessage","data","loginSlice","name","reducers","loginRequest","state","loginSuccess","action","payload","loginFailure","reset","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAClCO,EAAAA,IAAI,EAAE,OAD4B;AAElCN,EAAAA,YAFkC;AAIlCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAGC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,YAAN,GAAqB,EAArB;;AACAC,MAAAA,IAAI,EAAE,CAAE;AACT,KANO;AAORM,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACAO,MAAAA,KAAK,CAACN,YAAN,GAAqB,EAArB;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAaO,MAAM,CAACC,OAApB;AACD,KAZO;AAaRC,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,YAAN,GAAqBQ,MAAM,CAACC,OAA5B;AACD,KAjBO;AAkBRE,IAAAA,KAAK,EAAEL,KAAK,IAAI;AACdA,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,YAAN,GAAqB,EAArB;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAa,EAAb;AACD;AAvBO;AAJwB,CAAD,CAA9B;AA+BP,OAAO,MAAM;AACXI,EAAAA,YADW;AAEXE,EAAAA,YAFW;AAGXG,EAAAA,YAHW;AAITC,EAAAA;AAJS,IAKTT,UAAU,CAACU,OALR;AAOP,eAAeV,UAAU,CAACW,OAA1B","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nconst initialState = {\n  isError: false,\n  isSuccess: false,\n  errorMessage: '',\n  data: {}\n};\n\nexport const loginSlice = createSlice({\n    name: 'login'\n  , initialState,\n\n    reducers: {\n        loginRequest: (state) => {\n        state.isError = false;\n        state.isSuccess = false;\n        state.errorMessage = '';\n        data: {}\n      },\n      loginSuccess: (state, action) => {\n        state.isError = false;\n        state.isSuccess = true;\n        state.errorMessage = '';\n        state.data = action.payload;\n      },\n      loginFailure: (state, action) => {\n        state.isError = true;\n        state.isSuccess = false;\n        state.errorMessage = action.payload;\n      },\n      reset: state => {\n        state.isError = false;\n        state.isSuccess = false;\n        state.errorMessage = '';\n        state.data = {};\n      }\n    }\n});\n\nexport const {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n    reset\n} = loginSlice.actions;\n\nexport default loginSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}