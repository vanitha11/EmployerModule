{"ast":null,"code":"import React from\"react\";import'./textinput.css';import PhoneInput from'react-number-format';//mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var divClass=props.divClass?props.divClass:'col-lg-6 col-md-12';return/*#__PURE__*/_jsx(\"div\",{className:divClass,children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[!props.noLabel&&/*#__PURE__*/_jsx(\"label\",{htmlFor:props.name,children:props.label}),/*#__PURE__*/_jsx(PhoneInput,{type:\"text\",className:\"form-control\",id:props.name,value:props.value,placeholder:props.placeholder,name:props.name,onChange:function onChange(event){return props.updateValue(event.target);},autoFocus:props.autoFocus,format:\"###-###-####\"}),props.errors&&props.errors.map(function(error){return/*#__PURE__*/_jsx(\"div\",{className:\"invalid-input\",children:error});})]})});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextFieldPhoneNumber/index.js"],"names":["React","PhoneInput","props","divClass","noLabel","name","label","value","placeholder","event","updateValue","target","autoFocus","errors","map","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA;AACA;wFACA,eAAe,SAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAAN,CAAiBD,KAAK,CAACC,QAAvB,CAAkC,oBAAnD,CACA,mBACI,YAAK,SAAS,CAAEA,QAAhB,uBACI,aAAK,SAAS,CAAC,YAAf,WACM,CAACD,KAAK,CAACE,OAAP,eAAkB,cAAO,OAAO,CAAEF,KAAK,CAACG,IAAtB,UAA6BH,KAAK,CAACI,KAAnC,EADxB,cAEI,KAAC,UAAD,EAAY,IAAI,CAAC,MAAjB,CAAwB,SAAS,CAAC,cAAlC,CAAiD,EAAE,CAAEJ,KAAK,CAACG,IAA3D,CAAiE,KAAK,CAAEH,KAAK,CAACK,KAA9E,CACO,WAAW,CAAEL,KAAK,CAACM,WAD1B,CACuC,IAAI,CAAEN,KAAK,CAACG,IADnD,CAEO,QAAQ,CAAE,kBAACI,KAAD,QAAWP,CAAAA,KAAK,CAACQ,WAAN,CAAkBD,KAAK,CAACE,MAAxB,CAAX,EAFjB,CAGQ,SAAS,CAAET,KAAK,CAACU,SAHzB,CAGoC,MAAM,CAAC,cAH3C,EAFJ,CAiBKV,KAAK,CAACW,MAAN,EAAgBX,KAAK,CAACW,MAAN,CAAaC,GAAb,CAAiB,SAAAC,KAAK,qBAAK,YAAK,SAAS,CAAC,eAAf,UAAgCA,KAAhC,EAAL,EAAtB,CAjBrB,GADJ,EADJ,CAuBH,CAzBD","sourcesContent":["import React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'\n//mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\nexport default (props) => {\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return(\n        <div className={divClass}>\n            <div className=\"form-group\">\n                { !props.noLabel && <label htmlFor={props.name}>{props.label}</label> }\n                <PhoneInput type=\"text\" className=\"form-control\" id={props.name} value={props.value}\n                       placeholder={props.placeholder} name={props.name}\n                       onChange={(event) => props.updateValue(event.target)}\n                        autoFocus={props.autoFocus} format=\"###-###-####\" \n                        />\n    \n{/*<PhoneInput\n       \n        value=\"\"\n        prefix=\"\"\n        displayType=\"input\"\n        type=\"text\"\n        allowNegative={true}\n        format=\"###-###-####\" onValueChange={(event) => props.updateValue(event.target)} />\n*/}\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}