{"ast":null,"code":"import _toConsumableArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";import{serverToState}from\"./transformer\";var initialState={preferredShifts:[],travelDistance:{},preferredWorkDays:[],holidayPreference:{preference:\"0\",options:[]},vaccination:null,masterDatas:{shifts:[],travelDistance:[],preferredWorkDays:[],covidVaccine:[],holidayPreference:{},holidayPreferenceRaw:[]}};export var preferenceSlice=createSlice({name:\"preference\",initialState:initialState,reducers:{loadPreferencedata:function loadPreferencedata(state,action){var transformedData=serverToState(action.payload,state.masterDatas);state.preferredShifts=transformedData.preferredShifts;state.travelDistance=transformedData.travelDistance;state.preferredWorkDays=transformedData.preferredWorkDays;state.holidayPreference=transformedData.holidayPreference;state.vaccination=transformedData.vaccination;},addPreferredShifts:function addPreferredShifts(state,action){var newShifts=[].concat(_toConsumableArray(state.preferredShifts),[action.payload]);state.preferredShifts=newShifts;},removePreferredShifts:function removePreferredShifts(state,action){var newShifts=state.preferredShifts.filter(function(shift){return shift.id!==action.payload.id;});state.preferredShifts=newShifts;},setTravelDistance:function setTravelDistance(state,action){state.travelDistance=action.payload;},setPreferredWorkDays:function setPreferredWorkDays(state,action){state.preferredWorkDays=action.payload;},setHolidayPreference:function setHolidayPreference(state,action){state.holidayPreference=action.payload;},setVaccination:function setVaccination(state,action){state.vaccination=action.payload;},setMasterDatas:function setMasterDatas(state,action){if(action.payload.shifts){state.masterDatas.shifts=action.payload.shifts;state.masterDatas.travelDistance=action.payload.travelDistance;state.masterDatas.preferredWorkDays=action.payload.preferredWorkDays;state.masterDatas.holidayPreference=action.payload.holidayPreference;state.masterDatas.holidayPreferenceRaw=action.payload.holidayPreferenceRaw;state.masterDatas.covidVaccine=action.payload.covidVaccine;}}}});var _preferenceSlice$acti=preferenceSlice.actions,addPreferredShifts=_preferenceSlice$acti.addPreferredShifts,removePreferredShifts=_preferenceSlice$acti.removePreferredShifts,setTravelDistance=_preferenceSlice$acti.setTravelDistance,setPreferredWorkDays=_preferenceSlice$acti.setPreferredWorkDays,setHolidayPreference=_preferenceSlice$acti.setHolidayPreference,setVaccination=_preferenceSlice$acti.setVaccination,setMasterDatas=_preferenceSlice$acti.setMasterDatas,loadPreferencedata=_preferenceSlice$acti.loadPreferencedata;export{addPreferredShifts,removePreferredShifts,setTravelDistance,setPreferredWorkDays,setHolidayPreference,setVaccination,setMasterDatas,loadPreferencedata};export default preferenceSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/slice.js"],"names":["createSlice","serverToState","initialState","preferredShifts","travelDistance","preferredWorkDays","holidayPreference","preference","options","vaccination","masterDatas","shifts","covidVaccine","holidayPreferenceRaw","preferenceSlice","name","reducers","loadPreferencedata","state","action","transformedData","payload","addPreferredShifts","newShifts","removePreferredShifts","filter","shift","id","setTravelDistance","setPreferredWorkDays","setHolidayPreference","setVaccination","setMasterDatas","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport { serverToState } from \"./transformer\";\n\nconst initialState = {\n    preferredShifts: [],\n    travelDistance: {},\n    preferredWorkDays: [],\n    holidayPreference: {\n        preference: \"0\",\n        options: []\n    },\n    vaccination: null,\n    masterDatas: {\n        shifts: [],\n        travelDistance: [],\n        preferredWorkDays: [],\n        covidVaccine: [],\n        holidayPreference: {},\n        holidayPreferenceRaw: []\n    }\n}\n\nexport const preferenceSlice = createSlice({\n    name: \"preference\",\n    initialState,\n    reducers: {\n        loadPreferencedata: (state, action) => {\n          const transformedData = serverToState(action.payload, state.masterDatas);\n          state.preferredShifts = transformedData.preferredShifts;\n          state.travelDistance = transformedData.travelDistance;\n          state.preferredWorkDays = transformedData.preferredWorkDays;\n          state.holidayPreference = transformedData.holidayPreference;\n          state.vaccination = transformedData.vaccination;\n        },\n        addPreferredShifts: (state, action) => {\n            const newShifts = [...state.preferredShifts, action.payload];\n            state.preferredShifts = newShifts;\n        },\n        removePreferredShifts: (state, action) => {\n            const newShifts = state.preferredShifts.filter(shift => shift.id !== action.payload.id)\n            state.preferredShifts = newShifts;\n        },\n        setTravelDistance: (state, action) => {\n            state.travelDistance = action.payload;\n        },\n        setPreferredWorkDays: (state, action) => {\n            state.preferredWorkDays = action.payload;\n        },\n        setHolidayPreference: (state, action) => {\n            state.holidayPreference = action.payload;\n        },\n        setVaccination: (state, action) => {\n            state.vaccination = action.payload;\n        },\n        setMasterDatas: (state, action) => {\n            if(action.payload.shifts) {\n                state.masterDatas.shifts = action.payload.shifts;\n                state.masterDatas.travelDistance = action.payload.travelDistance;\n                state.masterDatas.preferredWorkDays = action.payload.preferredWorkDays\n                state.masterDatas.holidayPreference = action.payload.holidayPreference;\n                state.masterDatas.holidayPreferenceRaw = action.payload.holidayPreferenceRaw;\n                state.masterDatas.covidVaccine = action.payload.covidVaccine;\n            }\n        }\n    }\n});\n\nexport const { addPreferredShifts, removePreferredShifts, setTravelDistance, setPreferredWorkDays,\n    setHolidayPreference, setVaccination, setMasterDatas, loadPreferencedata } = preferenceSlice.actions;\nexport default preferenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}