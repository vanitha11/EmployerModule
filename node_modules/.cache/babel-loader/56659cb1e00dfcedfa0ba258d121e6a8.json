{"ast":null,"code":"export function validateResume(formValues) {\n  const errorObj = {\n    isValid: true,\n    errors: {}\n  };\n\n  if (!formValues.data.noResume) {\n    if (formValues.data.resumeFile && isEmpty(formValues.data.resumeFile.name)) {\n      errorObj.isValid = false;\n      errorObj.errors.resume = [];\n      errorObj.errors.resume.push('Please upload/enter a resume details');\n    }\n  }\n\n  if (!formValues.categories || formValues.categories.length === 0) {\n    errorObj.errors.categories = [];\n    errorObj.errors.categories.push('Please select at least one category');\n    errorObj.isValid = false;\n  }\n\n  if (formValues.certifications) {\n    const certifications = formValues.certifications;\n    const isPrimaryPresent = isPrimaryCertEntered(certifications);\n\n    if (!isPrimaryPresent) {\n      if (!isOtherCertEntered(certifications)) {\n        errorObj.errors.certifications = {};\n        errorObj.errors.certifications.primary = [];\n        errorObj.errors.certifications.primary.push('Please select primary certification or enter other certification');\n        errorObj.isValid = false;\n      }\n    }\n  }\n\n  if (formValues.emrehr) {\n    const emrehr = formValues.emrehr;\n    const isPrimaryPresent = isPrimaryEmrehrEntered(emrehr);\n\n    if (!isPrimaryPresent) {\n      if (!isOtherEmrehrEntered(emrehr)) {\n        errorObj.errors.emrehr = {};\n        errorObj.errors.emrehr.primary = [];\n        errorObj.errors.emrehr.primary.push('Please select primary emr/ehr or enter other emr/ehr');\n        errorObj.isValid = false;\n      }\n    }\n  }\n\n  if (formValues.specialities) {\n    formValues.specialities.find(speciality => {\n      if (speciality.skill === '' || speciality.years === '') {\n        errorObj.errors.specialities = [];\n        errorObj.errors.specialities.push('Please enter skill and years');\n        errorObj.isValid = false;\n      }\n    });\n  }\n\n  if (!formValues.educationLevel || formValues.educationLevel === '') {\n    errorObj.errors.educationLevel = [];\n    errorObj.errors.educationLevel.push('Please select education level');\n    errorObj.isValid = false;\n  }\n\n  return errorObj;\n}\n\nconst isPrimaryCertEntered = certifications => {\n  if (certifications.primary && certifications.primary.length > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isOtherCertEntered = certifications => {\n  if (certifications.others && certifications.others.find(oth => !isEmpty(oth))) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isPrimaryEmrehrEntered = emrehr => {\n  if (emrehr.primary && emrehr.primary.length > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isOtherEmrehrEntered = emrehr => {\n  if (emrehr.others && emrehr.others.find(oth => !isEmpty(oth))) {\n    return true;\n  }\n\n  return false;\n};\n\nfunction isEmpty(str) {\n  return !str || str.length === 0;\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/customResumeValidation.js"],"names":["validateResume","formValues","errorObj","isValid","errors","data","noResume","resumeFile","isEmpty","name","resume","push","categories","length","certifications","isPrimaryPresent","isPrimaryCertEntered","isOtherCertEntered","primary","emrehr","isPrimaryEmrehrEntered","isOtherEmrehrEntered","specialities","find","speciality","skill","years","educationLevel","others","oth","str"],"mappings":"AACA,OAAO,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACvC,QAAMC,QAAQ,GAAE;AACZC,IAAAA,OAAO,EAAE,IADG;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAAhB;;AAIA,MAAG,CAACH,UAAU,CAACI,IAAX,CAAgBC,QAApB,EAA8B;AAC1B,QAAGL,UAAU,CAACI,IAAX,CAAgBE,UAAhB,IAA8BC,OAAO,CAACP,UAAU,CAACI,IAAX,CAAgBE,UAAhB,CAA2BE,IAA5B,CAAxC,EAA2E;AACvEP,MAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgBM,MAAhB,GAAyB,EAAzB;AACAR,MAAAA,QAAQ,CAACE,MAAT,CAAgBM,MAAhB,CAAuBC,IAAvB,CAA4B,sCAA5B;AACH;AACJ;;AACD,MAAG,CAACV,UAAU,CAACW,UAAZ,IAA0BX,UAAU,CAACW,UAAX,CAAsBC,MAAtB,KAAiC,CAA9D,EAAgE;AAC5DX,IAAAA,QAAQ,CAACE,MAAT,CAAgBQ,UAAhB,GAA6B,EAA7B;AACAV,IAAAA,QAAQ,CAACE,MAAT,CAAgBQ,UAAhB,CAA2BD,IAA3B,CAAgC,qCAAhC;AACAT,IAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;;AACD,MAAGF,UAAU,CAACa,cAAd,EAA8B;AAC1B,UAAMA,cAAc,GAAGb,UAAU,CAACa,cAAlC;AACA,UAAMC,gBAAgB,GAAGC,oBAAoB,CAACF,cAAD,CAA7C;;AACA,QAAG,CAACC,gBAAJ,EAAsB;AAClB,UAAG,CAACE,kBAAkB,CAACH,cAAD,CAAtB,EAAwC;AACpCZ,QAAAA,QAAQ,CAACE,MAAT,CAAgBU,cAAhB,GAAiC,EAAjC;AACAZ,QAAAA,QAAQ,CAACE,MAAT,CAAgBU,cAAhB,CAA+BI,OAA/B,GAAyC,EAAzC;AACAhB,QAAAA,QAAQ,CAACE,MAAT,CAAgBU,cAAhB,CAA+BI,OAA/B,CAAuCP,IAAvC,CAA4C,kEAA5C;AACAT,QAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;AACJ;AACJ;;AACD,MAAGF,UAAU,CAACkB,MAAd,EAAsB;AAClB,UAAMA,MAAM,GAAGlB,UAAU,CAACkB,MAA1B;AACA,UAAMJ,gBAAgB,GAAGK,sBAAsB,CAACD,MAAD,CAA/C;;AACA,QAAG,CAACJ,gBAAJ,EAAsB;AAClB,UAAG,CAACM,oBAAoB,CAACF,MAAD,CAAxB,EAAkC;AAC9BjB,QAAAA,QAAQ,CAACE,MAAT,CAAgBe,MAAhB,GAAyB,EAAzB;AACAjB,QAAAA,QAAQ,CAACE,MAAT,CAAgBe,MAAhB,CAAuBD,OAAvB,GAAiC,EAAjC;AACAhB,QAAAA,QAAQ,CAACE,MAAT,CAAgBe,MAAhB,CAAuBD,OAAvB,CAA+BP,IAA/B,CAAoC,sDAApC;AACAT,QAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;AACJ;AACJ;;AACD,MAAGF,UAAU,CAACqB,YAAd,EAA4B;AACxBrB,IAAAA,UAAU,CAACqB,YAAX,CAAwBC,IAAxB,CAA6BC,UAAU,IAAI;AACvC,UAAGA,UAAU,CAACC,KAAX,KAAqB,EAArB,IAA2BD,UAAU,CAACE,KAAX,KAAqB,EAAnD,EAAuD;AACnDxB,QAAAA,QAAQ,CAACE,MAAT,CAAgBkB,YAAhB,GAA+B,EAA/B;AACApB,QAAAA,QAAQ,CAACE,MAAT,CAAgBkB,YAAhB,CAA6BX,IAA7B,CAAkC,8BAAlC;AACAT,QAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;AACJ,KAND;AAOH;;AACD,MAAG,CAACF,UAAU,CAAC0B,cAAZ,IAA8B1B,UAAU,CAAC0B,cAAX,KAA8B,EAA/D,EAAkE;AAC9DzB,IAAAA,QAAQ,CAACE,MAAT,CAAgBuB,cAAhB,GAAiC,EAAjC;AACAzB,IAAAA,QAAQ,CAACE,MAAT,CAAgBuB,cAAhB,CAA+BhB,IAA/B,CAAoC,+BAApC;AACAT,IAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACH;;AACD,SAAOD,QAAP;AACH;;AAED,MAAMc,oBAAoB,GAAIF,cAAD,IAAoB;AAC7C,MAAGA,cAAc,CAACI,OAAf,IAA0BJ,cAAc,CAACI,OAAf,CAAuBL,MAAvB,GAAgC,CAA7D,EAA+D;AAC3D,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAMA,MAAMI,kBAAkB,GAAIH,cAAD,IAAoB;AAC3C,MAAGA,cAAc,CAACc,MAAf,IAAyBd,cAAc,CAACc,MAAf,CAAsBL,IAAtB,CAA2BM,GAAG,IAAI,CAACrB,OAAO,CAACqB,GAAD,CAA1C,CAA5B,EAA6E;AACzE,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAOA,MAAMT,sBAAsB,GAAID,MAAD,IAAY;AACvC,MAAGA,MAAM,CAACD,OAAP,IAAkBC,MAAM,CAACD,OAAP,CAAeL,MAAf,GAAwB,CAA7C,EAA+C;AAC3C,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAMA,MAAMQ,oBAAoB,GAAIF,MAAD,IAAY;AACrC,MAAGA,MAAM,CAACS,MAAP,IAAiBT,MAAM,CAACS,MAAP,CAAcL,IAAd,CAAmBM,GAAG,IAAI,CAACrB,OAAO,CAACqB,GAAD,CAAlC,CAApB,EAA6D;AACzD,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAMA,SAASrB,OAAT,CAAiBsB,GAAjB,EAAsB;AAClB,SAAQ,CAACA,GAAD,IAAQA,GAAG,CAACjB,MAAJ,KAAe,CAA/B;AACH","sourcesContent":["\nexport function validateResume(formValues) {\n    const errorObj ={\n        isValid: true,\n        errors: {}\n    }\n    if(!formValues.data.noResume) {\n        if(formValues.data.resumeFile && isEmpty(formValues.data.resumeFile.name)) {\n            errorObj.isValid = false;\n            errorObj.errors.resume = [];\n            errorObj.errors.resume.push('Please upload/enter a resume details');\n        }\n    }\n    if(!formValues.categories || formValues.categories.length === 0){\n        errorObj.errors.categories = [];\n        errorObj.errors.categories.push('Please select at least one category');\n        errorObj.isValid = false;\n    }\n    if(formValues.certifications) {\n        const certifications = formValues.certifications;\n        const isPrimaryPresent = isPrimaryCertEntered(certifications);\n        if(!isPrimaryPresent) {\n            if(!isOtherCertEntered(certifications)) {\n                errorObj.errors.certifications = {};\n                errorObj.errors.certifications.primary = []\n                errorObj.errors.certifications.primary.push('Please select primary certification or enter other certification');\n                errorObj.isValid = false;\n            }\n        }\n    }\n    if(formValues.emrehr) {\n        const emrehr = formValues.emrehr;\n        const isPrimaryPresent = isPrimaryEmrehrEntered(emrehr);\n        if(!isPrimaryPresent) {\n            if(!isOtherEmrehrEntered(emrehr)) {\n                errorObj.errors.emrehr = {};\n                errorObj.errors.emrehr.primary = []\n                errorObj.errors.emrehr.primary.push('Please select primary emr/ehr or enter other emr/ehr');\n                errorObj.isValid = false;\n            }\n        }\n    }\n    if(formValues.specialities) {\n        formValues.specialities.find(speciality => {\n            if(speciality.skill === '' || speciality.years === '') {\n                errorObj.errors.specialities = [];\n                errorObj.errors.specialities.push('Please enter skill and years');\n                errorObj.isValid = false;\n            }\n        })\n    }\n    if(!formValues.educationLevel || formValues.educationLevel === ''){\n        errorObj.errors.educationLevel = [];\n        errorObj.errors.educationLevel.push('Please select education level');\n        errorObj.isValid = false;\n    }\n    return errorObj;\n}\n\nconst isPrimaryCertEntered = (certifications) => {\n    if(certifications.primary && certifications.primary.length > 0){\n        return true;\n    }\n    return false;\n}\nconst isOtherCertEntered = (certifications) => {\n    if(certifications.others && certifications.others.find(oth => !isEmpty(oth))){\n        return true;\n    }\n    return false;\n}\n\nconst isPrimaryEmrehrEntered = (emrehr) => {\n    if(emrehr.primary && emrehr.primary.length > 0){\n        return true;\n    }\n    return false;\n}\nconst isOtherEmrehrEntered = (emrehr) => {\n    if(emrehr.others && emrehr.others.find(oth => !isEmpty(oth))){\n        return true;\n    }\n    return false;\n}\nfunction isEmpty(str) {\n    return (!str || str.length === 0 );\n}\n"]},"metadata":{},"sourceType":"module"}