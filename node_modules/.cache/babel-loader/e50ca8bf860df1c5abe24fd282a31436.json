{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { serverToState } from \"./transformer\";\nconst initialState = {\n  preferredShifts: [],\n  travelDistance: {},\n  preferredWorkDays: {\n    preference: \"0\",\n    options: []\n  },\n  holidayPreference: {\n    preference: \"0\",\n    options: []\n  },\n  vaccination: null,\n  masterDatas: {\n    shifts: [],\n    travelDistance: [],\n    preferredWorkDays: {},\n    preferredWorkDaysRaw: [],\n    covidVaccine: [],\n    holidayPreference: {},\n    holidayPreferenceRaw: []\n  }\n};\nexport const preferenceSlice = createSlice({\n  name: \"preference\",\n  initialState,\n  reducers: {\n    loadPreferencedata: (state, action) => {\n      const transformedData = serverToState(action.payload, state.masterDatas);\n      state.preferredShifts = transformedData.preferredShifts;\n      state.travelDistance = transformedData.travelDistance;\n      state.preferredWorkDays = transformedData.preferredWorkDays;\n      state.holidayPreference = transformedData.holidayPreference;\n      state.vaccination = transformedData.vaccination;\n    },\n    addPreferredShifts: (state, action) => {\n      const newShifts = [...state.preferredShifts, action.payload];\n      state.preferredShifts = newShifts;\n    },\n    removePreferredShifts: (state, action) => {\n      const newShifts = state.preferredShifts.filter(shift => shift.id !== action.payload.id);\n      state.preferredShifts = newShifts;\n    },\n    setTravelDistance: (state, action) => {\n      state.travelDistance = action.payload;\n    },\n    setPreferredWorkDays: (state, action) => {\n      state.preferredWorkDays = action.payload;\n    },\n    setHolidayPreference: (state, action) => {\n      state.holidayPreference = action.payload;\n    },\n    setVaccination: (state, action) => {\n      state.vaccination = action.payload;\n    },\n    setMasterDatas: (state, action) => {\n      if (action.payload.shifts) {\n        state.masterDatas.shifts = action.payload.shifts;\n        state.masterDatas.travelDistance = action.payload.travelDistance;\n        state.masterDatas.preferredWorkDays = action.payload.preferredWorkDays;\n        state.masterDatas.preferredWorkDaysRaw = action.payload.preferredWorkDaysRaw;\n        state.masterDatas.holidayPreference = action.payload.holidayPreference;\n        state.masterDatas.holidayPreferenceRaw = action.payload.holidayPreferenceRaw;\n        state.masterDatas.covidVaccine = action.payload.covidVaccine;\n      }\n    }\n  }\n});\nexport const {\n  addPreferredShifts,\n  removePreferredShifts,\n  setTravelDistance,\n  setPreferredWorkDays,\n  setHolidayPreference,\n  setVaccination,\n  setMasterDatas,\n  loadPreferencedata\n} = preferenceSlice.actions;\nexport default preferenceSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/slice.js"],"names":["createSlice","serverToState","initialState","preferredShifts","travelDistance","preferredWorkDays","preference","options","holidayPreference","vaccination","masterDatas","shifts","preferredWorkDaysRaw","covidVaccine","holidayPreferenceRaw","preferenceSlice","name","reducers","loadPreferencedata","state","action","transformedData","payload","addPreferredShifts","newShifts","removePreferredShifts","filter","shift","id","setTravelDistance","setPreferredWorkDays","setHolidayPreference","setVaccination","setMasterDatas","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {serverToState} from \"./transformer\";\n\nconst initialState = {\n    preferredShifts: [],\n    travelDistance: {},\n    preferredWorkDays: {\n        preference: \"0\",\n        options: []\n    },\n    holidayPreference: {\n        preference: \"0\",\n        options: []\n    },\n    vaccination: null,\n    masterDatas: {\n        shifts: [],\n        travelDistance: [],\n        preferredWorkDays: {},\n        preferredWorkDaysRaw: [],\n        covidVaccine: [],\n        holidayPreference: {},\n        holidayPreferenceRaw: []\n    }\n}\n\nexport const preferenceSlice = createSlice({\n    name: \"preference\",\n    initialState,\n    reducers: {\n        loadPreferencedata: (state, action) => {\n            const transformedData = serverToState(action.payload, state.masterDatas);\n            state.preferredShifts = transformedData.preferredShifts;\n            state.travelDistance = transformedData.travelDistance;\n            state.preferredWorkDays = transformedData.preferredWorkDays;\n            state.holidayPreference = transformedData.holidayPreference;\n            state.vaccination = transformedData.vaccination;\n        },\n        addPreferredShifts: (state, action) => {\n            const newShifts = [...state.preferredShifts, action.payload];\n            state.preferredShifts = newShifts;\n        },\n        removePreferredShifts: (state, action) => {\n            const newShifts = state.preferredShifts.filter(shift => shift.id !== action.payload.id)\n            state.preferredShifts = newShifts;\n        },\n        setTravelDistance: (state, action) => {\n            state.travelDistance = action.payload;\n        },\n        setPreferredWorkDays: (state, action) => {\n            state.preferredWorkDays = action.payload;\n        },\n        setHolidayPreference: (state, action) => {\n            state.holidayPreference = action.payload;\n        },\n        setVaccination: (state, action) => {\n            state.vaccination = action.payload;\n        },\n        setMasterDatas: (state, action) => {\n            if (action.payload.shifts) {\n                state.masterDatas.shifts = action.payload.shifts;\n                state.masterDatas.travelDistance = action.payload.travelDistance;\n                state.masterDatas.preferredWorkDays = action.payload.preferredWorkDays;\n                state.masterDatas.preferredWorkDaysRaw = action.payload.preferredWorkDaysRaw;\n                state.masterDatas.holidayPreference = action.payload.holidayPreference;\n                state.masterDatas.holidayPreferenceRaw = action.payload.holidayPreferenceRaw;\n                state.masterDatas.covidVaccine = action.payload.covidVaccine;\n            }\n        }\n    }\n});\n\nexport const {\n    addPreferredShifts, removePreferredShifts, setTravelDistance, setPreferredWorkDays,\n    setHolidayPreference, setVaccination, setMasterDatas, loadPreferencedata\n} = preferenceSlice.actions;\nexport default preferenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}