{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector}from\"react-redux\";import{dashboardSelector}from\"./selector\";import{loadDashboard}from\"./action\";import{useDispatch}from\"react-redux\";import Menu from\"../Menu\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(){var dispatch=useDispatch();var _useSelector=useSelector(dashboardSelector),items=_useSelector.items,loading=_useSelector.loading;useEffect(function(){dispatch(loadDashboard());},[]);return/*#__PURE__*/_jsxs(Menu,{children:[loading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),items&&items.map(function(item){return/*#__PURE__*/_jsxs(\"div\",{children:[item.userName,\" - \",item.dashboardName]});})]});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Dashboard/index.js"],"names":["React","useEffect","useSelector","dashboardSelector","loadDashboard","useDispatch","Menu","dispatch","items","loading","map","item","userName","dashboardName"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,iBAAT,KAAkC,YAAlC,CACA,OAASC,aAAT,KAA8B,UAA9B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,C,wFAEA,eAAe,UAAM,CACnB,GAAMC,CAAAA,QAAQ,CAAGF,WAAW,EAA5B,CACA,iBAA2BH,WAAW,CAACC,iBAAD,CAAtC,CAAQK,KAAR,cAAQA,KAAR,CAAeC,OAAf,cAAeA,OAAf,CACAR,SAAS,CAAC,UAAM,CACdM,QAAQ,CAACH,aAAa,EAAd,CAAR,CACD,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,MAAC,IAAD,YACMK,OAAO,eAAI,mCADjB,CAEMD,KAAK,EAAIA,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,qBAAI,uBAAMA,IAAI,CAACC,QAAX,OAAwBD,IAAI,CAACE,aAA7B,GAAJ,EAAd,CAFf,GADF,CAMD,CAZD","sourcesContent":["import React, {useEffect} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { dashboardSelector } from \"./selector\";\nimport { loadDashboard}  from \"./action\";\nimport { useDispatch } from \"react-redux\";\nimport Menu from \"../Menu\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { items, loading } = useSelector(dashboardSelector);\n  useEffect(() => {\n    dispatch(loadDashboard());\n  }, []);\n  return (\n    <Menu>\n        { loading && <div>Loading...</div>}\n        { items && items.map(item => <div>{item.userName} - {item.dashboardName}</div>)}\n    </Menu>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}