{"ast":null,"code":"import { serverToState } from './transformer';\n\nconst {\n  createSlice\n} = require('@reduxjs/toolkit');\n\nconst initialState = {\n  data: {\n    noResume: false,\n    resumeFile: {\n      name: '',\n      content: null\n    }\n  },\n  workHistory: [{\n    employer: '',\n    fromMonth: '',\n    fromYear: '',\n    toMonth: '',\n    toYear: ''\n  }],\n  educationList: [{\n    historyType: 1,\n    name: '',\n    fromMonth: '',\n    fromYear: '',\n    toMonth: '',\n    toYear: ''\n  }],\n  categories: [],\n  certifications: {\n    primary: [],\n    others: [\"\"]\n  },\n  specialities: [{\n    skill: '',\n    years: ''\n  }],\n  emrehr: {\n    primary: [],\n    others: [\"\"]\n  },\n  educationLevel: '',\n  masterDatas: {\n    educationLevel: [],\n    jobCategories: [],\n    emrehr: [],\n    specialities: [],\n    certifications: []\n  }\n};\nexport const resumeBuilderSlice = createSlice({\n  name: 'resumeBuilder',\n  initialState,\n  reducers: {\n    setEducationLevel: (state, action) => {\n      state.educationLevel = action.payload;\n    },\n    setSpecialities: (state, action) => {\n      state.specialities = action.payload;\n    },\n    addCategory: (state, action) => {\n      const newCategory = [...state.categories, action.payload];\n      state.categories = newCategory;\n    },\n    removeCategory: (state, action) => {\n      const newCategory = state.categories.filter(category => category.id !== action.payload.id);\n      state.categories = newCategory;\n    },\n    addPrimaryEmrEhr: (state, action) => {\n      const newPrimary = [...state.emrehr.primary, action.payload];\n      state.emrehr.primary = newPrimary;\n    },\n    removePrimaryEmrEhr: (state, action) => {\n      const newPrimary = state.emrehr.primary.filter(item => item.id !== action.payload.id);\n      state.emrehr.primary = newPrimary;\n    },\n    setEmrEhr: (state, action) => {\n      state.emrehr = action.payload;\n    },\n    addPrimaryCertification: (state, action) => {\n      const newPrimary = [...state.certifications.primary, action.payload];\n      state.certifications.primary = newPrimary;\n    },\n    removePrimaryCertification: (state, action) => {\n      const newPrimary = state.certifications.primary.filter(cert => cert.id !== action.payload.id);\n      state.certifications.primary = newPrimary;\n    },\n    setCertifications: (state, action) => {\n      state.certifications = action.payload;\n    },\n    setEducation: (state, action) => {\n      state.educationList = action.payload;\n    },\n    setWorkHistory: (state, action) => {\n      state.workHistory = action.payload;\n    },\n    setResumeBuilderData: (state, action) => {\n      const transformedData = serverToState(action.payload, state.masterDatas);\n      state.workHistory = transformedData.workHistory;\n      state.educationList = transformedData.educationList;\n      state.categories = transformedData.categories;\n      state.certifications = transformedData.certifications;\n      state.emrehr = transformedData.emrehr;\n      state.specialities = transformedData.specialities;\n      state.educationLevel = transformedData.educationLevel;\n    },\n    setNoResume: (state, action) => {\n      state.data.noResume = action.payload;\n      state.data.resumeFile = {\n        name: '',\n        content: null\n      };\n    },\n    setResumeFile: (state, action) => {\n      state.data.resumeFile = action.payload;\n      state.data.noResume = false;\n    },\n    setMasterDatas: (state, action) => {\n      if (action.payload.educationLevel) {\n        state.masterDatas.educationLevel = action.payload.educationLevel;\n      }\n\n      if (action.payload.jobCategories) {\n        state.masterDatas.jobCategories = action.payload.jobCategories;\n      }\n\n      if (action.payload.emrehr) {\n        state.masterDatas.emrehr = action.payload.emrehr;\n      }\n\n      if (action.payload.certifications) {\n        state.masterDatas.certifications = action.payload.certifications;\n      }\n\n      if (action.payload.specialities) {\n        state.masterDatas.specialities = action.payload.specialities;\n      }\n    }\n  }\n});\nexport const {\n  setResumeBuilderData,\n  setWorkHistory,\n  setNoResume,\n  setEducation,\n  setCertifications,\n  addPrimaryCertification,\n  removePrimaryCertification,\n  setSpecialities,\n  setEducationLevel,\n  addPrimaryEmrEhr,\n  removePrimaryEmrEhr,\n  setEmrEhr,\n  setResumeFile,\n  addCategory,\n  removeCategory,\n  setMasterDatas\n} = resumeBuilderSlice.actions;\nexport default resumeBuilderSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/slice.js"],"names":["serverToState","createSlice","require","initialState","data","noResume","resumeFile","name","content","workHistory","employer","fromMonth","fromYear","toMonth","toYear","educationList","historyType","categories","certifications","primary","others","specialities","skill","years","emrehr","educationLevel","masterDatas","jobCategories","resumeBuilderSlice","reducers","setEducationLevel","state","action","payload","setSpecialities","addCategory","newCategory","removeCategory","filter","category","id","addPrimaryEmrEhr","newPrimary","removePrimaryEmrEhr","item","setEmrEhr","addPrimaryCertification","removePrimaryCertification","cert","setCertifications","setEducation","setWorkHistory","setResumeBuilderData","transformedData","setNoResume","setResumeFile","setMasterDatas","actions","reducer"],"mappings":"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","sourcesContent":["import { serverToState } from './transformer';\nconst {createSlice} = require('@reduxjs/toolkit');\n\nconst initialState = {\n    data: {\n        noResume: false,\n        resumeFile: {\n            name: '',\n            content: null\n        }\n    },\n    workHistory: [\n        {\n            employer: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: '',\n        }\n    ],\n    educationList: [\n        {\n            historyType: 1,\n            name: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: '',\n        }\n    ],\n    categories: [],\n    certifications: {\n        primary: [],\n        others: [\"\"],\n    },\n    specialities: [{\n       skill: '',\n       years: '',\n    }],\n    emrehr:{\n        primary: [],\n        others: [\"\"],\n    },\n    educationLevel: '',\n    masterDatas: {\n        educationLevel: [],\n        jobCategories: [],\n        emrehr: [],\n        specialities:[],\n        certifications: [],\n    }\n}\nexport const resumeBuilderSlice = createSlice({\n    name: 'resumeBuilder',\n    initialState,\n    reducers: {\n        setEducationLevel: (state, action) => {\n            state.educationLevel = action.payload;\n        },\n        setSpecialities: (state, action) => {\n            state.specialities = action.payload;\n        },\n        addCategory: (state, action) => {\n            const newCategory = [...state.categories, action.payload];\n            state.categories = newCategory;\n        },\n        removeCategory: (state, action) => {\n            const newCategory = state.categories.filter(category => category.id !== action.payload.id);\n            state.categories = newCategory;\n        },\n        addPrimaryEmrEhr: (state, action) => {\n            const newPrimary = [...state.emrehr.primary, action.payload];\n            state.emrehr.primary = newPrimary;\n        },\n        removePrimaryEmrEhr: (state, action) => {\n            const newPrimary = state.emrehr.primary.filter(item => item.id !== action.payload.id);\n            state.emrehr.primary = newPrimary;\n        },\n        setEmrEhr: (state, action) => {\n            state.emrehr = action.payload;\n        },\n        addPrimaryCertification: (state, action) => {\n            const newPrimary = [...state.certifications.primary, action.payload];\n            state.certifications.primary = newPrimary;\n        },\n        removePrimaryCertification: (state, action) => {\n            const newPrimary = state.certifications.primary.filter(cert => cert.id !== action.payload.id);\n            state.certifications.primary = newPrimary;\n        },\n        setCertifications: (state, action) => {\n            state.certifications = action.payload;\n        },\n        setEducation: (state, action) => {\n            state.educationList = action.payload;\n        },\n        setWorkHistory: (state, action) => {\n            state.workHistory = action.payload;\n        },\n        setResumeBuilderData: (state, action) => {\n            const transformedData = serverToState(action.payload, state.masterDatas);\n            state.workHistory = transformedData.workHistory;\n            state.educationList = transformedData.educationList;\n            state.categories = transformedData.categories;\n            state.certifications = transformedData.certifications;\n            state.emrehr = transformedData.emrehr;\n            state.specialities = transformedData.specialities;\n            state.educationLevel = transformedData.educationLevel;\n        },\n        setNoResume: (state, action) => {\n            state.data.noResume = action.payload;\n            state.data.resumeFile = {\n                name: '',\n               content: null\n            };\n        },\n        setResumeFile: (state, action) => {\n            state.data.resumeFile = action.payload;\n            state.data.noResume = false;\n        },\n        setMasterDatas: (state, action) => {\n            if(action.payload.educationLevel) {\n                state.masterDatas.educationLevel = action.payload.educationLevel;\n            }\n            if(action.payload.jobCategories) {\n                state.masterDatas.jobCategories = action.payload.jobCategories;\n            }\n            if(action.payload.emrehr) {\n                state.masterDatas.emrehr = action.payload.emrehr;\n            }\n            if(action.payload.certifications) {\n                state.masterDatas.certifications = action.payload.certifications;\n            }\n            if(action.payload.specialities) {\n                state.masterDatas.specialities = action.payload.specialities;\n            }\n        }\n    },\n});\nexport const { setResumeBuilderData, setWorkHistory, setNoResume,\n    setEducation, setCertifications, addPrimaryCertification,removePrimaryCertification,\n    setSpecialities, setEducationLevel, addPrimaryEmrEhr, removePrimaryEmrEhr, setEmrEhr,\n    setResumeFile, addCategory, removeCategory, setMasterDatas } = resumeBuilderSlice.actions;\nexport default resumeBuilderSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}