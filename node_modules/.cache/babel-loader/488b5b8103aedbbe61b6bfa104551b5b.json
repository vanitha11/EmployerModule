{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isError: false,\n  isSuccess: false,\n  errorMessage: '',\n  data: {},\n  profileFlag: {}\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginRequest: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.errorMessage = '';\n\n      data: {}\n    },\n    loginSuccess: (state, action) => {\n      state.isError = false;\n      state.isSuccess = true;\n      state.errorMessage = '';\n      state.data = action.payload;\n      state.profileFlag = action.payload && action.payload.profileFlag;\n    },\n    setProfileFlag: (state, action) => {\n      const flagName = action.payload;\n      const newProfileFlag = { ...state.profileFlag,\n        [flagName]: true\n      };\n      state.profileFlag = newProfileFlag;\n    },\n    loginFailure: (state, action) => {\n      state.isError = true;\n      state.isSuccess = false;\n      state.errorMessage = action.payload;\n    },\n    reset: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.errorMessage = '';\n      state.data = {};\n    }\n  }\n});\nexport const {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  setProfileFlag,\n  reset\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Login/slice.js"],"names":["createSlice","initialState","isError","isSuccess","errorMessage","data","profileFlag","loginSlice","name","reducers","loginRequest","state","loginSuccess","action","payload","setProfileFlag","flagName","newProfileFlag","loginFailure","reset","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,SAAS,EAAE,KAFM;AAGjBC,EAAAA,YAAY,EAAE,EAHG;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,WAAW,EAAE;AALI,CAArB;AAQA,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAClCQ,EAAAA,IAAI,EAAE,OAD4B;AAEhCP,EAAAA,YAFgC;AAIlCQ,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAGC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACT,OAAN,GAAgB,KAAhB;AACAS,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,YAAN,GAAqB,EAArB;;AACAC,MAAAA,IAAI,EAAE,CACL;AACJ,KAPK;AAQNO,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACT,OAAN,GAAgB,KAAhB;AACAS,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACAQ,MAAAA,KAAK,CAACP,YAAN,GAAqB,EAArB;AACAO,MAAAA,KAAK,CAACN,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACAH,MAAAA,KAAK,CAACL,WAAN,GAAoBO,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeR,WAArD;AACH,KAdK;AAeNS,IAAAA,cAAc,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC/B,YAAMG,QAAQ,GAAGH,MAAM,CAACC,OAAxB;AACA,YAAMG,cAAc,GAAG,EAAC,GAAGN,KAAK,CAACL,WAAV;AAAuB,SAACU,QAAD,GAAY;AAAnC,OAAvB;AACAL,MAAAA,KAAK,CAACL,WAAN,GAAoBW,cAApB;AACH,KAnBK;AAoBNC,IAAAA,YAAY,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACT,OAAN,GAAgB,IAAhB;AACAS,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,YAAN,GAAqBS,MAAM,CAACC,OAA5B;AACH,KAxBK;AAyBNK,IAAAA,KAAK,EAAER,KAAK,IAAI;AACZA,MAAAA,KAAK,CAACT,OAAN,GAAgB,KAAhB;AACAS,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,YAAN,GAAqB,EAArB;AACAO,MAAAA,KAAK,CAACN,IAAN,GAAa,EAAb;AACH;AA9BK;AAJwB,CAAD,CAA9B;AAsCP,OAAO,MAAM;AACTK,EAAAA,YADS;AAETE,EAAAA,YAFS;AAGTM,EAAAA,YAHS;AAITH,EAAAA,cAJS;AAKTI,EAAAA;AALS,IAMTZ,UAAU,CAACa,OANR;AAQP,eAAeb,UAAU,CAACc,OAA1B","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    isError: false,\n    isSuccess: false,\n    errorMessage: '',\n    data: {},\n    profileFlag: {}\n};\n\nexport const loginSlice = createSlice({\n    name: 'login'\n    , initialState,\n\n    reducers: {\n        loginRequest: (state) => {\n            state.isError = false;\n            state.isSuccess = false;\n            state.errorMessage = '';\n            data: {\n            }\n        },\n        loginSuccess: (state, action) => {\n            state.isError = false;\n            state.isSuccess = true;\n            state.errorMessage = '';\n            state.data = action.payload;\n            state.profileFlag = action.payload && action.payload.profileFlag;\n        },\n        setProfileFlag: (state, action) => {\n            const flagName = action.payload;\n            const newProfileFlag = {...state.profileFlag, [flagName]: true};\n            state.profileFlag = newProfileFlag;\n        },\n        loginFailure: (state, action) => {\n            state.isError = true;\n            state.isSuccess = false;\n            state.errorMessage = action.payload;\n        },\n        reset: state => {\n            state.isError = false;\n            state.isSuccess = false;\n            state.errorMessage = '';\n            state.data = {};\n        }\n    }\n});\n\nexport const {\n    loginRequest,\n    loginSuccess,\n    loginFailure,\n    setProfileFlag,\n    reset\n} = loginSlice.actions;\n\nexport default loginSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}