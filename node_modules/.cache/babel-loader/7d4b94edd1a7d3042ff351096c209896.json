{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI_LocalDevelopment\\\\src\\\\components\\\\common\\\\Years\\\\index.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const year = new Date().getFullYear();\n  const years = [];\n\n  for (let i = year; i > year - 50; i--) {\n    if (i === year) {\n      years.push('Present');\n    }\n\n    years.push(i);\n  }\n\n  if (props.addPresent) {\n    years.push('Present');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-2 col-md-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: props.name,\n        className: \"form-control form-select\",\n        onChange: event => props.updateValue(event.target),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), years.map((year, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            selected: props.value === year,\n            children: year\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), props.errors && props.errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-input\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI_LocalDevelopment/src/components/common/Years/index.js"],"names":["React","props","year","Date","getFullYear","years","i","push","addPresent","name","event","updateValue","target","map","index","value","errors","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,gBAAgBC,KAAD,IAAW;AACtB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAGJ,IAAb,EAAmBI,CAAC,GAAGJ,IAAI,GAAG,EAA9B,EAAkCI,CAAC,EAAnC,EAAuC;AACnC,QAAIA,CAAC,KAAKJ,IAAV,EAAgB;AACZG,MAAAA,KAAK,CAACE,IAAN,CAAW,SAAX;AACH;;AACDF,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIL,KAAK,CAACO,UAAV,EAAsB;AAClBH,IAAAA,KAAK,CAACE,IAAN,CAAW,SAAX;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAEN,KAAK,CAACQ,IAApB;AAA0B,QAAA,SAAS,EAAC,0BAApC;AACQ,QAAA,QAAQ,EAAGC,KAAD,IAAWT,KAAK,CAACU,WAAN,CAAkBD,KAAK,CAACE,MAAxB,CAD7B;AAAA,gCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKP,KAAK,CAACQ,GAAN,CAAU,CAACX,IAAD,EAAOY,KAAP,KAAiB;AACxB,8BACI;AAAoB,YAAA,KAAK,EAAEZ,IAA3B;AAAiC,YAAA,QAAQ,EAAED,KAAK,CAACc,KAAN,KAAgBb,IAA3D;AAAA,sBAAkEA;AAAlE,aAAaY,KAAb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAUKb,KAAK,CAACe,MAAN,IAAgBf,KAAK,CAACe,MAAN,CAAaH,GAAb,CAAiBI,KAAK,iBAAK;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA3B,CAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9BD","sourcesContent":["import React from \"react\";\n\nexport default (props) => {\n    const year = new Date().getFullYear();\n    const years = [];\n    for (let i = year; i > year - 50; i--) {\n        if (i === year) {\n            years.push('Present');\n        }\n        years.push(i);\n    }\n    if (props.addPresent) {\n        years.push('Present');\n    }\n    return (\n        <div className=\"col-lg-2 col-md-2\">\n            <div className=\"form-group\">\n                <select name={props.name} className=\"form-control form-select\"\n                        onChange={(event) => props.updateValue(event.target)}>\n                    <option>Select</option>\n                    {years.map((year, index) => {\n                        return (\n                            <option key={index} value={year} selected={props.value === year}>{year}</option>\n                        )\n                    })}\n                </select>\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n\n\n}\n"]},"metadata":{},"sourceType":"module"}