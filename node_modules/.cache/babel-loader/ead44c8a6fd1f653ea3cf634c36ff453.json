{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\ProfileBuilder\\\\PersonalInfo\\\\emergencyContactForm.js\",\n    _s = $RefreshSig$();\n\nimport TextField from \"../../common/TextField/withLabel\";\nimport React, { useEffect } from \"react\";\nimport { personalInfoSelector } from \"./selector\";\nimport { updatePersonalInfo, updateEmergencyContactRelationshipList, getEmergencyContactRelationShip } from \"./action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextFieldFormatted from \"../../common/TextFieldPhoneNumber\";\nimport DropDown from \"../../common/TextField/dropDown\";\nimport useConfiguration from \"../../../hooks/useConfiguration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const {\n    errors\n  } = props;\n  const {\n    data,\n    masterData\n  } = useSelector(personalInfoSelector);\n  const dispatch = useDispatch();\n  const config = useConfiguration();\n  const [form, setForm] = React.useState(data);\n  useEffect(() => {\n    dispatch(updatePersonalInfo(form));\n  }, [form]);\n  useEffect(() => {\n    config.baseUrl && dispatch(getEmergencyContactRelationShip(`${config.baseUrl}/Dropdown/GetEmergencyContactRelationships`));\n  }, [config]);\n\n  const updateEmergencyForm = target => {\n    setForm({ ...data,\n      emergencyContact: { ...data.emergencyContact,\n        [target.name]: target.value\n      }\n    });\n  };\n\n  const updateemergencyUContactRelationship = target => {\n    const value = target.value;\n    const action = target.action || 'add';\n    dispatch(updateEmergencyContactRelationshipList(value, action));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'firstName',\n        label: 'First Name*',\n        placeholder: \"First Name\",\n        updateValue: updateEmergencyForm,\n        value: data.emergencyContact.firstName,\n        errors: errors['firstName']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: 'lastName',\n        label: 'Last Name*',\n        placeholder: \"Last Name\",\n        updateValue: updateEmergencyForm,\n        value: data.emergencyContact.lastName,\n        errors: errors['lastName']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'phoneNumber',\n        label: 'Phone Number*',\n        placeholder: \"Phone Number\",\n        updateValue: updateEmergencyForm,\n        value: data.emergencyContact.phoneNumber,\n        errors: errors['phoneNumber']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n        name: \"relationship\",\n        label: 'Relationship*',\n        placeholder: \"Relationship\",\n        options: masterData.emergencyContactRelationshipList,\n        value: [data.emergencyContact.relationship],\n        updateValue: updateEmergencyForm,\n        showArrow: true,\n        isObject: true,\n        multiple: false,\n        errors: errors['relationship']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n        name: \"relationship\",\n        label: 'Relationship*',\n        placeholder: \"Relationship\",\n        updateValue: updateemergencyUContactRelationship,\n        value: data.emergencyContactRelationshipList || [],\n        options: masterData.emergencyContactRelationship,\n        showArrow: true,\n        isObject: true,\n        multiple: false,\n        errors: errors['relationship']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}, \"JVTtebe48kVuWpg0dJFnB60FwjA=\", false, function () {\n  return [useSelector, useDispatch, useConfiguration];\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/emergencyContactForm.js"],"names":["TextField","React","useEffect","personalInfoSelector","updatePersonalInfo","updateEmergencyContactRelationshipList","getEmergencyContactRelationShip","useDispatch","useSelector","TextFieldFormatted","DropDown","useConfiguration","props","errors","data","masterData","dispatch","config","form","setForm","useState","baseUrl","updateEmergencyForm","target","emergencyContact","name","value","updateemergencyUContactRelationship","action","firstName","lastName","phoneNumber","emergencyContactRelationshipList","relationship","emergencyContactRelationship"],"mappings":"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","sourcesContent":["import TextField from \"../../common/TextField/withLabel\";\nimport React, {useEffect} from \"react\";\nimport {personalInfoSelector} from \"./selector\";\nimport {updatePersonalInfo,updateEmergencyContactRelationshipList,getEmergencyContactRelationShip} from \"./action\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport TextFieldFormatted from \"../../common/TextFieldPhoneNumber\";\nimport DropDown from \"../../common/TextField/dropDown\";\nimport useConfiguration from \"../../../hooks/useConfiguration\";\n\nexport default (props) => {\n    const {errors} = props;\n    const { data ,masterData} = useSelector(personalInfoSelector);\n    const dispatch = useDispatch();\n    \n    const config = useConfiguration();\n\n    const [form, setForm] = React.useState(data);\n    \n\n    useEffect(() => {\n        dispatch(updatePersonalInfo(form));\n    }, [form]);\n    \n    useEffect(() => {\n        config.baseUrl && dispatch(getEmergencyContactRelationShip(`${config.baseUrl}/Dropdown/GetEmergencyContactRelationships`));\n    }, [config]);\n\n    const updateEmergencyForm = (target) => {\n        setForm({\n            ...data,\n            emergencyContact: {\n                ...data.emergencyContact,\n                [target.name]: target.value\n            }\n        });\n    };\n\n    const updateemergencyUContactRelationship = (target) => {\n        const value = target.value;\n        const action = target.action || 'add';\n        dispatch(updateEmergencyContactRelationshipList(value, action));\n    };\n\n    return (\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <TextField name={'firstName'} label={'First Name*'} placeholder={\"First Name\"}\n                            updateValue={updateEmergencyForm} value={data.emergencyContact.firstName} errors={errors['firstName']}/>\n                \n                \n                <TextField name={'lastName'} label={'Last Name*'} placeholder={\"Last Name\"}\n                            updateValue={updateEmergencyForm} value={data.emergencyContact.lastName} errors={errors['lastName']}/>\n            </div>\n            <div className=\"row\">\n                <TextField name={'phoneNumber'} label={'Phone Number*'} placeholder={\"Phone Number\"} \n                           updateValue={updateEmergencyForm} value={data.emergencyContact.phoneNumber} errors={errors['phoneNumber']} />\n               {/* <TextField name={'relationship'} label={'Relationship*'} placeholder={\"Relationship\"} \n                           updateValue={updateEmergencyForm} value={data.emergencyContact.relationship} errors={errors['relationship']} />\n    */}\n    <DropDown name={\"relationship\"} label={'Relationship*'}\n                          placeholder={\"Relationship\"} options={masterData.emergencyContactRelationshipList}\n                          value={[data.emergencyContact.relationship]} \n                          updateValue={updateEmergencyForm} showArrow={true} isObject={true} multiple={false} errors={errors['relationship']} />\n\n<DropDown name={\"relationship\"} label={'Relationship*'}\n                          placeholder={\"Relationship\"} updateValue={updateemergencyUContactRelationship}\n                          value={data.emergencyContactRelationshipList || []}\n                          options={masterData.emergencyContactRelationship} showArrow={true} isObject={true} multiple={false} errors={errors['relationship']} />\n{/*\n<TextField name={'relationship'} label={'Relationship*'} placeholder={\"Relationship\"} \n                           updateValue={updateEmergencyForm} value={data.emergencyContact.relationship} errors={errors['relationship']} />\n\n     <select errors={errors['relationship']} className=\"form-select\" data-placeholder=\"Relationship\"  \n                    value={data.emergencyContact.relationship}  updateValue={updateEmergencyForm}\n                    name={\"relationship\"}>\n                               \n                                <option value={\"Wife\"}>Wife</option>\n                                <option value={\"Husband\"}>Husband</option>\n                                <option value={\"Friend\"}>Friend</option>\n                                <option value={\"Parent\"}>Parent</option>\n                                <option value={\"Relative\"}>Relative</option>\n                                 </select>\n                \n                   \n\n<DropDownStatic name={\"relationship\"} label={\"Relationship*\"}\n         value={[data.emergencyContact.relationship]}\n        id={\"relationship\"}\n        updateValue={setEmergencyContactRelationship} isObject={true} multiple={false} errors={props.errors ? props.errors['relationship'] : []}/>\n            \n    */}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}