{"ast":null,"code":"import useConfiguration from\"./useConfiguration\";function useValidation(){var config=useConfiguration();function validate(formName,values){var validationResult={valid:true,errors:{}};var isEmptyObject=function isEmptyObject(value){return typeof value==='object'&&Object.keys(value).length===0;};var isEmpty=function isEmpty(value){return value===undefined||value===null||(value.trim&&value.trim())===''||isEmptyObject(value);};if(!config.validations){return validationResult;}var validationConfig=config.validations[formName];values.map(function(value){var validationObj=validationConfig[value.name]||{};validationResult.errors[value.name]=[];if(validationObj.required&&(isEmpty(value.data)||value.data.length===0)){validationResult.errors[value.name].push(\"This field is required\");validationResult.valid=false;}if(validationObj.min&&value.data&&value.data.length<validationObj.min){validationResult.errors[value.name].push(\"At least \".concat(validationObj.min,\" characters long\"));validationResult.valid=false;}if(validationObj.max&&value.data&&value.data.length>validationObj.max){validationResult.errors[value.name].push(\"At most \".concat(validationObj.max,\" characters long\"));validationResult.valid=false;}if(validationObj.pattern&&value.data){var regex=new RegExp(validationObj.pattern);if(!regex.test(value.data)){validationResult.errors[value.name].push(validationObj.message||\"This field has invalid pattern\");validationResult.valid=false;}}});return validationResult;}return validate;}export default useValidation;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/hooks/useValidation.js"],"names":["useConfiguration","useValidation","config","validate","formName","values","validationResult","valid","errors","isEmptyObject","value","Object","keys","length","isEmpty","undefined","trim","validations","validationConfig","map","validationObj","name","required","data","push","min","max","pattern","regex","RegExp","test","message"],"mappings":"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","sourcesContent":["import useConfiguration from \"./useConfiguration\";\n\nfunction useValidation() {\n    const config = useConfiguration();\n\n    function validate(formName, values) {\n\n        const validationResult = {\n            valid: true,\n            errors: {}\n        };\n        const isEmptyObject = (value) => {\n            return typeof value === 'object' && Object.keys(value).length === 0;\n        }\n        const isEmpty = (value) => {\n            return value === undefined || value === null || (value.trim && value.trim()) === '' || isEmptyObject(value);\n        };\n        if (!config.validations) {\n            return validationResult;\n        }\n        const validationConfig = config.validations[formName];\n        values.map(value => {\n            const validationObj = validationConfig[value.name] || {};\n            validationResult.errors[value.name] = [];\n            if (validationObj.required && (isEmpty(value.data) || value.data.length === 0)) {\n                validationResult.errors[value.name].push(\"This field is required\");\n                validationResult.valid = false;\n            }\n            if (validationObj.min && value.data && value.data.length < validationObj.min) {\n                validationResult.errors[value.name].push(`At least ${validationObj.min} characters long`);\n                validationResult.valid = false;\n            }\n            if (validationObj.max && value.data && value.data.length > validationObj.max) {\n                validationResult.errors[value.name].push(`At most ${validationObj.max} characters long`);\n                validationResult.valid = false;\n            }\n            if (validationObj.pattern && value.data) {\n                const regex = new RegExp(validationObj.pattern);\n                if (!regex.test(value.data)) {\n                    validationResult.errors[value.name].push(validationObj.message || `This field has invalid pattern`);\n                    validationResult.valid = false;\n                }\n            }\n        });\n        return validationResult;\n    }\n\n    return validate;\n}\n\nexport default useValidation;\n"]},"metadata":{},"sourceType":"module"}