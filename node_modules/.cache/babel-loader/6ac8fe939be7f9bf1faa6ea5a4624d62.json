{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  preferredShifts: [],\n  travelDistance: \"\",\n  preferredWorkDays: [],\n  holidayPreference: {\n    preference: \"\",\n    options: []\n  },\n  vaccination: \"\",\n  error: false,\n  masterDatas: {\n    shifts: [],\n    travelDistance: []\n  }\n};\nexport const preferenceSlice = createSlice({\n  name: \"preference\",\n  initialState,\n  reducers: {\n    preferencesSaveError: (state, action) => {\n      state.error = action.payload;\n    },\n    addPreferredShifts: (state, action) => {\n      const newShifts = [...state.preferredShifts];\n      newShifts.push(action.payload);\n      state.preferredShifts = newShifts;\n    },\n    removePreferredShifts: (state, action) => {\n      const newShifts = state.preferredShifts.filter(shift => shift !== action.payload);\n      state.preferredShifts = newShifts;\n    },\n    setTravelDistance: (state, action) => {\n      state.travelDistance = action.payload;\n    },\n    setPreferredWorkDays: (state, action) => {\n      state.preferredWorkDays = action.payload;\n    },\n    setHolidayPreference: (state, action) => {\n      state.holidayPreference = action.payload;\n    },\n    setVaccination: (state, action) => {\n      state.vaccination = action.payload;\n    },\n    setMasterDatas: (state, action) => {\n      if (action.payload.shifts) {\n        state.masterDatas.shifts = action.payload.shifts.map(shift => shift.name);\n        state.masterDatas.travelDistance = action.payload.travelDistance.map(distance => distance.name);\n      }\n    }\n  }\n});\nexport const {\n  addPreferredShifts,\n  removePreferredShifts,\n  setTravelDistance,\n  setPreferredWorkDays,\n  setHolidayPreference,\n  setVaccination,\n  preferencesSaveError,\n  setMasterDatas\n} = preferenceSlice.actions;\nexport default preferenceSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/slice.js"],"names":["createSlice","initialState","preferredShifts","travelDistance","preferredWorkDays","holidayPreference","preference","options","vaccination","error","masterDatas","shifts","preferenceSlice","name","reducers","preferencesSaveError","state","action","payload","addPreferredShifts","newShifts","push","removePreferredShifts","filter","shift","setTravelDistance","setPreferredWorkDays","setHolidayPreference","setVaccination","setMasterDatas","map","distance","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    preferredShifts: [],\n    travelDistance: \"\",\n    preferredWorkDays: [],\n    holidayPreference: {\n        preference: \"\",\n        options: []\n    },\n    vaccination: \"\",\n    error: false,\n    masterDatas: {\n        shifts: [],\n        travelDistance: []\n    }\n}\n\nexport const preferenceSlice = createSlice({\n    name: \"preference\",\n    initialState,\n    reducers: {\n        preferencesSaveError: (state, action) => {\n            state.error = action.payload;\n        },\n        addPreferredShifts: (state, action) => {\n            const newShifts = [...state.preferredShifts];\n            newShifts.push(action.payload);\n            state.preferredShifts = newShifts;\n        },\n        removePreferredShifts: (state, action) => {\n            const newShifts = state.preferredShifts.filter(shift => shift !== action.payload)\n            state.preferredShifts = newShifts;\n        },\n        setTravelDistance: (state, action) => {\n            state.travelDistance = action.payload;\n        },\n        setPreferredWorkDays: (state, action) => {\n            state.preferredWorkDays = action.payload;\n        },\n        setHolidayPreference: (state, action) => {\n            state.holidayPreference = action.payload;\n        },\n        setVaccination: (state, action) => {\n            state.vaccination = action.payload;\n        },\n        setMasterDatas: (state, action) => {\n            if(action.payload.shifts) {\n                state.masterDatas.shifts = action.payload.shifts.map((shift => (shift.name)));\n                state.masterDatas.travelDistance = action.payload.travelDistance.map((distance => (distance.name)));\n            }\n        }\n    }\n});\n\nexport const { addPreferredShifts, removePreferredShifts, setTravelDistance, setPreferredWorkDays,\n    setHolidayPreference, setVaccination, preferencesSaveError, setMasterDatas } = preferenceSlice.actions;\nexport default preferenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}