{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    zipcode: '',\n    streetAddress: '',\n    city: '',\n    stateName: '',\n    cellPhoneNumber: '',\n    homePhoneNumber: '',\n    alternatePhoneNumber: '',\n    emergencyContact: {\n      firstName: '',\n      lastName: '',\n      phoneNumber: '',\n      relationship: []\n    },\n    references: [{\n      firstName: '',\n      lastName: '',\n      phoneNumber: ''\n    }],\n    spokenLanguagesList: [],\n    jobDomainId: 1,\n    jobTypeId: 1\n  },\n  masterData: {\n    languages: [],\n    relationships: []\n  }\n};\nexport const personalInfoSlice = createSlice({\n  name: 'personalInfo',\n  initialState,\n  reducers: {\n    setPersonalInfo: (state, action) => {\n      state.data = action.payload;\n\n      if (state.masterData.languages.length > 0) {\n        state.data.spokenLanguagesList = state.masterData.languages.filter(language => state.data.spokenLanguagesList.find(lang => {\n          if (lang.id) {\n            return lang.id === language.id;\n          } else {\n            return lang === language.id;\n          }\n        }));\n      }\n\n      if (state.masterData.relationships.length > 0) {\n        if (typeof state.data.emergencyContact.relationship !== 'object') {\n          state.data.emergencyContact.relationship = state.masterData.relationships.filter(relation => relation.name === state.data.emergencyContact.relationship);\n        }\n      }\n\n      if (!state.data.references || state.data.references.length === 0) {\n        state.data.references = [{\n          firstName: '',\n          lastName: '',\n          phoneNumber: ''\n        }];\n      }\n\n      state.personalInfoError = false;\n    },\n    setCityState: (state, action) => {\n      state.data.city = action.payload.city;\n      state.data.stateName = action.payload.state;\n    },\n    setMasterData: (state, action) => {\n      if (action.payload.languages) {\n        state.masterData.languages = action.payload.languages;\n        state.masterData.relationships = action.payload.relationships;\n      }\n    },\n    addSpokenLanguagesList: (state, action) => {\n      const newLanguage = state.data.spokenLanguagesList ? [...state.data.spokenLanguagesList, action.payload] : [action.payload];\n      state.data.spokenLanguagesList = newLanguage;\n    },\n    removeSpokenLanguagesList: (state, action) => {\n      const newLanguage = state.data.spokenLanguagesList.filter(item => item.id !== action.payload.id);\n      state.data.spokenLanguagesList = [...newLanguage];\n    }\n  }\n});\nexport const {\n  setPersonalInfo,\n  setCityState,\n  setMasterData,\n  addSpokenLanguagesList,\n  removeSpokenLanguagesList\n} = personalInfoSlice.actions;\nexport default personalInfoSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/slice.js"],"names":["createSlice","initialState","data","firstName","lastName","email","zipcode","streetAddress","city","stateName","cellPhoneNumber","homePhoneNumber","alternatePhoneNumber","emergencyContact","phoneNumber","relationship","references","spokenLanguagesList","jobDomainId","jobTypeId","masterData","languages","relationships","personalInfoSlice","name","reducers","setPersonalInfo","state","action","payload","length","filter","language","find","lang","id","relation","personalInfoError","setCityState","setMasterData","addSpokenLanguagesList","newLanguage","removeSpokenLanguagesList","item","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nconst initialState = {\n    data: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        zipcode: '',\n        streetAddress: '',\n        city: '',\n        stateName: '',\n        cellPhoneNumber: '',\n        homePhoneNumber: '',\n        alternatePhoneNumber: '',\n        emergencyContact: {\n            firstName: '',\n            lastName: '',\n            phoneNumber: '',\n            relationship: []\n        },\n        references: [\n            {\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n            }\n        ],\n        spokenLanguagesList: [],\n        jobDomainId: 1,\n        jobTypeId: 1\n    },\n    masterData:{\n        languages: [],\n        relationships: [],\n    },\n};\nexport const personalInfoSlice = createSlice({\n    name: 'personalInfo',\n    initialState,\n    reducers: {\n        setPersonalInfo: (state, action) => {\n            state.data = action.payload;\n            if(state.masterData.languages.length >0){\n                state.data.spokenLanguagesList = state.masterData.languages.filter(language => state.data.spokenLanguagesList.find(lang => {\n                    if(lang.id){\n                        return lang.id === language.id\n                    } else {\n                        return lang === language.id\n                    }\n                }));\n            }\n            if(state.masterData.relationships.length > 0){\n                if(typeof state.data.emergencyContact.relationship !== 'object'){\n                    state.data.emergencyContact.relationship = state.masterData.relationships.filter(relation =>\n                        relation.name === state.data.emergencyContact.relationship\n                    );\n                }\n            }\n\n            if(!state.data.references || state.data.references.length === 0){\n                state.data.references = [{\n                    firstName: '',\n                    lastName: '',\n                    phoneNumber: '',\n                }]\n            }\n            state.personalInfoError = false;\n        },\n        setCityState: (state, action) => {\n            state.data.city = action.payload.city;\n            state.data.stateName = action.payload.state;\n        },\n        setMasterData: (state, action) => {\n            if(action.payload.languages){\n                state.masterData.languages = action.payload.languages;\n                state.masterData.relationships = action.payload.relationships;\n            }\n        },\n        addSpokenLanguagesList: (state, action) => {\n            const newLanguage = state.data.spokenLanguagesList ? [...state.data.spokenLanguagesList, action.payload] : [action.payload];\n            state.data.spokenLanguagesList = newLanguage;\n        },\n        removeSpokenLanguagesList: (state, action) => {\n            const newLanguage = state.data.spokenLanguagesList.filter(item => item.id !== action.payload.id);\n            state.data.spokenLanguagesList = [...newLanguage];\n        },\n    }\n});\nexport const { setPersonalInfo,setCityState, setMasterData, addSpokenLanguagesList, removeSpokenLanguagesList} = personalInfoSlice.actions;\nexport default personalInfoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}