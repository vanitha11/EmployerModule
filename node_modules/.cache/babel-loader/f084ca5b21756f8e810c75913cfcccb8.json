{"ast":null,"code":"export default (async (url, method, body, headers) => {\n  const requestHeaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    ...headers\n  };\n  const response = await fetch(url, {\n    method: method,\n    headers: requestHeaders,\n    body: JSON.stringify(body)\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    const contentType = response.headers.get(\"content-type\");\n    let message = '';\n\n    if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n      const data = await response.json();\n      message = data.message ? data.message : data;\n    } else {\n      message = await response.text();\n    }\n\n    throw new Error(message);\n  }\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/helpers/requestUtil.js"],"names":["url","method","body","headers","requestHeaders","response","fetch","JSON","stringify","ok","data","json","contentType","get","message","indexOf","text","Error"],"mappings":"AACA,gBAAe,OAAOA,GAAP,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,KAAsC;AACjD,QAAMC,cAAc,GAAG;AACnB,oBAAgB,kBADG;AAEnB,cAAU,kBAFS;AAGnB,OAAGD;AAHgB,GAAvB;AAKA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM;AAC9BC,IAAAA,MAAM,EAAEA,MADsB;AAE9BE,IAAAA,OAAO,EAAEC,cAFqB;AAG9BF,IAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHwB,GAAN,CAA5B;;AAKA,MAAIG,QAAQ,CAACI,EAAb,EAAiB;AACb,UAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,WAAOD,IAAP;AACH,GAHD,MAGO;AACH,UAAME,WAAW,GAAGP,QAAQ,CAACF,OAAT,CAAiBU,GAAjB,CAAqB,cAArB,CAApB;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAIF,WAAW,IAAIA,WAAW,CAACG,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAhE,EAAmE;AAC/D,YAAML,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAG,MAAAA,OAAO,GAAGJ,IAAI,CAACI,OAAL,GAAeJ,IAAI,CAACI,OAApB,GAA8BJ,IAAxC;AACH,KAHD,MAGO;AACHI,MAAAA,OAAO,GAAG,MAAMT,QAAQ,CAACW,IAAT,EAAhB;AACH;;AACD,UAAM,IAAIC,KAAJ,CAAUH,OAAV,CAAN;AACH;AACJ,CAzBD","sourcesContent":["\nexport default async (url, method, body, headers) => {\n    const requestHeaders = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        ...headers\n    };\n    const response = await fetch(url, {\n        method: method,\n        headers: requestHeaders,\n        body: JSON.stringify(body)\n    });\n    if (response.ok) {\n        const data = await response.json();\n        return data;\n    } else {\n        const contentType = response.headers.get(\"content-type\");\n        let message = '';\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n            const data = await response.json();\n            message = data.message ? data.message : data;\n        } else {\n            message = await response.text();\n        }\n        throw new Error(message);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}