{"ast":null,"code":"import _toConsumableArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";var initialData={firstName:'',lastName:'',email:'',zipcode:'',streetAddress:'',city:'',stateName:'',cellPhoneNumber:'',homePhoneNumber:'',alternatePhoneNumber:'',emergencyContact:{firstName:'',lastName:'',phoneNumber:'',relationship:[]},references:[{firstName:'',lastName:'',phoneNumber:''}],spokenLanguagesList:[],jobDomainId:1,jobTypeId:1};var initialState={data:initialData,masterData:{languages:[],relationships:[]},summaryData:initialData};export var personalInfoSlice=createSlice({name:'personalInfo',initialState:initialState,reducers:{setPersonalInfo:function setPersonalInfo(state,action){state.data=action.payload;if(state.masterData.languages.length>0){state.data.spokenLanguagesList=state.masterData.languages.filter(function(language){return state.data.spokenLanguagesList.find(function(lang){if(lang.id){return lang.id===language.id;}else{return lang===language.id;}});});}if(state.masterData.relationships.length>0){if(typeof state.data.emergencyContact.relationship!=='object'){state.data.emergencyContact.relationship=state.masterData.relationships.filter(function(relation){return relation.name===state.data.emergencyContact.relationship;});}}if(!state.data.references||state.data.references.length===0){state.data.references=[{firstName:'',lastName:'',phoneNumber:''}];}state.personalInfoError=false;},setCityState:function setCityState(state,action){state.data.city=action.payload.city;state.data.stateName=action.payload.state;},setMasterData:function setMasterData(state,action){if(action.payload.languages){state.masterData.languages=action.payload.languages;state.masterData.relationships=action.payload.relationships;}},addSpokenLanguagesList:function addSpokenLanguagesList(state,action){var newLanguage=state.data.spokenLanguagesList?[].concat(_toConsumableArray(state.data.spokenLanguagesList),[action.payload]):[action.payload];state.data.spokenLanguagesList=newLanguage;},removeSpokenLanguagesList:function removeSpokenLanguagesList(state,action){var newLanguage=state.data.spokenLanguagesList.filter(function(item){return item.id!==action.payload.id;});state.data.spokenLanguagesList=_toConsumableArray(newLanguage);}}});var _personalInfoSlice$ac=personalInfoSlice.actions,setPersonalInfo=_personalInfoSlice$ac.setPersonalInfo,setCityState=_personalInfoSlice$ac.setCityState,setMasterData=_personalInfoSlice$ac.setMasterData,addSpokenLanguagesList=_personalInfoSlice$ac.addSpokenLanguagesList,removeSpokenLanguagesList=_personalInfoSlice$ac.removeSpokenLanguagesList;export{setPersonalInfo,setCityState,setMasterData,addSpokenLanguagesList,removeSpokenLanguagesList};export default personalInfoSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/slice.js"],"names":["createSlice","initialData","firstName","lastName","email","zipcode","streetAddress","city","stateName","cellPhoneNumber","homePhoneNumber","alternatePhoneNumber","emergencyContact","phoneNumber","relationship","references","spokenLanguagesList","jobDomainId","jobTypeId","initialState","data","masterData","languages","relationships","summaryData","personalInfoSlice","name","reducers","setPersonalInfo","state","action","payload","length","filter","language","find","lang","id","relation","personalInfoError","setCityState","setMasterData","addSpokenLanguagesList","newLanguage","removeSpokenLanguagesList","item","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialData = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    zipcode: '',\n    streetAddress: '',\n    city: '',\n    stateName: '',\n    cellPhoneNumber: '',\n    homePhoneNumber: '',\n    alternatePhoneNumber: '',\n    emergencyContact: {\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        relationship: []\n    },\n    references: [\n        {\n            firstName: '',\n            lastName: '',\n            phoneNumber: '',\n        }\n    ],\n    spokenLanguagesList: [],\n    jobDomainId: 1,\n    jobTypeId: 1\n}\nconst initialState = {\n    data: initialData,\n    masterData: {\n        languages: [],\n        relationships: [],\n    },\n    summaryData: initialData\n};\nexport const personalInfoSlice = createSlice({\n    name: 'personalInfo',\n    initialState,\n    reducers: {\n        setPersonalInfo: (state, action) => {\n            state.data = action.payload;\n            if (state.masterData.languages.length > 0) {\n                state.data.spokenLanguagesList = state.masterData.languages.filter(language => state.data.spokenLanguagesList.find(lang => {\n                    if (lang.id) {\n                        return lang.id === language.id\n                    } else {\n                        return lang === language.id\n                    }\n                }));\n            }\n            if (state.masterData.relationships.length > 0) {\n                if (typeof state.data.emergencyContact.relationship !== 'object') {\n                    state.data.emergencyContact.relationship = state.masterData.relationships.filter(relation =>\n                        relation.name === state.data.emergencyContact.relationship\n                    );\n                }\n            }\n\n            if (!state.data.references || state.data.references.length === 0) {\n                state.data.references = [{\n                    firstName: '',\n                    lastName: '',\n                    phoneNumber: '',\n                }]\n            }\n            state.personalInfoError = false;\n        },\n        setCityState: (state, action) => {\n            state.data.city = action.payload.city;\n            state.data.stateName = action.payload.state;\n        },\n        setMasterData: (state, action) => {\n            if (action.payload.languages) {\n                state.masterData.languages = action.payload.languages;\n                state.masterData.relationships = action.payload.relationships;\n            }\n        },\n        addSpokenLanguagesList: (state, action) => {\n            const newLanguage = state.data.spokenLanguagesList ? [...state.data.spokenLanguagesList, action.payload] : [action.payload];\n            state.data.spokenLanguagesList = newLanguage;\n        },\n        removeSpokenLanguagesList: (state, action) => {\n            const newLanguage = state.data.spokenLanguagesList.filter(item => item.id !== action.payload.id);\n            state.data.spokenLanguagesList = [...newLanguage];\n        },\n    }\n});\nexport const {\n    setPersonalInfo,\n    setCityState,\n    setMasterData,\n    addSpokenLanguagesList,\n    removeSpokenLanguagesList\n} = personalInfoSlice.actions;\nexport default personalInfoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}