{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\common\\\\TextFieldPhoneNumber\\\\index.js\";\nimport React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'; //mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: divClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [!props.noLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n        value: props.value,\n        format: \"###-###-####\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), props.errors && props.errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-input\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextFieldPhoneNumber/index.js"],"names":["React","PhoneInput","props","divClass","noLabel","name","label","value","errors","map","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CAEA;AACA;;;AACA,gBAAgBC,KAAD,IAAW;AACtB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAvB,GAAkC,oBAAnD;AACA,sBACI;AAAK,IAAA,SAAS,EAAEA,QAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACM,CAACD,KAAK,CAACE,OAAP,iBAAkB;AAAO,QAAA,OAAO,EAAEF,KAAK,CAACG,IAAtB;AAAA,kBAA6BH,KAAK,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,cADxB,eAGI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAAzB;AAAgC,QAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHJ,EAaKL,KAAK,CAACM,MAAN,IAAgBN,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBAAK;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA3B,CAbrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArBD","sourcesContent":["import React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'\n\n//mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\nexport default (props) => {\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return(\n        <div className={divClass}>\n            <div className=\"form-group\">\n                { !props.noLabel && <label htmlFor={props.name}>{props.label}</label> }\n               \n                <PhoneInput value={props.value} format=\"###-###-####\" />\n{/*<PhoneInput\n       \n        value=\"\"\n        prefix=\"\"\n        displayType=\"input\"\n        type=\"text\"\n        allowNegative={true}\n        format=\"###-###-####\" onValueChange={(event) => props.updateValue(event.target)} />\n*/}\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}