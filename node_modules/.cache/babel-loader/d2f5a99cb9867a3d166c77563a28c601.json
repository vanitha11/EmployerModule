{"ast":null,"code":"export function validateResume(formValues){var errorObj={isValid:true,errors:{}};if(!formValues.data.noResume){if(formValues.data.resumeFile&&isEmpty(formValues.data.resumeFile.name)){errorObj.isValid=false;errorObj.errors.resume=[];errorObj.errors.resume.push('Please upload/enter a resume details');}}if(!formValues.categories||formValues.categories.length===0){errorObj.errors.categories=[];errorObj.errors.categories.push('Please select at least one category');errorObj.isValid=false;}if(formValues.certifications){var certifications=formValues.certifications;var isPrimaryPresent=isPrimaryCertEntered(certifications);if(!isPrimaryPresent){if(!isOtherCertEntered(certifications)){errorObj.errors.certifications={};errorObj.errors.certifications.primary=[];errorObj.errors.certifications.primary.push('Please select primary certification or enter other certification');errorObj.isValid=false;}}}if(formValues.emrehr){var emrehr=formValues.emrehr;var _isPrimaryPresent=isPrimaryEmrehrEntered(emrehr);if(!_isPrimaryPresent){if(!isOtherEmrehrEntered(emrehr)){errorObj.errors.emrehr={};errorObj.errors.emrehr.primary=[];errorObj.errors.emrehr.primary.push('Please select primary emr/ehr or enter other emr/ehr');errorObj.isValid=false;}}}if(formValues.specialities){formValues.specialities.find(function(speciality){if(speciality.skill===''||speciality.years===''){errorObj.errors.specialities=[];errorObj.errors.specialities.push('Please enter skill and years');errorObj.isValid=false;}});}if(!formValues.educationLevel||formValues.educationLevel===''){errorObj.errors.educationLevel=[];errorObj.errors.educationLevel.push('Please select education level');errorObj.isValid=false;}return errorObj;}var isPrimaryCertEntered=function isPrimaryCertEntered(certifications){if(certifications.primary&&certifications.primary.length>0){return true;}return false;};var isOtherCertEntered=function isOtherCertEntered(certifications){if(certifications.others&&certifications.others.find(function(oth){return!isEmpty(oth);})){return true;}return false;};var isPrimaryEmrehrEntered=function isPrimaryEmrehrEntered(emrehr){if(emrehr.primary&&emrehr.primary.length>0){return true;}return false;};var isOtherEmrehrEntered=function isOtherEmrehrEntered(emrehr){if(emrehr.others&&emrehr.others.find(function(oth){return!isEmpty(oth);})){return true;}return false;};function isEmpty(str){return!str||str.length===0;}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/customResumeValidation.js"],"names":["validateResume","formValues","errorObj","isValid","errors","data","noResume","resumeFile","isEmpty","name","resume","push","categories","length","certifications","isPrimaryPresent","isPrimaryCertEntered","isOtherCertEntered","primary","emrehr","isPrimaryEmrehrEntered","isOtherEmrehrEntered","specialities","find","speciality","skill","years","educationLevel","others","oth","str"],"mappings":"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","sourcesContent":["\nexport function validateResume(formValues) {\n    const errorObj ={\n        isValid: true,\n        errors: {}\n    }\n    if(!formValues.data.noResume) {\n        if(formValues.data.resumeFile && isEmpty(formValues.data.resumeFile.name)) {\n            errorObj.isValid = false;\n            errorObj.errors.resume = [];\n            errorObj.errors.resume.push('Please upload/enter a resume details');\n        }\n    }\n    if(!formValues.categories || formValues.categories.length === 0){\n        errorObj.errors.categories = [];\n        errorObj.errors.categories.push('Please select at least one category');\n        errorObj.isValid = false;\n    }\n    if(formValues.certifications) {\n        const certifications = formValues.certifications;\n        const isPrimaryPresent = isPrimaryCertEntered(certifications);\n        if(!isPrimaryPresent) {\n            if(!isOtherCertEntered(certifications)) {\n                errorObj.errors.certifications = {};\n                errorObj.errors.certifications.primary = []\n                errorObj.errors.certifications.primary.push('Please select primary certification or enter other certification');\n                errorObj.isValid = false;\n            }\n        }\n    }\n    if(formValues.emrehr) {\n        const emrehr = formValues.emrehr;\n        const isPrimaryPresent = isPrimaryEmrehrEntered(emrehr);\n        if(!isPrimaryPresent) {\n            if(!isOtherEmrehrEntered(emrehr)) {\n                errorObj.errors.emrehr = {};\n                errorObj.errors.emrehr.primary = []\n                errorObj.errors.emrehr.primary.push('Please select primary emr/ehr or enter other emr/ehr');\n                errorObj.isValid = false;\n            }\n        }\n    }\n    if(formValues.specialities) {\n        formValues.specialities.find(speciality => {\n            if(speciality.skill === '' || speciality.years === '') {\n                errorObj.errors.specialities = [];\n                errorObj.errors.specialities.push('Please enter skill and years');\n                errorObj.isValid = false;\n            }\n        })\n    }\n    if(!formValues.educationLevel || formValues.educationLevel === ''){\n        errorObj.errors.educationLevel = [];\n        errorObj.errors.educationLevel.push('Please select education level');\n        errorObj.isValid = false;\n    }\n    return errorObj;\n}\n\nconst isPrimaryCertEntered = (certifications) => {\n    if(certifications.primary && certifications.primary.length > 0){\n        return true;\n    }\n    return false;\n}\nconst isOtherCertEntered = (certifications) => {\n    if(certifications.others && certifications.others.find(oth => !isEmpty(oth))){\n        return true;\n    }\n    return false;\n}\n\nconst isPrimaryEmrehrEntered = (emrehr) => {\n    if(emrehr.primary && emrehr.primary.length > 0){\n        return true;\n    }\n    return false;\n}\nconst isOtherEmrehrEntered = (emrehr) => {\n    if(emrehr.others && emrehr.others.find(oth => !isEmpty(oth))){\n        return true;\n    }\n    return false;\n}\nfunction isEmpty(str) {\n    return (!str || str.length === 0 );\n}\n"]},"metadata":{},"sourceType":"module"}