{"ast":null,"code":"import { loginFailure, loginSuccess, loginRequest, reset } from './slice';\nimport { setLoading } from \"../common/Loader/slice\";\nimport requestUtil from '../../helpers/requestUtil';\nexport function login(_ref) {\n  let {\n    url,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    dispatch(loginRequest());\n    dispatch(setLoading(true));\n\n    try {\n      const response = await requestUtil(url, 'POST', {\n        username: email,\n        password\n      });\n      dispatch(loginSuccess(response));\n    } catch (error) {\n      dispatch(loginFailure(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function resetError() {\n  return async dispatch => {\n    dispatch(reset());\n  };\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Login/action.js"],"names":["loginFailure","loginSuccess","loginRequest","reset","setLoading","requestUtil","login","url","email","password","dispatch","response","username","error","message","resetError"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,KAAnD,QAAgE,SAAhE;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAO,SAASC,KAAT,OAAuC;AAAA,MAAxB;AAACC,IAAAA,GAAD;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAwB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AAC1BA,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACAQ,IAAAA,QAAQ,CAACN,UAAU,CAAC,IAAD,CAAX,CAAR;;AACA,QAAI;AACA,YAAMO,QAAQ,GAAG,MAAMN,WAAW,CAACE,GAAD,EAAM,MAAN,EAAc;AAACK,QAAAA,QAAQ,EAAEJ,KAAX;AAAkBC,QAAAA;AAAlB,OAAd,CAAlC;AACAC,MAAAA,QAAQ,CAACT,YAAY,CAACU,QAAD,CAAb,CAAR;AACH,KAHD,CAGE,OAAOE,KAAP,EAAc;AACZH,MAAAA,QAAQ,CAACV,YAAY,CAACa,KAAK,CAACC,OAAP,CAAb,CAAR;AACH;;AACDJ,IAAAA,QAAQ,CAACN,UAAU,CAAC,KAAD,CAAX,CAAR;AACF,GAVC;AAWH;AAED,OAAO,SAASW,UAAT,GAAsB;AACzB,SAAO,MAAOL,QAAP,IAAoB;AACxBA,IAAAA,QAAQ,CAACP,KAAK,EAAN,CAAR;AACF,GAFD;AAGH","sourcesContent":["import { loginFailure, loginSuccess, loginRequest, reset } from './slice';\nimport { setLoading } from \"../common/Loader/slice\";\nimport requestUtil from '../../helpers/requestUtil';\n\nexport function login({url, email, password}) {\n    return async (dispatch) => {\n     dispatch(loginRequest());\n     dispatch(setLoading(true));\n     try {\n         const response = await requestUtil(url, 'POST', {username: email, password});\n         dispatch(loginSuccess(response));\n     } catch (error) {\n         dispatch(loginFailure(error.message));\n     }\n     dispatch(setLoading(false));\n  };\n}\n\nexport function resetError() {\n    return async (dispatch) => {\n       dispatch(reset());\n    };\n}\n"]},"metadata":{},"sourceType":"module"}