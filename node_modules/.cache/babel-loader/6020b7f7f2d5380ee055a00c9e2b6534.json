{"ast":null,"code":"import _defineProperty from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import TextField from\"../../common/TextField/withLabel\";import React,{useEffect}from\"react\";import{personalInfoSelector}from\"./selector\";import{updatePersonalInfo}from\"./action\";import{useDispatch,useSelector}from\"react-redux\";import TextFieldFormatted from\"../../common/TextFieldPhoneNumber\";import DropDown from\"../../common/TextField/dropDown\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var errors=props.errors;var _useSelector=useSelector(personalInfoSelector),data=_useSelector.data,masterData=_useSelector.masterData;var dispatch=useDispatch();var _React$useState=React.useState(data),_React$useState2=_slicedToArray(_React$useState,2),form=_React$useState2[0],setForm=_React$useState2[1];useEffect(function(){dispatch(updatePersonalInfo(form));},[form]);var updateEmergencyForm=function updateEmergencyForm(target){setForm(_objectSpread(_objectSpread({},data),{},{emergencyContact:_objectSpread(_objectSpread({},data.emergencyContact),{},_defineProperty({},target.name,target.value))}));};var updateRelationship=function updateRelationship(target){setForm(_objectSpread(_objectSpread({},data),{},{emergencyContact:_objectSpread(_objectSpread({},data.emergencyContact),{},{relationship:[target.value]})}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(TextField,{name:'firstName',label:'First Name*',placeholder:\"First Name\",updateValue:updateEmergencyForm,value:data.emergencyContact.firstName,errors:errors['firstName']}),/*#__PURE__*/_jsx(TextField,{name:'lastName',label:'Last Name*',placeholder:\"Last Name\",updateValue:updateEmergencyForm,value:data.emergencyContact.lastName,errors:errors['lastName']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(TextField,{name:'phoneNumber',label:'Phone Number*',placeholder:\"Phone Number\",updateValue:updateEmergencyForm,value:data.emergencyContact.phoneNumber,errors:errors['phoneNumber'],format:\"phone\"}),/*#__PURE__*/_jsx(DropDown,{name:\"relationship\",label:'Relationship*',placeholder:\"Relationship\",updateValue:updateRelationship,value:data.emergencyContact.relationship,options:masterData.relationships,showArrow:true,isObject:true,multiple:false,errors:errors['relationship']})]})]});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/emergencyContactForm.js"],"names":["TextField","React","useEffect","personalInfoSelector","updatePersonalInfo","useDispatch","useSelector","TextFieldFormatted","DropDown","props","errors","data","masterData","dispatch","useState","form","setForm","updateEmergencyForm","target","emergencyContact","name","value","updateRelationship","relationship","firstName","lastName","phoneNumber","relationships"],"mappings":"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","sourcesContent":["import TextField from \"../../common/TextField/withLabel\";\nimport React, {useEffect} from \"react\";\nimport {personalInfoSelector} from \"./selector\";\nimport {updatePersonalInfo} from \"./action\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport TextFieldFormatted from \"../../common/TextFieldPhoneNumber\";\nimport DropDown from \"../../common/TextField/dropDown\";\n\nexport default (props) => {\n    const {errors} = props;\n    const {data, masterData} = useSelector(personalInfoSelector);\n    const dispatch = useDispatch();\n    const [form, setForm] = React.useState(data);\n    useEffect(() => {\n        dispatch(updatePersonalInfo(form));\n    }, [form]);\n    const updateEmergencyForm = (target) => {\n        setForm({\n            ...data,\n            emergencyContact: {\n                ...data.emergencyContact,\n                [target.name]: target.value\n            }\n        });\n    };\n    const updateRelationship = (target) => {\n        setForm({\n            ...data,\n            emergencyContact: {\n                ...data.emergencyContact,\n                relationship: [target.value]\n            }\n        });\n    };\n    return (\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <TextField name={'firstName'} label={'First Name*'} placeholder={\"First Name\"}\n                           updateValue={updateEmergencyForm} value={data.emergencyContact.firstName}\n                           errors={errors['firstName']}/>\n                <TextField name={'lastName'} label={'Last Name*'} placeholder={\"Last Name\"}\n                           updateValue={updateEmergencyForm} value={data.emergencyContact.lastName}\n                           errors={errors['lastName']}/>\n            </div>\n            <div className=\"row\">\n                <TextField name={'phoneNumber'} label={'Phone Number*'} placeholder={\"Phone Number\"}\n                           updateValue={updateEmergencyForm} value={data.emergencyContact.phoneNumber}\n                           errors={errors['phoneNumber']} format={\"phone\"}/>\n                <DropDown name={\"relationship\"} label={'Relationship*'}\n                          placeholder={\"Relationship\"} updateValue={updateRelationship}\n                          value={data.emergencyContact.relationship}\n                          options={masterData.relationships} showArrow={true} isObject={true} multiple={false}\n                          errors={errors['relationship']}/>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}