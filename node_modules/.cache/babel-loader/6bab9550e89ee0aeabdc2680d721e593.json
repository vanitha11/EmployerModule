{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\common\\\\TextFieldPhoneNumber\\\\index.js\";\nimport React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'; //mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: divClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [!props.noLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n        format: \"###-###-####\",\n        className: \"form-control\",\n        id: props.name,\n        value: props.value,\n        placeholder: props.placeholder,\n        name: props.name,\n        onValueChange: values => {\n          const {\n            formattedValue,\n            value\n          } = props.updateValue(values); // formattedValue = $2,223\n          // value ie, 2223\n\n          this.setState({\n            profit: formattedValue\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 1\n      }, this), props.errors && props.errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-input\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextFieldPhoneNumber/index.js"],"names":["React","PhoneInput","props","divClass","noLabel","name","label","value","placeholder","values","formattedValue","updateValue","setState","profit","errors","map","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CACA;AACA;;;AACA,gBAAgBC,KAAD,IAAW;AACtB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAvB,GAAkC,oBAAnD;AACA,sBACI;AAAK,IAAA,SAAS,EAAEA,QAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACM,CAACD,KAAK,CAACE,OAAP,iBAAkB;AAAO,QAAA,OAAO,EAAEF,KAAK,CAACG,IAAtB;AAAA,kBAA6BH,KAAK,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,cADxB,eAQZ,QAAC,UAAD;AAEE,QAAA,MAAM,EAAC,cAFT;AAGE,QAAA,SAAS,EAAC,cAHZ;AAG2B,QAAA,EAAE,EAAEJ,KAAK,CAACG,IAHrC;AAG2C,QAAA,KAAK,EAAEH,KAAK,CAACK,KAHxD;AAIuB,QAAA,WAAW,EAAEL,KAAK,CAACM,WAJ1C;AAIuD,QAAA,IAAI,EAAEN,KAAK,CAACG,IAJnE;AAKuB,QAAA,aAAa,EAAGI,MAAD,IAAY;AAC1B,gBAAM;AAAEC,YAAAA,cAAF;AAAiBH,YAAAA;AAAjB,cAA2BL,KAAK,CAACS,WAAN,CAAkBF,MAAlB,CAAjC,CAD0B,CAE1B;AACA;;AACA,eAAKG,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAEH;AAAV,WAAd;AACD;AAVvB;AAAA;AAAA;AAAA;AAAA,cARY,EA8BKR,KAAK,CAACY,MAAN,IAAgBZ,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBAAK;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA3B,CA9BrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAtCD","sourcesContent":["import React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'\n//mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\nexport default (props) => {\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return(\n        <div className={divClass}>\n            <div className=\"form-group\">\n                { !props.noLabel && <label htmlFor={props.name}>{props.label}</label> }\n                {/*<PhoneInput type=\"text\" className=\"form-control\" id={props.name} value={props.value}\n                       placeholder={props.placeholder} name={props.name}\n                       onChange={(event) => props.updateValue(event.target)}\n                        autoFocus={props.autoFocus} format=\"###-###-####\" \n    />*/}\n\n<PhoneInput\n  \n  format=\"###-###-####\"\n  className=\"form-control\" id={props.name} value={props.value}\n                       placeholder={props.placeholder} name={props.name}\n                       onValueChange={(values) => {\n                        const { formattedValue,value } = props.updateValue(values);\n                        // formattedValue = $2,223\n                        // value ie, 2223\n                        this.setState({ profit: formattedValue });\n                      }}\n/>\n    \n{/*<PhoneInput\n       \n        value=\"\"\n        prefix=\"\"\n        displayType=\"input\"\n        type=\"text\"\n        allowNegative={true}\n        format=\"###-###-####\" onValueChange={(event) => props.updateValue(event.target)} />\n*/}\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}