{"ast":null,"code":"import { setLoading } from \"../common/Loader/slice\";\nimport requestUtil from '../../helpers/requestUtil';\nimport { signUpSuccess, signUpError, resetError } from './slice';\nexport function signup(_ref) {\n  let {\n    url,\n    formData\n  } = _ref;\n  return async dispatch => {\n    try {\n      dispatch(setLoading(true));\n      await requestUtil(url, 'POST', formData);\n      dispatch(signUpSuccess());\n    } catch (error) {\n      dispatch(signUpError(\"Sign up failed\"));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function reset() {\n  return async dispatch => {\n    dispatch(resetError());\n  };\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Signup/action.js"],"names":["setLoading","requestUtil","signUpSuccess","signUpError","resetError","signup","url","formData","dispatch","error","reset"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,SAAvD;AAEA,OAAO,SAASC,MAAT,OAAiC;AAAA,MAAjB;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAiB;AACpC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAACR,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMC,WAAW,CAACK,GAAD,EAAM,MAAN,EAAcC,QAAd,CAAjB;AACAC,MAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACH,KAJD,CAIE,OAAOO,KAAP,EAAc;AACZD,MAAAA,QAAQ,CAACL,WAAW,CAAC,gBAAD,CAAZ,CAAR;AACH;;AACDK,IAAAA,QAAQ,CAACR,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,GATD;AAUH;AAED,OAAO,SAASU,KAAT,GAAiB;AACpB,SAAO,MAAMF,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACH,GAFD;AAGH","sourcesContent":["import { setLoading } from \"../common/Loader/slice\";\nimport requestUtil from '../../helpers/requestUtil';\nimport { signUpSuccess, signUpError, resetError } from './slice';\n\nexport function signup({url, formData}) {\n    return async dispatch => {\n        try {\n            dispatch(setLoading(true));\n            await requestUtil(url, 'POST', formData);\n            dispatch(signUpSuccess());\n        } catch (error) {\n            dispatch(signUpError(\"Sign up failed\"));\n        }\n        dispatch(setLoading(false));\n    };\n}\n\nexport function reset() {\n    return async dispatch => {\n        dispatch(resetError());\n    };\n}\n"]},"metadata":{},"sourceType":"module"}