{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\common\\\\TextField\\\\dropDownStatic.js\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nthis.state = {\n  options: [{\n    name: 'Option 1️⃣',\n    id: 1\n  }, {\n    name: 'Option 2️⃣',\n    id: 2\n  }]\n};\nexport default (props => {\n  const selected = (selectedList, selectedItem) => {\n    props.updateValue({\n      value: selectedItem,\n      action: 'add'\n    });\n  };\n\n  const unSelected = (selectedList, selectedItem) => {\n    props.updateValue({\n      value: selectedItem,\n      action: 'remove'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${props.divClass || 'col-lg-6 col-md-12'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n        isObject: props.isObject || false,\n        onRemove: unSelected,\n        displayValue: props.displayValue || 'name',\n        onSelect: selected,\n        options: this.state.options,\n        selectedValues: props.value,\n        singleSelect: !props.multiple,\n        selectionLimit: !props.multiple ? 1 : -1,\n        hidePlaceholder: true,\n        showArrow: true,\n        avoidHighlightFirstOption: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), props.errors && props.errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-input\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextField/dropDownStatic.js"],"names":["Multiselect","React","state","options","name","id","props","selected","selectedList","selectedItem","updateValue","value","action","unSelected","divClass","label","isObject","displayValue","multiple","errors","map","error"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,KAAKC,KAAL,GAAa;AACTC,EAAAA,OAAO,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,EAAE,EAAE;AAAzB,GAAD,EAA6B;AAACD,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,EAAE,EAAE;AAAzB,GAA7B;AADA,CAAb;AAGA,gBAAgBC,KAAD,IAAW;AACtB,QAAMC,QAAQ,GAAI,CAACC,YAAD,EAAeC,YAAf,KAAgC;AAC9CH,IAAAA,KAAK,CAACI,WAAN,CAAkB;AACdC,MAAAA,KAAK,EAAEF,YADO;AAEdG,MAAAA,MAAM,EAAE;AAFM,KAAlB;AAIH,GALD;;AAMA,QAAMC,UAAU,GAAI,CAACL,YAAD,EAAeC,YAAf,KAAgC;AAChDH,IAAAA,KAAK,CAACI,WAAN,CAAkB;AACdC,MAAAA,KAAK,EAAEF,YADO;AAEdG,MAAAA,MAAM,EAAE;AAFM,KAAlB;AAIH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEN,KAAK,CAACQ,QAAN,IAAkB,oBAAsB,EAA3D;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAER,KAAK,CAACF,IAAtB;AAAA,kBAA6BE,KAAK,CAACS;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,QAAQ,EAAET,KAAK,CAACU,QAAN,IAAkB,KADhC;AAEI,QAAA,QAAQ,EAAEH,UAFd;AAGI,QAAA,YAAY,EAAEP,KAAK,CAACW,YAAN,IAAsB,MAHxC;AAII,QAAA,QAAQ,EAAEV,QAJd;AAKI,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,OALxB;AAMI,QAAA,cAAc,EAAEG,KAAK,CAACK,KAN1B;AAOI,QAAA,YAAY,EAAE,CAACL,KAAK,CAACY,QAPzB;AAQI,QAAA,cAAc,EAAE,CAACZ,KAAK,CAACY,QAAP,GAAkB,CAAlB,GAAsB,CAAC,CAR3C;AASI,QAAA,eAAe,EAAE,IATrB;AAUI,QAAA,SAAS,EAAE,IAVf;AAWI,QAAA,yBAAyB,EAAE;AAX/B;AAAA;AAAA;AAAA;AAAA,cAFJ,EAeKZ,KAAK,CAACa,MAAN,IAAgBb,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBAAK;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA3B,CAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlCD","sourcesContent":["import {Multiselect} from \"multiselect-react-dropdown\";\r\nimport React from \"react\";\r\nthis.state = {\r\n    options: [{name: 'Option 1️⃣', id: 1},{name: 'Option 2️⃣', id: 2}]\r\n};\r\nexport default (props) => {\r\n    const selected = ((selectedList, selectedItem) => {\r\n        props.updateValue({\r\n            value: selectedItem,\r\n            action: 'add'\r\n        });\r\n    });\r\n    const unSelected = ((selectedList, selectedItem) => {\r\n        props.updateValue({\r\n            value: selectedItem,\r\n            action: 'remove'\r\n        });\r\n    });\r\n    return (\r\n        <div className={`${props.divClass || 'col-lg-6 col-md-12' }`}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor={props.name}>{props.label}</label>\r\n                <Multiselect\r\n                    isObject={props.isObject || false}\r\n                    onRemove={unSelected}\r\n                    displayValue={props.displayValue || 'name'}\r\n                    onSelect={selected}\r\n                    options={this.state.options}\r\n                    selectedValues={props.value}\r\n                    singleSelect={!props.multiple}\r\n                    selectionLimit={!props.multiple ? 1 : -1}\r\n                    hidePlaceholder={true}\r\n                    showArrow={true}\r\n                    avoidHighlightFirstOption={true}\r\n                />\r\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}