{"ast":null,"code":"import _toConsumableArray from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export var serverToState=function serverToState(serverData,masterDatas){var data={};data.data={noResume:serverData.noResume,resumeFile:{name:serverData.resumeFileName}};data.workHistory=serverData.workHistoryList.map(function(work){return{employer:work.name,fromMonth:work.fromMonth,fromYear:work.fromYear,toMonth:work.toMonth,toYear:work.toYear};});if(!data.workHistory||data.workHistory.length===0){data.workHistory=[{employer:'',fromMonth:'',fromYear:'',toMonth:'',toYear:''}];}else{data.data.noResume=true;console.log(\"transform\");}data.educationList=serverData.educationList;if(!data.educationList||data.educationList.length===0){data.educationList=[{name:'',fromMonth:'',fromYear:'',toMonth:'',toYear:''}];}data.emrehr={};var primaryEmrehr=serverData.emrehrSystemList.filter(function(emrehr){return emrehr.isOther===false;});var otherEmrehr=serverData.emrehrSystemList.filter(function(emrehr){return emrehr.isOther===true;});data.emrehr.primary=primaryEmrehr?primaryEmrehr.map(function(emrehr){var eh=masterDatas.emrehr.find(function(em){return em.id===emrehr.id;});return _objectSpread({},eh);}):[];data.emrehr.others=otherEmrehr?otherEmrehr.map(function(emrehr){return emrehr.otherName;}):[\"\"];if(!data.emrehr.others||data.emrehr.others.length===0){data.emrehr.others=[\"\"];}data.categories=serverData.jobCategoryIdList.map(function(category){return _objectSpread({},masterDatas.jobCategories.find(function(cat){return cat.id===category;}));});data.specialities=serverData.specialtyList.map(function(speciality){return{skill:speciality.specialtyId,years:speciality.yearsOfExperience};});if(!data.specialities||data.specialities.length===0){data.specialities=[{skill:'',years:''}];}var primarycert=serverData.certificationsList.filter(function(cert){return cert.isOther===false;});var othercert=serverData.certificationsList.filter(function(cert){return cert.isOther===true;});data.certifications={};data.certifications.primary=primarycert?primarycert.map(function(cert){return _objectSpread({},masterDatas.certifications.find(function(em){return em.id===cert.id;}));}):[];data.certifications.others=othercert&&othercert.length>0?othercert.map(function(cert){return cert.otherName;}):[\"\"];data.educationLevel=serverData.levelofEducation;return data;};export var stateToServer=function stateToServer(stateData,candidateId,appUserId){var data={candidateId:candidateId,appUserId:appUserId};data.levelofEducation=stateData.educationLevel;data.jobCategoryIdList=stateData.categories.map(function(cat){return cat.id;});var primaryCert=stateData.certifications.primary.map(function(cert){return{id:cert.id,isOther:false};});var otherCert=stateData.certifications.others.map(function(cert){return{otherName:cert,isOther:true};});data.certificationsList=[].concat(_toConsumableArray(primaryCert),_toConsumableArray(otherCert));var primaryEmrehr=stateData.emrehr.primary.map(function(emrehr){return{id:emrehr.id,isOther:false};});var otherEmrehr=stateData.emrehr.others.map(function(emrehr){return{otherName:emrehr,isOther:true};});data.emrehrSystemList=[].concat(_toConsumableArray(primaryEmrehr),_toConsumableArray(otherEmrehr));data.specialityList=stateData.specialities.map(function(speciality){return{specialtyId:speciality.skill,yearsOfExperience:speciality.years};});data.workHistoryList=stateData.workHistory.map(function(work){return{name:work.employer,fromMonth:work.fromMonth,fromYear:work.fromYear,toMonth:work.toMonth,toYear:work.toYear};});data.educationList=stateData.educationList;data.noResume=stateData.data.noResume;return data;};","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/transformer.js"],"names":["serverToState","serverData","masterDatas","data","noResume","resumeFile","name","resumeFileName","workHistory","workHistoryList","map","work","employer","fromMonth","fromYear","toMonth","toYear","length","console","log","educationList","emrehr","primaryEmrehr","emrehrSystemList","filter","isOther","otherEmrehr","primary","eh","find","em","id","others","otherName","categories","jobCategoryIdList","category","jobCategories","cat","specialities","specialtyList","speciality","skill","specialtyId","years","yearsOfExperience","primarycert","certificationsList","cert","othercert","certifications","educationLevel","levelofEducation","stateToServer","stateData","candidateId","appUserId","primaryCert","otherCert","specialityList"],"mappings":"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","sourcesContent":["export const serverToState = (serverData, masterDatas) => {\n    const data = {};\n    data.data = {\n        noResume: serverData.noResume,\n        resumeFile:{\n            name: serverData.resumeFileName,\n        }\n    };\n    data.workHistory = serverData.workHistoryList.map(work => {\n        return {\n            employer: work.name,\n            fromMonth: work.fromMonth,\n            fromYear: work.fromYear,\n            toMonth: work.toMonth,\n            toYear: work.toYear,\n        }\n    });\n    if(!data.workHistory || data.workHistory.length === 0){\n        data.workHistory = [{\n            employer: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: '',\n        }];\n    } else {\n        data.data.noResume = true;\n        console.log(\"transform\");\n    }\n    data.educationList = serverData.educationList;\n    if(!data.educationList || data.educationList.length === 0){\n        data.educationList = [{\n            name: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: '',\n        }];\n    }\n    data.emrehr = {};\n    const primaryEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === false);\n    const otherEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === true);\n    data.emrehr.primary = primaryEmrehr ? primaryEmrehr.map(emrehr => {\n        const eh = masterDatas.emrehr.find(em => em.id === emrehr.id);\n        return {...eh}\n    }) : [];\n    data.emrehr.others = otherEmrehr ? otherEmrehr.map(emrehr => {\n        return emrehr.otherName;\n    }) : [\"\"];\n    if(!data.emrehr.others || data.emrehr.others.length === 0){\n        data.emrehr.others = [\"\"];\n    }\n    data.categories = serverData.jobCategoryIdList.map(category => {\n        return {...masterDatas.jobCategories.find(cat => cat.id === category)};\n    });\n    data.specialities = serverData.specialtyList.map(speciality => {\n        return {\n            skill: speciality.specialtyId,\n            years: speciality.yearsOfExperience,\n        }\n    });\n    if(!data.specialities || data.specialities.length === 0){\n        data.specialities = [{\n            skill: '',\n            years: '',\n        }];\n    }\n    const primarycert = serverData.certificationsList.filter(cert => cert.isOther === false);\n    const othercert = serverData.certificationsList.filter(cert => cert.isOther === true);\n    data.certifications = {};\n    data.certifications.primary = primarycert ? primarycert.map(cert => {\n        return {...masterDatas.certifications.find(em => em.id === cert.id)};\n    }) : [];\n    data.certifications.others = (othercert && othercert.length>0) ? othercert.map(cert => {\n        return cert.otherName;\n    }) : [\"\"];\n    data.educationLevel = serverData.levelofEducation;\n    return data;\n}\nexport const stateToServer = (stateData, candidateId, appUserId) => {\n    const data = {candidateId, appUserId};\n    data.levelofEducation = stateData.educationLevel;\n    data.jobCategoryIdList = stateData.categories.map(cat => cat.id);\n    const primaryCert = stateData.certifications.primary.map(cert => {\n        return {\n            id: cert.id,\n            isOther: false,\n        }\n    })\n    const otherCert = stateData.certifications.others.map(cert => {\n        return {\n            otherName: cert,\n            isOther: true,\n        }\n    })\n    data.certificationsList = [...primaryCert, ...otherCert];\n    const primaryEmrehr = stateData.emrehr.primary.map(emrehr => {\n        return {\n            id: emrehr.id,\n            isOther: false,\n        }\n    });\n    const otherEmrehr = stateData.emrehr.others.map(emrehr => {\n        return {\n            otherName: emrehr,\n            isOther: true,\n        }\n    });\n    data.emrehrSystemList = [...primaryEmrehr, ...otherEmrehr];\n    data.specialityList= stateData.specialities.map(speciality => {\n        return {\n            specialtyId: speciality.skill,\n            yearsOfExperience: speciality.years,\n        }\n    });\n    data.workHistoryList = stateData.workHistory.map(work => {\n        return {\n            name: work.employer,\n            fromMonth: work.fromMonth,\n            fromYear: work.fromYear,\n            toMonth: work.toMonth,\n            toYear: work.toYear,\n        }\n    });\n    data.educationList = stateData.educationList;\n    data.noResume = stateData.data.noResume;\n    return data;\n}\n"]},"metadata":{},"sourceType":"module"}