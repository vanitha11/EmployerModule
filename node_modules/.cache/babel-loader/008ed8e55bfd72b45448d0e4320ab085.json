{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default(function(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"custom-control custom-checkbox mt-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"custom-control-input\",name:props.name,value:props.value,checked:props.checked,onChange:function onChange(event){return props.updateValue({name:props.name,value:event.target.checked});}}),/*#__PURE__*/_jsx(\"span\",{className:\"custom-control-label\",children:props.children})]}),props.errors&&props.errors.map(function(error){return/*#__PURE__*/_jsx(\"div\",{className:\"invalid-input\",children:error});})]});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/Checkbox/index.js"],"names":["React","props","name","value","checked","event","updateValue","target","children","errors","map","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,6IAEA,eAAe,SAACC,KAAD,CAAW,CAEtB,mBACI,wCACI,eAAO,SAAS,CAAC,qCAAjB,wBACI,cAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAC,sBAAjC,CAAwD,IAAI,CAAEA,KAAK,CAACC,IAApE,CACO,KAAK,CAAED,KAAK,CAACE,KADpB,CAC2B,OAAO,CAAEF,KAAK,CAACG,OAD1C,CACmD,QAAQ,CAAG,kBAAAC,KAAK,QAAIJ,CAAAA,KAAK,CAACK,WAAN,CAAkB,CAACJ,IAAI,CAAED,KAAK,CAACC,IAAb,CAAmBC,KAAK,CAAEE,KAAK,CAACE,MAAN,CAAaH,OAAvC,CAAlB,CAAJ,EADnE,EADJ,cAGI,aAAM,SAAS,CAAC,sBAAhB,UACKH,KAAK,CAACO,QADX,EAHJ,GADJ,CAQKP,KAAK,CAACQ,MAAN,EAAgBR,KAAK,CAACQ,MAAN,CAAaC,GAAb,CAAiB,SAAAC,KAAK,qBAAK,YAAK,SAAS,CAAC,eAAf,UAAgCA,KAAhC,EAAL,EAAtB,CARrB,GADJ,CAYH,CAdD","sourcesContent":["import React from \"react\";\n\nexport default (props) => {\n\n    return(\n        <>\n            <label className=\"custom-control custom-checkbox mt-4\">\n                <input type=\"checkbox\" className=\"custom-control-input\" name={props.name}\n                       value={props.value} checked={props.checked} onChange={(event => props.updateValue({name: props.name, value: event.target.checked}))}/>\n                <span className=\"custom-control-label\">\n                    {props.children}\n                </span>\n            </label>\n            {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}