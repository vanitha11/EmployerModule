{"ast":null,"code":"import React from\"react\";import'./input.css';import formatters from\"./formatters\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var formatValue=function formatValue(target){if(props.format){target.value=formatters(target.value,props.format);}return target;};var divClass=props.divClass?props.divClass:'col-lg-6 col-md-12';return/*#__PURE__*/_jsx(\"div\",{className:divClass,children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[!props.noLabel&&/*#__PURE__*/_jsx(\"label\",{htmlFor:props.name,children:props.label}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:props.name,value:props.value,placeholder:props.placeholder,name:props.name,onChange:function onChange(event){return props.updateValue(formatValue(event.target));},autoFocus:props.autoFocus}),props.errors&&props.errors.map(function(error){return/*#__PURE__*/_jsx(\"div\",{className:\"invalid-input\",children:error});})]})});});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextField/withLabel.js"],"names":["React","formatters","props","formatValue","target","format","value","divClass","noLabel","name","label","placeholder","event","updateValue","autoFocus","errors","map","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAEA,eAAe,SAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC5B,GAAIF,KAAK,CAACG,MAAV,CAAkB,CACdD,MAAM,CAACE,KAAP,CAAeL,UAAU,CAACG,MAAM,CAACE,KAAR,CAAeJ,KAAK,CAACG,MAArB,CAAzB,CACH,CACD,MAAOD,CAAAA,MAAP,CACH,CALD,CAMA,GAAMG,CAAAA,QAAQ,CAAGL,KAAK,CAACK,QAAN,CAAiBL,KAAK,CAACK,QAAvB,CAAkC,oBAAnD,CACA,mBACI,YAAK,SAAS,CAAEA,QAAhB,uBACI,aAAK,SAAS,CAAC,YAAf,WACK,CAACL,KAAK,CAACM,OAAP,eAAkB,cAAO,OAAO,CAAEN,KAAK,CAACO,IAAtB,UAA6BP,KAAK,CAACQ,KAAnC,EADvB,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,cAA7B,CAA4C,EAAE,CAAER,KAAK,CAACO,IAAtD,CAA4D,KAAK,CAAEP,KAAK,CAACI,KAAzE,CACO,WAAW,CAAEJ,KAAK,CAACS,WAD1B,CACuC,IAAI,CAAET,KAAK,CAACO,IADnD,CAEO,QAAQ,CAAE,kBAACG,KAAD,QAAWV,CAAAA,KAAK,CAACW,WAAN,CAAkBV,WAAW,CAACS,KAAK,CAACR,MAAP,CAA7B,CAAX,EAFjB,CAGO,SAAS,CAAEF,KAAK,CAACY,SAHxB,EAFJ,CAMKZ,KAAK,CAACa,MAAN,EAAgBb,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAiB,SAAAC,KAAK,qBAAK,YAAK,SAAS,CAAC,eAAf,UAAgCA,KAAhC,EAAL,EAAtB,CANrB,GADJ,EADJ,CAYH,CApBD","sourcesContent":["import React from \"react\";\nimport './input.css';\nimport formatters from \"./formatters\";\n\nexport default (props) => {\n    const formatValue = (target) => {\n        if (props.format) {\n            target.value = formatters(target.value, props.format);\n        }\n        return target;\n    };\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return (\n        <div className={divClass}>\n            <div className=\"form-group\">\n                {!props.noLabel && <label htmlFor={props.name}>{props.label}</label>}\n                <input type=\"text\" className=\"form-control\" id={props.name} value={props.value}\n                       placeholder={props.placeholder} name={props.name}\n                       onChange={(event) => props.updateValue(formatValue(event.target))}\n                       autoFocus={props.autoFocus}/>\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}