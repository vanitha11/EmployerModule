{"ast":null,"code":"import { setHolidayPreference, setPreferredWorkDays, setTravelDistance, setVaccination, addPreferredShifts, setMasterDatas, loadPreferencedata, removePreferredShifts } from './slice';\nimport { setLoading } from \"../../common/Loader/slice\";\nimport { nextTab } from \"../action\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport { stateToServer } from \"./transformer\";\nimport { setError } from \"../slice\";\nexport function updateHolidayPreference(value) {\n  return dispatch => {\n    dispatch(setHolidayPreference(value));\n  };\n}\nexport function updatePreferredWorkDays(value) {\n  return dispatch => {\n    dispatch(setPreferredWorkDays(value));\n  };\n}\nexport function updateTravelDistance(value) {\n  return dispatch => {\n    dispatch(setTravelDistance(value));\n  };\n}\nexport function updateVaccination(value) {\n  return dispatch => {\n    dispatch(setVaccination(value));\n  };\n}\nexport function updatePreferredShifts(value, action) {\n  return dispatch => {\n    switch (action) {\n      case 'add':\n        dispatch(addPreferredShifts(value));\n        break;\n\n      case 'remove':\n        dispatch(removePreferredShifts(value));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\nexport function getMasterData(baseUrl) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const shifts = await requestUtil(`${baseUrl}/Dropdown/GetPreferredShifts`, 'GET');\n      const travelDistance = await requestUtil(`${baseUrl}/Dropdown/GetTravelDistances`, 'GET');\n      const preferredWorkDays = await requestUtil(`${baseUrl}/Dropdown/GetPreferredWorkDays`, 'GET');\n      const holidayPreference = await requestUtil(`${baseUrl}/Dropdown/GetWillingtoworkholidays`, 'GET');\n      const covidVaccine = await requestUtil(`${baseUrl}/Dropdown/GetCovidvaccinated`, 'GET');\n      let keyIndex = 0;\n      const formattedHolidays = holidayPreference.reduce((acc, curr, index) => {\n        if (index % 3 === 0) {\n          keyIndex++;\n          acc[`row${keyIndex}`] = [curr];\n        } else {\n          acc[`row${keyIndex}`].push(curr);\n        }\n\n        return acc;\n      }, {});\n      dispatch(setLoading(false));\n      dispatch(setMasterDatas({\n        shifts,\n        travelDistance,\n        preferredWorkDays,\n        holidayPreference: formattedHolidays,\n        covidVaccine,\n        holidayPreferenceRaw: holidayPreference\n      }));\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error.message));\n    }\n  };\n}\nexport function savePreference(_ref) {\n  let {\n    url,\n    userId,\n    candidateId,\n    gotoNextTab = true\n  } = _ref;\n  return async (dispatch, getState) => {\n    dispatch(setLoading(true));\n    const stateData = getState().preference;\n    const data = stateToServer(stateData, candidateId, userId);\n\n    try {\n      await requestUtil(`${url}/Candidates/savepreferenceinfo`, 'POST', data);\n      gotoNextTab && dispatch(nextTab());\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(setLoading(false));\n  };\n}\nexport function getPreference(baseUrl, userId) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n\n    try {\n      const data = await requestUtil(`${baseUrl}/Candidates/getpreferenceinfo/${userId}`, 'GET');\n      dispatch(setLoading(false));\n      dispatch(loadPreferencedata(data));\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error.message));\n    }\n  };\n}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/action.js"],"names":["setHolidayPreference","setPreferredWorkDays","setTravelDistance","setVaccination","addPreferredShifts","setMasterDatas","loadPreferencedata","removePreferredShifts","setLoading","nextTab","requestUtil","stateToServer","setError","updateHolidayPreference","value","dispatch","updatePreferredWorkDays","updateTravelDistance","updateVaccination","updatePreferredShifts","action","getMasterData","baseUrl","shifts","travelDistance","preferredWorkDays","holidayPreference","covidVaccine","keyIndex","formattedHolidays","reduce","acc","curr","index","push","holidayPreferenceRaw","error","message","savePreference","url","userId","candidateId","gotoNextTab","getState","stateData","preference","data","getPreference"],"mappings":"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","sourcesContent":["import {\n  setHolidayPreference,\n  setPreferredWorkDays,\n  setTravelDistance,\n  setVaccination,\n  addPreferredShifts,\n  setMasterDatas,\n  loadPreferencedata,\n  removePreferredShifts\n} from './slice';\nimport {setLoading} from \"../../common/Loader/slice\";\nimport {nextTab} from \"../action\";\nimport requestUtil from \"../../../helpers/requestUtil\";\nimport { stateToServer } from \"./transformer\";\nimport { setError } from \"../slice\";\n\nexport function updateHolidayPreference(value) {\n  return (dispatch) => {\n    dispatch(setHolidayPreference(value));\n  };\n}\nexport function updatePreferredWorkDays(value) {\n  return (dispatch) => {\n    dispatch(setPreferredWorkDays(value));\n  };\n}\nexport function updateTravelDistance(value) {\n  return (dispatch) => {\n    dispatch(setTravelDistance(value));\n  };\n}\nexport function updateVaccination(value) {\n  return (dispatch) => {\n    dispatch(setVaccination(value));\n  };\n}\n\nexport function updatePreferredShifts(value, action) {\n  return (dispatch) => {\n    switch (action) {\n      case 'add':\n        dispatch(addPreferredShifts(value));\n        break;\n      case 'remove':\n        dispatch(removePreferredShifts(value));\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nexport function getMasterData(baseUrl) {\n  return async (dispatch) => {\n    dispatch(setLoading(true));\n    try {\n      const shifts = await requestUtil(`${baseUrl}/Dropdown/GetPreferredShifts`, 'GET');\n      const travelDistance = await requestUtil(`${baseUrl}/Dropdown/GetTravelDistances`, 'GET');\n      const preferredWorkDays = await requestUtil(`${baseUrl}/Dropdown/GetPreferredWorkDays`, 'GET');\n      const holidayPreference = await requestUtil(`${baseUrl}/Dropdown/GetWillingtoworkholidays`, 'GET');\n      const covidVaccine = await requestUtil(`${baseUrl}/Dropdown/GetCovidvaccinated`, 'GET');\n      let keyIndex = 0;\n      const formattedHolidays = holidayPreference.reduce((acc, curr, index) => {\n        if(index % 3 === 0){\n          keyIndex++;\n          acc[`row${keyIndex}`] = [curr];\n        } else {\n          acc[`row${keyIndex}`].push(curr);\n        }\n        return acc;\n      }, {});\n\n      dispatch(setLoading(false));\n      dispatch(setMasterDatas({\n        shifts,\n        travelDistance,\n        preferredWorkDays,\n        holidayPreference : formattedHolidays,\n        covidVaccine,\n        holidayPreferenceRaw: holidayPreference\n      }));\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error.message));\n    }\n  };\n}\n\nexport function savePreference({url, userId, candidateId, gotoNextTab = true}) {\n  return async (dispatch, getState) => {\n    dispatch(setLoading(true));\n    const stateData = getState().preference;\n    const data = stateToServer(stateData, candidateId, userId);\n    try {\n      await requestUtil(`${url}/Candidates/savepreferenceinfo`, 'POST', data);\n      gotoNextTab && dispatch(nextTab());\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n    dispatch(setLoading(false));\n  };\n}\n\nexport function getPreference(baseUrl, userId) {\n  return async (dispatch) => {\n    dispatch(setLoading(true));\n    try {\n      const data = await requestUtil(`${baseUrl}/Candidates/getpreferenceinfo/${userId}`, 'GET');\n      dispatch(setLoading(false));\n      dispatch(loadPreferencedata(data));\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error.message));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}