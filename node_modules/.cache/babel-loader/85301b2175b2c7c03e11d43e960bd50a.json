{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { serverToState } from \"./transformer\";\nconst initialState = {\n  preferredShifts: [],\n  travelDistance: {},\n  preferredWorkDays: [],\n  holidayPreference: {\n    preference: \"0\",\n    options: []\n  },\n  vaccination: null,\n  masterDatas: {\n    shifts: [],\n    travelDistance: [],\n    preferredWorkDays: [],\n    covidVaccine: [],\n    holidayPreference: {},\n    holidayPreferenceRaw: []\n  }\n};\nexport const preferenceSlice = createSlice({\n  name: \"preference\",\n  initialState,\n  reducers: {\n    loadPreferencedata: (state, action) => {\n      const transformedData = serverToState(action.payload, state.masterDatas);\n      state.preferredShifts = transformedData.preferredShifts;\n      state.travelDistance = transformedData.travelDistance;\n      state.preferredWorkDays = transformedData.preferredWorkDays;\n      state.holidayPreference = transformedData.holidayPreference;\n      state.vaccination = transformedData.vaccination;\n    },\n    addPreferredShifts: (state, action) => {\n      const newShifts = [...state.preferredShifts];\n      newShifts.push(action.payload);\n      state.preferredShifts = newShifts;\n    },\n    removePreferredShifts: (state, action) => {\n      const newShifts = state.preferredShifts.filter(shift => shift !== action.payload);\n      state.preferredShifts = newShifts;\n    },\n    setTravelDistance: (state, action) => {\n      state.travelDistance = action.payload;\n    },\n    setPreferredWorkDays: (state, action) => {\n      state.preferredWorkDays = action.payload;\n    },\n    setHolidayPreference: (state, action) => {\n      state.holidayPreference = action.payload;\n    },\n    setVaccination: (state, action) => {\n      state.vaccination = action.payload;\n    },\n    setMasterDatas: (state, action) => {\n      if (action.payload.shifts) {\n        state.masterDatas.shifts = action.payload.shifts;\n        state.masterDatas.travelDistance = action.payload.travelDistance;\n        state.masterDatas.preferredWorkDays = action.payload.preferredWorkDays;\n        state.masterDatas.holidayPreference = action.payload.holidayPreference;\n        state.masterDatas.holidayPreferenceRaw = action.payload.holidayPreferenceRaw;\n        state.masterDatas.covidVaccine = action.payload.covidVaccine;\n      }\n    }\n  }\n});\nexport const {\n  addPreferredShifts,\n  removePreferredShifts,\n  setTravelDistance,\n  setPreferredWorkDays,\n  setHolidayPreference,\n  setVaccination,\n  setMasterDatas,\n  loadPreferencedata\n} = preferenceSlice.actions;\nexport default preferenceSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/Preference/slice.js"],"names":["createSlice","serverToState","initialState","preferredShifts","travelDistance","preferredWorkDays","holidayPreference","preference","options","vaccination","masterDatas","shifts","covidVaccine","holidayPreferenceRaw","preferenceSlice","name","reducers","loadPreferencedata","state","action","transformedData","payload","addPreferredShifts","newShifts","push","removePreferredShifts","filter","shift","setTravelDistance","setPreferredWorkDays","setHolidayPreference","setVaccination","setMasterDatas","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport { serverToState } from \"./transformer\";\n\nconst initialState = {\n    preferredShifts: [],\n    travelDistance: {},\n    preferredWorkDays: [],\n    holidayPreference: {\n        preference: \"0\",\n        options: []\n    },\n    vaccination: null,\n    masterDatas: {\n        shifts: [],\n        travelDistance: [],\n        preferredWorkDays: [],\n        covidVaccine: [],\n        holidayPreference: {},\n        holidayPreferenceRaw: []\n    }\n}\n\nexport const preferenceSlice = createSlice({\n    name: \"preference\",\n    initialState,\n    reducers: {\n        loadPreferencedata: (state, action) => {\n          const transformedData = serverToState(action.payload, state.masterDatas);\n          state.preferredShifts = transformedData.preferredShifts;\n          state.travelDistance = transformedData.travelDistance;\n          state.preferredWorkDays = transformedData.preferredWorkDays;\n          state.holidayPreference = transformedData.holidayPreference;\n          state.vaccination = transformedData.vaccination;\n        },\n        addPreferredShifts: (state, action) => {\n            const newShifts = [...state.preferredShifts];\n            newShifts.push(action.payload);\n            state.preferredShifts = newShifts;\n        },\n        removePreferredShifts: (state, action) => {\n            const newShifts = state.preferredShifts.filter(shift => shift !== action.payload)\n            state.preferredShifts = newShifts;\n        },\n        setTravelDistance: (state, action) => {\n            state.travelDistance = action.payload;\n        },\n        setPreferredWorkDays: (state, action) => {\n            state.preferredWorkDays = action.payload;\n        },\n        setHolidayPreference: (state, action) => {\n            state.holidayPreference = action.payload;\n        },\n        setVaccination: (state, action) => {\n            state.vaccination = action.payload;\n        },\n        setMasterDatas: (state, action) => {\n            if(action.payload.shifts) {\n                state.masterDatas.shifts = action.payload.shifts;\n                state.masterDatas.travelDistance = action.payload.travelDistance;\n                state.masterDatas.preferredWorkDays = action.payload.preferredWorkDays\n                state.masterDatas.holidayPreference = action.payload.holidayPreference;\n                state.masterDatas.holidayPreferenceRaw = action.payload.holidayPreferenceRaw;\n                state.masterDatas.covidVaccine = action.payload.covidVaccine;\n            }\n        }\n    }\n});\n\nexport const { addPreferredShifts, removePreferredShifts, setTravelDistance, setPreferredWorkDays,\n    setHolidayPreference, setVaccination, setMasterDatas, loadPreferencedata } = preferenceSlice.actions;\nexport default preferenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}