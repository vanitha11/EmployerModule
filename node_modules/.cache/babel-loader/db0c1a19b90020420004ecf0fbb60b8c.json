{"ast":null,"code":"export default (async (url, method, body, headers, fileBody) => {\n  const requestHeaders = {\n    'Content-Type': fileBody ? '' : 'application/json',\n    'Accept': fileBody ? '*/*' : 'application/json',\n    ...headers\n  };\n  const request = fileBody ? {\n    method,\n    body\n  } : {\n    method,\n    headers: requestHeaders,\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(url, request);\n\n  if (response.ok) {\n    const data = await response.json();\n\n    if (data.statusCode && data.statusCode !== 200) {\n      throw new Error(data.message);\n    }\n\n    return data.data;\n  } else {\n    const contentType = response.headers.get(\"content-type\");\n    let message = '';\n\n    if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n      const data = await response.json();\n      message = data.message ? data.message : data;\n    } else {\n      message = await response.text();\n    }\n\n    throw new Error(message);\n  }\n});","map":{"version":3,"sources":["D:/React_Project/DevOTWebUI_ReactTeam/src/helpers/requestUtil.js"],"names":["url","method","body","headers","fileBody","requestHeaders","request","JSON","stringify","response","fetch","ok","data","json","statusCode","Error","message","contentType","get","indexOf","text"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,QAAnC,KAAgD;AAC3D,QAAMC,cAAc,GAAG;AACnB,oBAAgBD,QAAQ,GAAG,EAAH,GAAQ,kBADb;AAEnB,cAAUA,QAAQ,GAAG,KAAH,GAAW,kBAFV;AAGnB,OAAGD;AAHgB,GAAvB;AAKA,QAAMG,OAAO,GAAGF,QAAQ,GAAG;AACvBH,IAAAA,MADuB;AAEvBC,IAAAA;AAFuB,GAAH,GAGpB;AACAD,IAAAA,MADA;AAEAE,IAAAA,OAAO,EAAEE,cAFT;AAGAH,IAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHN,GAHJ;AAQA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMM,OAAN,CAA5B;;AACA,MAAIG,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACE,UAAL,IAAmBF,IAAI,CAACE,UAAL,KAAoB,GAA3C,EAAgD;AAC5C,YAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACH;;AACD,WAAOJ,IAAI,CAACA,IAAZ;AACH,GAND,MAMO;AACH,UAAMK,WAAW,GAAGR,QAAQ,CAACN,OAAT,CAAiBe,GAAjB,CAAqB,cAArB,CAApB;AACA,QAAIF,OAAO,GAAG,EAAd;;AACA,QAAIC,WAAW,IAAIA,WAAW,CAACE,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAhE,EAAmE;AAC/D,YAAMP,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAG,MAAAA,OAAO,GAAGJ,IAAI,CAACI,OAAL,GAAeJ,IAAI,CAACI,OAApB,GAA8BJ,IAAxC;AACH,KAHD,MAGO;AACHI,MAAAA,OAAO,GAAG,MAAMP,QAAQ,CAACW,IAAT,EAAhB;AACH;;AACD,UAAM,IAAIL,KAAJ,CAAUC,OAAV,CAAN;AACH;AACJ,CAhCD","sourcesContent":["export default async (url, method, body, headers, fileBody) => {\n    const requestHeaders = {\n        'Content-Type': fileBody ? '' : 'application/json',\n        'Accept': fileBody ? '*/*' : 'application/json',\n        ...headers\n    };\n    const request = fileBody ? {\n        method,\n        body\n    } : {\n        method,\n        headers: requestHeaders,\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(url, request);\n    if (response.ok) {\n        const data = await response.json();\n        if (data.statusCode && data.statusCode !== 200) {\n            throw new Error(data.message);\n        }\n        return data.data;\n    } else {\n        const contentType = response.headers.get(\"content-type\");\n        let message = '';\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n            const data = await response.json();\n            message = data.message ? data.message : data;\n        } else {\n            message = await response.text();\n        }\n        throw new Error(message);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}