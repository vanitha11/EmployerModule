{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    zipcode: '',\n    streetAddress: '',\n    city: '',\n    stateName: '',\n    cellNumber: '',\n    homePhoneNumber: '',\n    alternatePhoneNumber: '',\n    emergencyContact: {\n      firstName: '',\n      lastName: '',\n      phoneNumber: '',\n      relationship: ''\n    },\n    references: [{\n      id: 1,\n      firstName: '',\n      lastName: '',\n      phoneNumber: ''\n    }],\n    spokenLanguagesList: []\n  },\n  masterData: {\n    languages: []\n  },\n  personalInfoError: false\n};\nexport const personalInfoSlice = createSlice({\n  name: 'personalInfo',\n  initialState,\n  reducers: {\n    setPersonalInfo: (state, action) => {\n      state.data = action.payload;\n      state.personalInfoError = false;\n    },\n    setCityState: (state, action) => {\n      state.data.city = action.payload.city;\n      state.data.stateName = action.payload.state;\n    },\n    setPersonalInfoError: (state, action) => {\n      state.personalInfoError = action.payload;\n    },\n    setMasterData: (state, action) => {\n      if (action.payload.languages) {\n        state.masterData.languages = action.payload.languages;\n      }\n    },\n    addSpokenLanguagesList: (state, action) => {\n      const newLanguage = state.data.spokenLanguagesList ? [...state.data.spokenLanguagesList, action.payload] : [action.payload];\n      state.data.spokenLanguagesList = newLanguage;\n    },\n    removeSpokenLanguagesList: (state, action) => {\n      const newLanguage = state.data.spokenLanguagesList.filter(item => item.id !== action.payload.id);\n      state.data.spokenLanguagesList = [...newLanguage];\n    }\n  }\n});\nexport const {\n  setPersonalInfo,\n  setPersonalInfoError,\n  setCityState,\n  setMasterData,\n  addSpokenLanguagesList,\n  removeSpokenLanguagesList\n} = personalInfoSlice.actions;\nexport default personalInfoSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/slice.js"],"names":["createSlice","initialState","data","firstName","lastName","email","zipcode","streetAddress","city","stateName","cellNumber","homePhoneNumber","alternatePhoneNumber","emergencyContact","phoneNumber","relationship","references","id","spokenLanguagesList","masterData","languages","personalInfoError","personalInfoSlice","name","reducers","setPersonalInfo","state","action","payload","setCityState","setPersonalInfoError","setMasterData","addSpokenLanguagesList","newLanguage","removeSpokenLanguagesList","filter","item","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nconst initialState = {\n    data: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        zipcode: '',\n        streetAddress: '',\n        city: '',\n        stateName: '',\n        cellNumber: '',\n        homePhoneNumber: '',\n        alternatePhoneNumber: '',\n        emergencyContact: {\n            firstName: '',\n            lastName: '',\n            phoneNumber: '',\n            relationship: ''\n        },\n        references: [\n            {\n                id: 1,\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n            }\n        ],\n        spokenLanguagesList: [],\n    },\n    masterData:{\n        languages: []\n    },\n    personalInfoError: false,\n};\nexport const personalInfoSlice = createSlice({\n    name: 'personalInfo',\n    initialState,\n    reducers: {\n        setPersonalInfo: (state, action) => {\n            state.data = action.payload;\n            state.personalInfoError = false;\n        },\n        setCityState: (state, action) => {\n            state.data.city = action.payload.city;\n            state.data.stateName = action.payload.state;\n        },\n        setPersonalInfoError: (state, action) => {\n            state.personalInfoError = action.payload;\n        },\n        setMasterData: (state, action) => {\n            if(action.payload.languages){\n                state.masterData.languages = action.payload.languages;\n            }\n        },\n        addSpokenLanguagesList: (state, action) => {\n            const newLanguage = state.data.spokenLanguagesList ? [...state.data.spokenLanguagesList, action.payload] : [action.payload];\n            state.data.spokenLanguagesList = newLanguage;\n        },\n        removeSpokenLanguagesList: (state, action) => {\n            const newLanguage = state.data.spokenLanguagesList.filter(item => item.id !== action.payload.id);\n            state.data.spokenLanguagesList = [...newLanguage];\n        },\n    }\n});\nexport const { setPersonalInfo, setPersonalInfoError,setCityState, setMasterData, addSpokenLanguagesList, removeSpokenLanguagesList} = personalInfoSlice.actions;\nexport default personalInfoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}