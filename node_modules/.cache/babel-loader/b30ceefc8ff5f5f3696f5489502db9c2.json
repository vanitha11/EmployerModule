{"ast":null,"code":"import _asyncToGenerator from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{loadCandidateDashboard,loadCandidateDashboardError}from'./slice';import{setLoading}from\"../common/Loader/slice\";import requestUtil from\"../../helpers/requestUtil\";export function loadDashboard(url,candidateId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(setLoading(true));_context.prev=1;_context.next=4;return requestUtil(\"\".concat(url,\"/Dashboard/myprofileinfo/\").concat(candidateId),\"GET\");case 4:response=_context.sent;dispatch(loadCandidateDashboard(response));_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(loadCandidateDashboardError(_context.t0.message));dispatch(setLoading(false));case 12:dispatch(setLoading(false));case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Dashboard/action.js"],"names":["loadCandidateDashboard","loadCandidateDashboardError","setLoading","requestUtil","loadDashboard","url","candidateId","dispatch","response","message"],"mappings":"qPAAA,OAASA,sBAAT,CAAiCC,2BAAjC,KAAoE,SAApE,CACA,OAASC,UAAT,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA,MAAO,SAASC,CAAAA,aAAT,CAAuBC,GAAvB,CAA4BC,WAA5B,CAAyC,CAC5C,+FAAO,iBAAOC,QAAP,+HACHA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR,CADG,sCAGwBC,CAAAA,WAAW,WAAIE,GAAJ,qCAAmCC,WAAnC,EAAkD,KAAlD,CAHnC,QAGOE,QAHP,eAICD,QAAQ,CAACP,sBAAsB,CAACQ,QAAD,CAAvB,CAAR,CAJD,+EAMCD,QAAQ,CAACN,2BAA2B,CAAC,YAAMQ,OAAP,CAA5B,CAAR,CACAF,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR,CAPD,QASHK,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR,CATG,oEAAP,+DAWH","sourcesContent":["import { loadCandidateDashboard, loadCandidateDashboardError } from './slice';\nimport { setLoading } from \"../common/Loader/slice\";\nimport requestUtil from \"../../helpers/requestUtil\";\n\nexport function loadDashboard(url, candidateId) {\n    return async (dispatch) => {\n        dispatch(setLoading(true));\n        try {\n            const response = await requestUtil(`${url}/Dashboard/myprofileinfo/${candidateId}`, \"GET\");\n            dispatch(loadCandidateDashboard(response));\n        }catch (error) {\n            dispatch(loadCandidateDashboardError(error.message));\n            dispatch(setLoading(false));\n        }\n        dispatch(setLoading(false));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}