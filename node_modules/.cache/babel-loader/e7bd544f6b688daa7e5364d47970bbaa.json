{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\ProfileBuilder\\\\PersonalInfo\\\\registrationForm.js\",\n    _s = $RefreshSig$();\n\nimport TextField from \"../../common/TextField/withLabel\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { personalInfoSelector } from \"./selector\";\nimport { getCityState, updatePersonalInfo, getSpokenLanguages, updateLanguageList } from \"./action\";\nimport useConfiguration from \"../../../hooks/useConfiguration\";\nimport DropDown from \"../../common/TextField/dropDown\"; //import TextFieldFormatted from \"../../common/TextFieldPhoneNumber\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\nconst handleInput = value => {\n  return value.replace(phoneRegex, '$1-$2-$3');\n};\n\nconst handleInputChange = e => {\n  //const name = e.target.name \n  //const value = e.target.value \n  const {\n    name,\n    value\n  } = e.target;\n  setValues({ ...valuelues,\n    [name]: value.replace(phoneRegex, '$1-$2-$3')\n  });\n};\n\nexport default _s(props => {\n  _s();\n\n  const [values, setValues] = useState(initialValues);\n  const {\n    errors\n  } = props;\n  const {\n    data,\n    masterData\n  } = useSelector(personalInfoSelector);\n  const dispatch = useDispatch();\n  const config = useConfiguration();\n  const [form, setForm] = React.useState(data);\n  useEffect(() => {\n    dispatch(updatePersonalInfo(form));\n  }, [form]);\n  useEffect(() => {\n    config.baseUrl && dispatch(getSpokenLanguages(`${config.baseUrl}/Dropdown/GetSpokenLanguages`));\n  }, [config]);\n\n  const updateFormValue = target => {\n    setForm({ ...data,\n      [target.name]: target.value\n    });\n\n    if (target.name === 'zipcode' && target.value.length >= 5) {\n      zipCodeUpdated(target.value);\n    }\n  };\n\n  const updateLangValue = target => {\n    const value = target.value;\n    const action = target.action || 'add';\n    dispatch(updateLanguageList(value, action));\n  };\n\n  const zipCodeUpdated = value => {\n    dispatch(getCityState(`${config.baseUrl}/Zipcodes/getzipcodeinfo/${value}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'firstName',\n        label: 'First Name*',\n        placeholder: \"First Name\",\n        updateValue: updateFormValue,\n        value: data.firstName,\n        errors: errors['firstName']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: 'lastName',\n        label: 'Last Name*',\n        placeholder: \"Last Name\",\n        updateValue: updateFormValue,\n        value: data.lastName,\n        errors: errors['lastName']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'email',\n        label: 'Email*',\n        placeholder: \"Email\",\n        updateValue: updateFormValue,\n        value: data.email,\n        errors: errors['email']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Street address*',\n        name: 'streetAddress',\n        placeholder: \"Street address\",\n        updateValue: updateFormValue,\n        value: data.streetAddress,\n        errors: errors['streetAddress']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Zip Code*',\n        name: 'zipcode',\n        placeholder: \"Zip Code\",\n        updateValue: updateFormValue,\n        value: data.zipcode,\n        errors: errors['zipcode']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'City*',\n        name: 'city',\n        placeholder: \"City\",\n        updateValue: updateFormValue,\n        value: data.city,\n        errors: errors['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: 'State*',\n        name: 'stateName',\n        placeholder: \"State\",\n        updateValue: updateFormValue,\n        value: data.stateName,\n        errors: errors['stateName']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Cell Number*',\n        name: 'cellPhoneNumber',\n        placeholder: \"___-___-____\",\n        updateValue: updateFormValue,\n        value: handleInput(data.cellPhoneNumber),\n        errors: errors['cellPhoneNumber']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Home phone number',\n        name: 'homePhoneNumber',\n        placeholder: \"Home phone number\",\n        updateValue: updateFormValue,\n        value: data.homePhoneNumber,\n        errors: errors['homePhoneNumber']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Alternate Phone Number',\n        name: 'alternatePhoneNumber',\n        placeholder: \"Alternate Phone Number\",\n        updateValue: updateFormValue,\n        value: data.alternatePhoneNumber,\n        errors: errors['alternatePhoneNumber']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(DropDown, {\n        name: \"spokenLanguagesList\",\n        label: 'Spoken Languages*',\n        placeholder: \"Spoken Languages\",\n        updateValue: updateLangValue,\n        value: data.spokenLanguagesList || [],\n        options: masterData.languages,\n        showArrow: true,\n        isObject: true,\n        multiple: true,\n        errors: errors['spokenLanguagesList']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}, \"poJpweY6C+jFeF7O3FYczGfH7PA=\", false, function () {\n  return [useSelector, useDispatch, useConfiguration];\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/registrationForm.js"],"names":["TextField","React","useEffect","useSelector","useDispatch","personalInfoSelector","getCityState","updatePersonalInfo","getSpokenLanguages","updateLanguageList","useConfiguration","DropDown","phoneRegex","handleInput","value","replace","handleInputChange","e","name","target","setValues","valuelues","props","values","useState","initialValues","errors","data","masterData","dispatch","config","form","setForm","baseUrl","updateFormValue","length","zipCodeUpdated","updateLangValue","action","firstName","lastName","email","streetAddress","zipcode","city","stateName","cellPhoneNumber","homePhoneNumber","alternatePhoneNumber","spokenLanguagesList","languages"],"mappings":"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","sourcesContent":["import TextField from \"../../common/TextField/withLabel\";\nimport React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {personalInfoSelector} from \"./selector\";\nimport {getCityState, updatePersonalInfo, getSpokenLanguages, updateLanguageList} from \"./action\";\nimport useConfiguration from \"../../../hooks/useConfiguration\";\nimport DropDown from \"../../common/TextField/dropDown\";\n\n//import TextFieldFormatted from \"../../common/TextFieldPhoneNumber\";\n\nconst phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\nconst handleInput = (value) => {\n    return (\n      value.replace(phoneRegex, '$1-$2-$3')\n    )  \n  }\n  const handleInputChange = (e) => {\n    //const name = e.target.name \n    //const value = e.target.value \n    const { name, value } = e.target;\n\n    setValues({\n      ...valuelues,\n      [name]: value.replace(phoneRegex, '$1-$2-$3'),\n    });\n  };\n\nexport default (props) => {\n    const [values, setValues] = useState(initialValues);\n    const {errors} = props;\n    const { data, masterData } = useSelector(personalInfoSelector);\n    const dispatch = useDispatch();\n    const config = useConfiguration();\n    const [form, setForm] = React.useState(data);\n    useEffect(() => {\n        dispatch(updatePersonalInfo(form));\n    }, [form]);\n    useEffect(() => {\n        config.baseUrl && dispatch(getSpokenLanguages(`${config.baseUrl}/Dropdown/GetSpokenLanguages`));\n    }, [config]);\n    const updateFormValue = (target) => {\n        setForm({\n            ...data,\n            [target.name]: target.value\n        });\n        if(target.name === 'zipcode' && target.value.length >= 5) {\n            zipCodeUpdated(target.value);\n        }\n    };\n    const updateLangValue = (target) => {\n        const value = target.value;\n        const action = target.action || 'add';\n        dispatch(updateLanguageList(value, action));\n    };\n    const zipCodeUpdated = (value) => {\n        dispatch(getCityState(`${config.baseUrl}/Zipcodes/getzipcodeinfo/${value}`));\n    } \n\n\n    return (\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <TextField name={'firstName'} label={'First Name*'} placeholder={\"First Name\"} updateValue={updateFormValue} value={data.firstName} errors={errors['firstName']}/>\n                <TextField name={'lastName'} label={'Last Name*'} placeholder={\"Last Name\"} updateValue={updateFormValue} value={data.lastName} errors={errors['lastName']}/>\n            </div>\n            <div className=\"row\">\n                <TextField name={'email'} label={'Email*'} placeholder={\"Email\"} updateValue={updateFormValue} value={data.email} errors={errors['email']}/>\n                <TextField label={'Street address*'} name={'streetAddress'}\n                           placeholder={\"Street address\"} updateValue={updateFormValue} value={data.streetAddress} errors={errors['streetAddress']}/>\n            </div>\n            <div className=\"row\">\n                <TextField label={'Zip Code*'} name={'zipcode'} placeholder={\"Zip Code\"} updateValue={updateFormValue} value={data.zipcode} errors={errors['zipcode']}/>\n                <TextField label={'City*'} name={'city'} placeholder={\"City\"} updateValue={updateFormValue} value={data.city} errors={errors['city']}/>\n            </div>\n            <div className=\"row\">\n                <TextField label={'State*'} name={'stateName'} placeholder={\"State\"} updateValue={updateFormValue} value={data.stateName} errors={errors['stateName']}/>\n               {/*<TextField label={'Cell Number*'} name={'cellPhoneNumber'} placeholder={\"Cell Number\"} updateValue={updateFormValue} value={data.cellPhoneNumber} errors={errors['cellPhoneNumber']}/>\n                */}         \n                 <TextField label={'Cell Number*'} name={'cellPhoneNumber'} \n                placeholder={\"___-___-____\"} updateValue={updateFormValue}  \n                value={handleInput(data.cellPhoneNumber)} errors={errors['cellPhoneNumber']}               \n                />               \n            </div>\n            <div className=\"row\">\n                <TextField label={'Home phone number'} name={'homePhoneNumber'}\n                           placeholder={\"Home phone number\"} updateValue={updateFormValue} \n                           value={data.homePhoneNumber} errors={errors['homePhoneNumber']}/>\n                \n<TextField label={'Alternate Phone Number'} name={'alternatePhoneNumber'}\n                           placeholder={\"Alternate Phone Number\"} updateValue={updateFormValue}  value={data.alternatePhoneNumber} errors={errors['alternatePhoneNumber']}/>\n            </div>\n            <div className={\"row\"}>\n                <DropDown name={\"spokenLanguagesList\"} label={'Spoken Languages*'}\n                          placeholder={\"Spoken Languages\"} updateValue={updateLangValue}\n                          value={data.spokenLanguagesList || []}\n                          options={masterData.languages} showArrow={true} isObject={true} multiple={true} errors={errors['spokenLanguagesList']} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}