{"ast":null,"code":"export const serverToState = (serverData, masterDatas) => {\n  const data = {};\n  data.workHistory = serverData.workHistoryList.map(work => {\n    return {\n      employer: work.name,\n      fromMonth: work.fromMonth,\n      fromYear: work.fromYear,\n      toMonth: work.toMonth,\n      toYear: work.toYear\n    };\n  });\n\n  if (!data.workHistory || data.workHistory.length === 0) {\n    data.workHistory = [{\n      employer: '',\n      fromMonth: '',\n      fromYear: '',\n      toMonth: '',\n      toYear: ''\n    }];\n  }\n\n  data.educationList = serverData.educationList;\n\n  if (!data.educationList || data.educationList.length === 0) {\n    data.educationList = [{\n      name: '',\n      fromMonth: '',\n      fromYear: '',\n      toMonth: '',\n      toYear: ''\n    }];\n  }\n\n  data.emrehr = {};\n  const primaryEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === false);\n  const otherEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === true);\n  data.emrehr.primary = primaryEmrehr ? primaryEmrehr.map(emrehr => {\n    const eh = masterDatas.emrehr.find(em => em.id === emrehr.id);\n    return { ...eh\n    };\n  }) : [];\n  data.emrehr.others = otherEmrehr ? otherEmrehr.map(emrehr => {\n    return emrehr.otherName;\n  }) : [\"\"];\n\n  if (!data.emrehr.others || data.emrehr.others.length === 0) {\n    data.emrehr.others = [\"\"];\n  }\n\n  data.categories = serverData.jobCategoryIdList.map(category => {\n    return { ...masterDatas.jobCategories.find(cat => cat.id === category)\n    };\n  });\n  data.specialities = serverData.specialtyList.map(speciality => {\n    return {\n      skill: speciality.specialtyId,\n      years: speciality.yearsOfExperience\n    };\n  });\n\n  if (!data.specialities || data.specialities.length === 0) {\n    data.specialities = [{\n      skill: '',\n      years: ''\n    }];\n  }\n\n  const primarycert = serverData.certificationsList.filter(cert => cert.isOther === false);\n  const othercert = serverData.certificationsList.filter(cert => cert.isOther === true);\n  data.certifications = {};\n  data.certifications.primary = primarycert ? primarycert.map(cert => {\n    return { ...masterDatas.certifications.find(em => em.id === cert.id)\n    };\n  }) : [];\n  data.certifications.others = othercert && othercert.length > 0 ? othercert.map(cert => {\n    return cert.otherName;\n  }) : [\"\"];\n  data.educationLevel = serverData.levelofEducation;\n  return data;\n};\nexport const stateToServer = (stateData, candidateId, appUserId) => {\n  const data = {\n    candidateId,\n    appUserId\n  };\n  data.levelofEducation = stateData.educationLevel;\n  data.jobCategoryIdList = stateData.categories.map(cat => cat.id);\n  const primaryCert = stateData.certifications.primary.map(cert => {\n    return {\n      id: cert.id,\n      isOther: false\n    };\n  });\n  const otherCert = stateData.certifications.others.map(cert => {\n    return {\n      otherName: cert,\n      isOther: true\n    };\n  });\n  data.certificationsList = [...primaryCert, ...otherCert];\n  const primaryEmrehr = stateData.emrehr.primary.map(emrehr => {\n    return {\n      id: emrehr.id,\n      isOther: false\n    };\n  });\n  const otherEmrehr = stateData.emrehr.others.map(emrehr => {\n    return {\n      otherName: emrehr,\n      isOther: true\n    };\n  });\n  data.emrehrSystemList = [...primaryEmrehr, ...otherEmrehr];\n  data.specialityList = stateData.specialities.map(speciality => {\n    return {\n      specialtyId: speciality.skill,\n      yearsOfExperience: speciality.years\n    };\n  });\n  data.workHistoryList = stateData.workHistory.map(work => {\n    return {\n      name: work.employer,\n      fromMonth: work.fromMonth,\n      fromYear: work.fromYear,\n      toMonth: work.toMonth,\n      toYear: work.toYear\n    };\n  });\n  data.educationList = stateData.educationList;\n  data.noResume = stateData.data.noResume;\n  return data;\n};","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/transformer.js"],"names":["serverToState","serverData","masterDatas","data","workHistory","workHistoryList","map","work","employer","name","fromMonth","fromYear","toMonth","toYear","length","educationList","emrehr","primaryEmrehr","emrehrSystemList","filter","isOther","otherEmrehr","primary","eh","find","em","id","others","otherName","categories","jobCategoryIdList","category","jobCategories","cat","specialities","specialtyList","speciality","skill","specialtyId","years","yearsOfExperience","primarycert","certificationsList","cert","othercert","certifications","educationLevel","levelofEducation","stateToServer","stateData","candidateId","appUserId","primaryCert","otherCert","specialityList","noResume"],"mappings":"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","sourcesContent":["export const serverToState = (serverData, masterDatas) => {\n    const data = {};\n    data.workHistory = serverData.workHistoryList.map(work => {\n        return {\n            employer: work.name,\n            fromMonth: work.fromMonth,\n            fromYear: work.fromYear,\n            toMonth: work.toMonth,\n            toYear: work.toYear,\n        }\n    });\n    if(!data.workHistory || data.workHistory.length === 0){\n        data.workHistory = [{\n            employer: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: '',\n        }];\n    }\n    data.educationList = serverData.educationList;\n    if(!data.educationList || data.educationList.length === 0){\n        data.educationList = [{\n            name: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: '',\n        }];\n    }\n    data.emrehr = {};\n    const primaryEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === false);\n    const otherEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === true);\n    data.emrehr.primary = primaryEmrehr ? primaryEmrehr.map(emrehr => {\n        const eh = masterDatas.emrehr.find(em => em.id === emrehr.id);\n        return {...eh}\n    }) : [];\n    data.emrehr.others = otherEmrehr ? otherEmrehr.map(emrehr => {\n        return emrehr.otherName;\n    }) : [\"\"];\n    if(!data.emrehr.others || data.emrehr.others.length === 0){\n        data.emrehr.others = [\"\"];\n    }\n    data.categories = serverData.jobCategoryIdList.map(category => {\n        return {...masterDatas.jobCategories.find(cat => cat.id === category)};\n    });\n    data.specialities = serverData.specialtyList.map(speciality => {\n        return {\n            skill: speciality.specialtyId,\n            years: speciality.yearsOfExperience,\n        }\n    });\n    if(!data.specialities || data.specialities.length === 0){\n        data.specialities = [{\n            skill: '',\n            years: '',\n        }];\n    }\n    const primarycert = serverData.certificationsList.filter(cert => cert.isOther === false);\n    const othercert = serverData.certificationsList.filter(cert => cert.isOther === true);\n    data.certifications = {};\n    data.certifications.primary = primarycert ? primarycert.map(cert => {\n        return {...masterDatas.certifications.find(em => em.id === cert.id)};\n    }) : [];\n    data.certifications.others = (othercert && othercert.length>0) ? othercert.map(cert => {\n        return cert.otherName;\n    }) : [\"\"];\n    data.educationLevel = serverData.levelofEducation;\n    return data;\n}\nexport const stateToServer = (stateData, candidateId, appUserId) => {\n    const data = {candidateId, appUserId};\n    data.levelofEducation = stateData.educationLevel;\n    data.jobCategoryIdList = stateData.categories.map(cat => cat.id);\n    const primaryCert = stateData.certifications.primary.map(cert => {\n        return {\n            id: cert.id,\n            isOther: false,\n        }\n    })\n    const otherCert = stateData.certifications.others.map(cert => {\n        return {\n            otherName: cert,\n            isOther: true,\n        }\n    })\n    data.certificationsList = [...primaryCert, ...otherCert];\n    const primaryEmrehr = stateData.emrehr.primary.map(emrehr => {\n        return {\n            id: emrehr.id,\n            isOther: false,\n        }\n    });\n    const otherEmrehr = stateData.emrehr.others.map(emrehr => {\n        return {\n            otherName: emrehr,\n            isOther: true,\n        }\n    });\n    data.emrehrSystemList = [...primaryEmrehr, ...otherEmrehr];\n    data.specialityList= stateData.specialities.map(speciality => {\n        return {\n            specialtyId: speciality.skill,\n            yearsOfExperience: speciality.years,\n        }\n    });\n    data.workHistoryList = stateData.workHistory.map(work => {\n        return {\n            name: work.employer,\n            fromMonth: work.fromMonth,\n            fromYear: work.fromYear,\n            toMonth: work.toMonth,\n            toYear: work.toYear,\n        }\n    });\n    data.educationList = stateData.educationList;\n    data.noResume = stateData.data.noResume;\n    return data;\n}\n"]},"metadata":{},"sourceType":"module"}