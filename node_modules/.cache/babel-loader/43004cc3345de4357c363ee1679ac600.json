{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI_LocalDevelopment\\\\src\\\\components\\\\Signup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"../common/TextField\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUpSelector } from \"./selector\";\nimport useValidation from \"../../hooks/useValidation\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport Loader from \"../common/Loader\";\nimport { signup, reset } from \"./action\";\nimport Checkbox from \"../common/Checkbox\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const category = searchParams.get(\"category\");\n  const navigate = useNavigate();\n  const validate = useValidation();\n  const config = useConfiguration();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    document.title = \"Overture Candidate Signup\";\n  }, []);\n  const {\n    signUpSuccess,\n    signUpError,\n    signUpErrorMessage\n  } = useSelector(signUpSelector);\n\n  if (signUpSuccess) {\n    dispatch(reset());\n    navigate(\"/signup/success\");\n  }\n\n  const [signUpForm, setSignUpForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    zipCode: \"\",\n    terms: false\n  });\n  const [formErrors, setFormErrors] = useState({});\n\n  const goToLogin = () => {\n    navigate(\"/\");\n  };\n\n  const validateForm = () => {\n    const result = validate('signUp', [{\n      name: 'firstName',\n      data: signUpForm.firstName\n    }, {\n      name: 'lastName',\n      data: signUpForm.lastName\n    }, {\n      name: 'email',\n      data: signUpForm.email\n    }, {\n      name: 'password',\n      data: signUpForm.password\n    }, {\n      name: 'confirmPassword',\n      data: signUpForm.confirmPassword\n    }, {\n      name: 'zipCode',\n      data: signUpForm.zipCode\n    }, {\n      name: 'terms',\n      data: signUpForm.terms\n    }]);\n\n    if (result.valid) {\n      setFormErrors({});\n    } else {\n      setFormErrors(result.errors);\n    }\n\n    return result.valid;\n  };\n\n  const customValidate = () => {\n    if (!signUpForm.terms) {\n      setFormErrors({ ...formErrors,\n        terms: [\"You must agree to the terms and conditions\"]\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const updateFormValue = target => {\n    const {\n      name,\n      value\n    } = target;\n    setSignUpForm({ ...signUpForm,\n      [name]: value\n    });\n    dispatch(reset());\n  };\n\n  const customValidation = () => {\n    if (signUpForm.password !== signUpForm.confirmPassword) {\n      setFormErrors({ ...formErrors,\n        confirmPassword: [\"Password and Confirm Password must match\"]\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const signUpClicked = e => {\n    e.preventDefault();\n\n    if (!customValidation()) {\n      return false;\n    }\n\n    if (validateForm() && customValidate()) {\n      dispatch(signup({\n        url: `${config.baseUrl}/Candidates/signup`,\n        formData: {\n          firstName: signUpForm.firstName,\n          lastName: signUpForm.lastName,\n          email: signUpForm.email,\n          password: signUpForm.password,\n          zipCode: signUpForm.zipCode,\n          jobCategoryId: category\n        }\n      }));\n    }\n  };\n\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [iconStyleText, seticonStyleText] = useState(\"zmdi zmdi-eye-off text-muted\");\n\n  const handlePasswordChange = evnt => {\n    setPasswordInput(evnt.target.value);\n  };\n\n  const togglePassword = () => {\n    if (passwordType === \"password\") {\n      setPasswordType(\"text\");\n      seticonStyleText(\"zmdi zmdi-eye text-muted\");\n      return;\n    }\n\n    setPasswordType(\"password\");\n    seticonStyleText(\"zmdi zmdi-eye-off text-muted\");\n  };\n\n  const [passwordTypeConfirm, setPasswordTypeConfirm] = useState(\"password\");\n  const [passwordInputConfirm, setPasswordInputConfirm] = useState(\"\");\n  const [iconStyleTextConfirm, seticonStyleTextConfirm] = useState(\"zmdi zmdi-eye-off text-muted\");\n\n  const handlePasswordChangeConfirm = evnt => {\n    setPasswordInputConfirm(evnt.target.value);\n  };\n\n  const togglePasswordConfirm = () => {\n    if (passwordTypeConfirm === \"password\") {\n      setPasswordTypeConfirm(\"text\");\n      seticonStyleTextConfirm(\"zmdi zmdi-eye text-muted\");\n      return;\n    }\n\n    setPasswordTypeConfirm(\"password\");\n    seticonStyleTextConfirm(\"zmdi zmdi-eye-off text-muted\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-login100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-login100 p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"login100-form validate-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"login100-form-title pb-5\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"assets/images/brand/logo-3.png\",\n                    className: \"header-brand-img\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"login100-form-title\",\n                children: \"Candidate Registration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), signUpError && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"toast wrap-input100 align-items-center text-white bg-danger border-0 show\",\n                  role: \"alert\",\n                  \"aria-live\": \"assertive\",\n                  \"aria-atomic\": \"true\",\n                  \"data-bs-autohide\": \"false\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"toast-body\",\n                      children: signUpErrorMessage || 'Sign up failed! Please try again.'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"wrap-input100 validate-input input-group\",\n                id: \"Firstnametoggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputname\",\n                  class: \"logintextspace\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"First name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: \"First name\",\n                name: 'firstName',\n                type: \"text\",\n                iconClass: \"mdi mdi-account\",\n                errors: formErrors['firstName'],\n                updateValue: updateFormValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"wrap-input100 validate-input input-group\",\n                id: \"Lasttoggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputname\",\n                  class: \"logintextspace\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Last name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: \"Last name\",\n                name: 'lastName',\n                type: \"text\",\n                iconClass: \"mdi mdi-account\",\n                errors: formErrors['lastName'],\n                updateValue: updateFormValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"wrap-input100 validate-input input-group\",\n                id: \"Emailtoggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputname\",\n                  class: \"logintextspace\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: \"Email\",\n                name: 'email',\n                type: \"email\",\n                iconClass: \"zmdi zmdi-email\",\n                errors: formErrors['email'],\n                updateValue: updateFormValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"wrap-input100 validate-input input-group\",\n                id: \"Passwordtoggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputname\",\n                  class: \"logintextspace\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: 'Password',\n                name: 'password',\n                type: passwordType,\n                iconClass: iconStyleText,\n                onChange: handlePasswordChange,\n                errors: formErrors['password'],\n                updateValue: updateFormValue,\n                clickeye: togglePassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"wrap-input100 validate-input input-group\",\n                id: \"ConfirmPasswordtoggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputname\",\n                  class: \"logintextspace\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: 'Confirm Password',\n                name: 'confirmPassword',\n                type: passwordTypeConfirm,\n                iconClass: iconStyleTextConfirm,\n                onChange: handlePasswordChangeConfirm,\n                errors: formErrors['confirmPassword'],\n                updateValue: updateFormValue,\n                clickeye: togglePasswordConfirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"wrap-input100 validate-input input-group\",\n                id: \"Zipcodetoggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputname\",\n                  class: \"logintextspace\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Zipcode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: 'Zip Code',\n                name: 'zipCode',\n                type: \"text\",\n                iconClass: \"zmdi zmdi-google-maps\",\n                errors: formErrors['zipCode'],\n                updateValue: updateFormValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: \"terms\",\n                updateValue: updateFormValue,\n                errors: formErrors['terms'],\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"I agree to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"https://overturexl.com/terms-conditions.html\",\n                    target: \"_blank\",\n                    children: \"Terms and Conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container-login100-form-btn\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"Success.html\",\n                  className: \"login100-form-btn btn-primary\",\n                  onClick: signUpClicked,\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center pt-3\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-dark mb-0\",\n                  children: [\"Already have account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    onClick: goToLogin,\n                    className: \"text-primary ms-1\",\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 88\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}, \"JZVuJii+kP9zEJtwfQlD48WfY+o=\", false, function () {\n  return [useSearchParams, useNavigate, useValidation, useConfiguration, useDispatch, useSelector];\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI_LocalDevelopment/src/components/Signup/index.js"],"names":["React","useEffect","useState","TextField","useNavigate","useDispatch","useSelector","signUpSelector","useValidation","useConfiguration","Loader","signup","reset","Checkbox","useSearchParams","searchParams","setSearchParams","category","get","navigate","validate","config","dispatch","document","title","signUpSuccess","signUpError","signUpErrorMessage","signUpForm","setSignUpForm","firstName","lastName","email","password","confirmPassword","zipCode","terms","formErrors","setFormErrors","goToLogin","validateForm","result","name","data","valid","errors","customValidate","updateFormValue","target","value","customValidation","signUpClicked","e","preventDefault","url","baseUrl","formData","jobCategoryId","passwordType","setPasswordType","passwordInput","setPasswordInput","iconStyleText","seticonStyleText","handlePasswordChange","evnt","togglePassword","passwordTypeConfirm","setPasswordTypeConfirm","passwordInputConfirm","setPasswordInputConfirm","iconStyleTextConfirm","seticonStyleTextConfirm","handlePasswordChangeConfirm","togglePasswordConfirm"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport TextField from \"../common/TextField\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {signUpSelector} from \"./selector\";\nimport useValidation from \"../../hooks/useValidation\";\nimport useConfiguration from \"../../hooks/useConfiguration\";\nimport Loader from \"../common/Loader\";\nimport {signup, reset} from \"./action\";\nimport Checkbox from \"../common/Checkbox\";\nimport {useSearchParams} from \"react-router-dom\";\n\nexport default () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const category = searchParams.get(\"category\");\n    const navigate = useNavigate();\n    const validate = useValidation();\n    const config = useConfiguration();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        document.title = \"Overture Candidate Signup\";\n    }, []);\n    const {signUpSuccess, signUpError, signUpErrorMessage} = useSelector(signUpSelector);\n    if (signUpSuccess) {\n        dispatch(reset());\n        navigate(\"/signup/success\");\n    }\n    const [signUpForm, setSignUpForm] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        zipCode: \"\",\n        terms: false\n    });\n    const [formErrors, setFormErrors] = useState({});\n    const goToLogin = () => {\n        navigate(\"/\");\n    }\n    const validateForm = () => {\n        const result = validate('signUp', [\n            {name: 'firstName', data: signUpForm.firstName},\n            {name: 'lastName', data: signUpForm.lastName},\n            {name: 'email', data: signUpForm.email},\n            {name: 'password', data: signUpForm.password},\n            {name: 'confirmPassword', data: signUpForm.confirmPassword},\n            {name: 'zipCode', data: signUpForm.zipCode},\n            {name: 'terms', data: signUpForm.terms}\n        ]);\n        if (result.valid) {\n            setFormErrors({});\n        } else {\n            setFormErrors(result.errors);\n        }\n        return result.valid;\n    }\n    const customValidate = () => {\n        if (!signUpForm.terms) {\n            setFormErrors({...formErrors, terms: [\"You must agree to the terms and conditions\"]});\n            return false;\n        }\n        return true;\n    }\n    const updateFormValue = (target) => {\n        const {name, value} = target;\n        setSignUpForm({...signUpForm, [name]: value});\n        dispatch(reset());\n    }\n    const customValidation = () => {\n        if (signUpForm.password !== signUpForm.confirmPassword) {\n            setFormErrors({...formErrors, confirmPassword: [\"Password and Confirm Password must match\"]});\n            return false;\n        }\n        return true;\n    }\n    const signUpClicked = (e) => {\n        e.preventDefault();\n        if (!customValidation()) {\n            return false;\n        }\n        if (validateForm() && customValidate()) {\n            dispatch(signup({\n                url: `${config.baseUrl}/Candidates/signup`, formData: {\n                    firstName: signUpForm.firstName,\n                    lastName: signUpForm.lastName,\n                    email: signUpForm.email,\n                    password: signUpForm.password,\n                    zipCode: signUpForm.zipCode,\n                    jobCategoryId: category\n                }\n            }));\n        }\n    }\n\n    const [passwordType, setPasswordType] = useState(\"password\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [iconStyleText, seticonStyleText] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChange = (evnt) => {\n        setPasswordInput(evnt.target.value);\n    }\n    const togglePassword = () => {\n        if (passwordType === \"password\") {\n            setPasswordType(\"text\")\n            seticonStyleText(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordType(\"password\")\n        seticonStyleText(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    const [passwordTypeConfirm, setPasswordTypeConfirm] = useState(\"password\");\n    const [passwordInputConfirm, setPasswordInputConfirm] = useState(\"\");\n    const [iconStyleTextConfirm, seticonStyleTextConfirm] = useState(\"zmdi zmdi-eye-off text-muted\");\n    const handlePasswordChangeConfirm = (evnt) => {\n        setPasswordInputConfirm(evnt.target.value);\n    }\n    const togglePasswordConfirm = () => {\n        if (passwordTypeConfirm === \"password\") {\n            setPasswordTypeConfirm(\"text\")\n            seticonStyleTextConfirm(\"zmdi zmdi-eye text-muted\")\n            return;\n        }\n        setPasswordTypeConfirm(\"password\")\n        seticonStyleTextConfirm(\"zmdi zmdi-eye-off text-muted\")\n    }\n\n    return (\n        <div>\n            <Loader/>\n            <div className=\"page\">\n                <div className=\"\">\n                    <div className=\"container-login100\">\n                        <div className=\"wrap-login100 p-6\">\n                            <form className=\"login100-form validate-form\">\n                            <span className=\"login100-form-title pb-5\">\n                                <a href=\"/\">\n                                    <img src=\"assets/images/brand/logo-3.png\" className=\"header-brand-img\" alt=\"\"/>\n                                </a>\n                            </span>\n                                <span className=\"login100-form-title\">\n                                    Candidate Registration\n                                </span>\n                                {\n                                    signUpError &&\n                                    <>\n                                        <div\n                                            className=\"toast wrap-input100 align-items-center text-white bg-danger border-0 show\"\n                                            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\n                                            data-bs-autohide=\"false\">\n                                            <div className=\"d-flex\">\n                                                <div className=\"toast-body\">\n                                                    {signUpErrorMessage || 'Sign up failed! Please try again.'}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div>&nbsp;</div>\n                                    </>\n                                }\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Firstnametoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>First name</h5></label>\n                                </div>\n                                <TextField placeholder={\"First name\"} name={'firstName'} type={\"text\"}\n                                           iconClass={\"mdi mdi-account\"} errors={formErrors['firstName']}\n                                           updateValue={updateFormValue}/>\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Lasttoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Last name</h5></label>\n                                </div>\n                                <TextField placeholder={\"Last name\"} name={'lastName'} type={\"text\"}\n                                           iconClass={\"mdi mdi-account\"} errors={formErrors['lastName']}\n                                           updateValue={updateFormValue}/>\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Emailtoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Email</h5></label>\n                                </div>\n                                <TextField placeholder={\"Email\"} name={'email'} type={\"email\"}\n                                           iconClass={\"zmdi zmdi-email\"} errors={formErrors['email']}\n                                           updateValue={updateFormValue}/>\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Passwordtoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Password</h5></label>\n                                </div>\n                                <TextField placeholder={'Password'} name={'password'} type={passwordType}\n                                           iconClass={iconStyleText} onChange={handlePasswordChange}\n                                           errors={formErrors['password']} updateValue={updateFormValue}\n                                           clickeye={togglePassword}\n                                />\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"ConfirmPasswordtoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Confirm Password</h5>\n                                    </label>\n                                </div>\n                                <TextField placeholder={'Confirm Password'} name={'confirmPassword'}\n                                           type={passwordTypeConfirm}\n                                           iconClass={iconStyleTextConfirm} onChange={handlePasswordChangeConfirm}\n                                           errors={formErrors['confirmPassword']} updateValue={updateFormValue}\n                                           clickeye={togglePasswordConfirm}\n                                />\n                                <div class=\"wrap-input100 validate-input input-group\" id=\"Zipcodetoggle\">\n                                    <label for=\"exampleInputname\" class=\"logintextspace\"><h5>Zipcode</h5></label>\n                                </div>\n                                <TextField placeholder={'Zip Code'} name={'zipCode'} type={\"text\"}\n                                           iconClass={\"zmdi zmdi-google-maps\"} errors={formErrors['zipCode']}\n                                           updateValue={updateFormValue}/>\n                                <Checkbox name={\"terms\"} updateValue={updateFormValue} errors={formErrors['terms']}>\n                                    <>\n                                        I agree to the <a href=\"https://overturexl.com/terms-conditions.html\"\n                                                          target=\"_blank\">Terms and Conditions</a>\n                                    </>\n                                </Checkbox>\n                                <div className=\"container-login100-form-btn\">\n                                    <a href=\"Success.html\" className=\"login100-form-btn btn-primary\"\n                                       onClick={signUpClicked}>\n                                        Sign Up\n                                    </a>\n                                </div>\n                                <div className=\"text-center pt-3\">\n                                    <p className=\"text-dark mb-0\">Already have account?<a href=\"#\" onClick={goToLogin}\n                                                                                          className=\"text-primary ms-1\">Sign\n                                        In</a></p>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}