{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\common\\\\TextFieldPhoneNumber\\\\index.js\";\nimport React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'; //mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  state = {\n    email: ''\n  };\n\n  updateEmail = e => {\n    e.preventDefault();\n    this.setState({\n      email: e.target.value\n    });\n  };\n\n  const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: divClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [!props.noLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n        type: \"text\",\n        placeholder: \"Gimme your email!\",\n        onChange: this.updateEmail,\n        value: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 1\n      }, this), props.errors && props.errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-input\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/common/TextFieldPhoneNumber/index.js"],"names":["React","PhoneInput","props","state","email","updateEmail","e","preventDefault","setState","target","value","divClass","noLabel","name","label","errors","map","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CACA;AACA;;;AACA,gBAAgBC,KAAD,IAAW;AACtBC,EAAAA,KAAK,GAAG;AACJC,IAAAA,KAAK,EAAE;AADH,GAAR;;AAGEC,EAAAA,WAAW,GAAGC,CAAC,IAAI;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAEE,CAAC,CAACG,MAAF,CAASC;AAAlB,KAAd;AACD,GAHD;;AAIF,QAAMC,QAAQ,GAAGT,KAAK,CAACS,QAAN,GAAiBT,KAAK,CAACS,QAAvB,GAAkC,oBAAnD;AACA,sBACI;AAAK,IAAA,SAAS,EAAEA,QAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACM,CAACT,KAAK,CAACU,OAAP,iBAAkB;AAAO,QAAA,OAAO,EAAEV,KAAK,CAACW,IAAtB;AAAA,kBAA6BX,KAAK,CAACY;AAAnC;AAAA;AAAA;AAAA;AAAA,cADxB,eAIZ,QAAC,UAAD;AACU,QAAA,IAAI,EAAC,MADf;AAEU,QAAA,WAAW,EAAC,mBAFtB;AAGU,QAAA,QAAQ,EAAE,KAAKT,WAHzB;AAIU,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAJ5B;AAAA;AAAA;AAAA;AAAA,cAJY,EAoBKF,KAAK,CAACa,MAAN,IAAgBb,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBAAK;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA3B,CApBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAnCD","sourcesContent":["import React from \"react\";\nimport './textinput.css';\nimport PhoneInput from 'react-number-format'\n//mport 'react-phone-number-input/style.css';\n//var NumberFormat = require('react-number-format');\nexport default (props) => {\n    state = {\n        email: ''\n      };\n      updateEmail = e => {\n        e.preventDefault();\n        this.setState({ email: e.target.value });\n      };\n    const divClass = props.divClass ? props.divClass : 'col-lg-6 col-md-12';\n    return(\n        <div className={divClass}>\n            <div className=\"form-group\">\n                { !props.noLabel && <label htmlFor={props.name}>{props.label}</label> }\n               \n\n<PhoneInput\n          type=\"text\"\n          placeholder=\"Gimme your email!\"\n          onChange={this.updateEmail}\n          value={this.state.email}\n        />\n    \n{/*<PhoneInput\n       \n        value=\"\"\n        prefix=\"\"\n        displayType=\"input\"\n        type=\"text\"\n        allowNegative={true}\n        format=\"###-###-####\" onValueChange={(event) => props.updateValue(event.target)} />\n*/}\n                {props.errors && props.errors.map(error => (<div className=\"invalid-input\">{error}</div>))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}