{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\src\\\\components\\\\ProfileBuilder\\\\PersonalInfo\\\\registrationForm.js\",\n    _s = $RefreshSig$();\n\nimport TextField from \"../../common/TextField/withLabel\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { personalInfoSelector } from \"./selector\";\nimport { getCityState, updatePersonalInfo, getSpokenLanguages, updateLanguageList } from \"./action\";\nimport useConfiguration from \"../../../hooks/useConfiguration\";\nimport DropDown from \"../../common/TextField/dropDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const {\n    data,\n    masterData\n  } = useSelector(personalInfoSelector);\n  const dispatch = useDispatch();\n  const config = useConfiguration();\n  const [form, setForm] = React.useState(data);\n  useEffect(() => {\n    dispatch(updatePersonalInfo(form));\n  }, [form]);\n  useEffect(() => {\n    config.baseUrl && dispatch(getSpokenLanguages(`${config.baseUrl}/Dropdown/GetSpokenLanguages`));\n  }, [config]);\n\n  const updateFormValue = target => {\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n\n    if (target.name === 'zipcode' && target.value.length >= 5) {\n      zipCodeUpdated(target.value);\n    }\n  };\n\n  const updateLangValue = target => {\n    const value = target.value;\n    const action = target.action || 'add';\n    dispatch(updateLanguageList(value, action));\n  };\n\n  const zipCodeUpdated = value => {\n    dispatch(getCityState(`${config.baseUrl}/Zipcodes/getzipcodeinfo/${value}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'firstName',\n        label: 'First Name*',\n        placeholder: \"First Name\",\n        updateValue: updateFormValue,\n        value: data.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: 'lastName',\n        label: 'Last Name*',\n        placeholder: \"Last Name\",\n        updateValue: updateFormValue,\n        value: data.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'email',\n        label: 'Email*',\n        placeholder: \"Email\",\n        updateValue: updateFormValue,\n        value: data.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Street address*',\n        name: 'streetAddress',\n        placeholder: \"Street address\",\n        updateValue: updateFormValue,\n        value: data.streetAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Zip Code*',\n        name: 'zipcode',\n        placeholder: \"Zip Code\",\n        updateValue: updateFormValue,\n        value: data.zipcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'City*',\n        name: 'city',\n        placeholder: \"City\",\n        updateValue: updateFormValue,\n        value: data.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: 'State*',\n        name: 'stateName',\n        placeholder: \"State\",\n        updateValue: updateFormValue,\n        value: data.stateName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Cell Number*',\n        name: 'cellNumber',\n        placeholder: \"Cell Number\",\n        updateValue: updateFormValue,\n        value: data.cellNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Home phone number',\n        name: 'homePhoneNumber',\n        placeholder: \"Home phone number\",\n        updateValue: updateFormValue,\n        value: data.homePhoneNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: 'Alternate Phone Number',\n        name: 'alternatePhoneNumber',\n        placeholder: \"Alternate Phone Number\",\n        updateValue: updateFormValue,\n        value: data.alternatePhoneNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(DropDown, {\n        name: \"spokenLanguagesList\",\n        label: 'Spoken Languages*',\n        placeholder: \"Spoken Languages\",\n        updateValue: updateLangValue,\n        value: data.spokenLanguagesList || [],\n        options: masterData.languages,\n        isObject: true,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}, \"Z6yBHL1isnTDEfCzm+9psU/Tk5I=\", false, function () {\n  return [useSelector, useDispatch, useConfiguration];\n});","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/registrationForm.js"],"names":["TextField","React","useEffect","useSelector","useDispatch","personalInfoSelector","getCityState","updatePersonalInfo","getSpokenLanguages","updateLanguageList","useConfiguration","DropDown","data","masterData","dispatch","config","form","setForm","useState","baseUrl","updateFormValue","target","name","value","length","zipCodeUpdated","updateLangValue","action","firstName","lastName","email","streetAddress","zipcode","city","stateName","cellNumber","homePhoneNumber","alternatePhoneNumber","spokenLanguagesList","languages"],"mappings":"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","sourcesContent":["import TextField from \"../../common/TextField/withLabel\";\nimport React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {personalInfoSelector} from \"./selector\";\nimport {getCityState, updatePersonalInfo, getSpokenLanguages, updateLanguageList} from \"./action\";\nimport useConfiguration from \"../../../hooks/useConfiguration\";\nimport DropDown from \"../../common/TextField/dropDown\";\n\nexport default () => {\n    const { data, masterData } = useSelector(personalInfoSelector);\n    const dispatch = useDispatch();\n    const config = useConfiguration();\n    const [form, setForm] = React.useState(data);\n    useEffect(() => {\n        dispatch(updatePersonalInfo(form));\n    }, [form]);\n    useEffect(() => {\n        config.baseUrl && dispatch(getSpokenLanguages(`${config.baseUrl}/Dropdown/GetSpokenLanguages`));\n    }, [config]);\n    const updateFormValue = (target) => {\n        setForm({\n            ...form,\n            [target.name]: target.value\n        });\n        if(target.name === 'zipcode' && target.value.length >= 5) {\n            zipCodeUpdated(target.value);\n        }\n    };\n    const updateLangValue = (target) => {\n        const value = target.value;\n        const action = target.action || 'add';\n        dispatch(updateLanguageList(value, action));\n    };\n    const zipCodeUpdated = (value) => {\n        dispatch(getCityState(`${config.baseUrl}/Zipcodes/getzipcodeinfo/${value}`));\n    }\n\n    return (\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <TextField name={'firstName'} label={'First Name*'} placeholder={\"First Name\"} updateValue={updateFormValue} value={data.firstName}/>\n                <TextField name={'lastName'} label={'Last Name*'} placeholder={\"Last Name\"} updateValue={updateFormValue} value={data.lastName}/>\n            </div>\n            <div className=\"row\">\n                <TextField name={'email'} label={'Email*'} placeholder={\"Email\"} updateValue={updateFormValue} value={data.email}/>\n                <TextField label={'Street address*'} name={'streetAddress'}\n                           placeholder={\"Street address\"} updateValue={updateFormValue} value={data.streetAddress}/>\n            </div>\n            <div className=\"row\">\n                <TextField label={'Zip Code*'} name={'zipcode'} placeholder={\"Zip Code\"} updateValue={updateFormValue} value={data.zipcode}/>\n                <TextField label={'City*'} name={'city'} placeholder={\"City\"} updateValue={updateFormValue} value={data.city}/>\n            </div>\n            <div className=\"row\">\n                <TextField label={'State*'} name={'stateName'} placeholder={\"State\"} updateValue={updateFormValue} value={data.stateName}/>\n                <TextField label={'Cell Number*'} name={'cellNumber'} placeholder={\"Cell Number\"} updateValue={updateFormValue} value={data.cellNumber}/>\n            </div>\n            <div className=\"row\">\n                <TextField label={'Home phone number'} name={'homePhoneNumber'}\n                           placeholder={\"Home phone number\"} updateValue={updateFormValue} value={data.homePhoneNumber}/>\n                <TextField label={'Alternate Phone Number'} name={'alternatePhoneNumber'}\n                           placeholder={\"Alternate Phone Number\"} updateValue={updateFormValue} value={data.alternatePhoneNumber}/>\n            </div>\n            <div className={\"row\"}>\n                <DropDown name={\"spokenLanguagesList\"} label={'Spoken Languages*'}\n                          placeholder={\"Spoken Languages\"} updateValue={updateLangValue}\n                          value={data.spokenLanguagesList || []}\n                          options={masterData.languages} isObject={true} multiple={true} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}