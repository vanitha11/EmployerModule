{"ast":null,"code":"export const serverToState = (serverData, masterDatas) => {\n  const data = {};\n  data.workHistory = serverData.workHistoryList.map(work => {\n    return {\n      employer: work.name,\n      fromMonth: work.fromMonth,\n      fromYear: work.fromYear,\n      toMonth: work.toMonth,\n      toYear: work.toYear\n    };\n  });\n  data.educationList = serverData.educationList;\n  data.emrehr = {};\n  const primaryEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === false);\n  const otherEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === true);\n  data.emrehr.primary = primaryEmrehr ? primaryEmrehr.map(emrehr => {\n    const eh = masterDatas.emrehr.find(em => em.id === emrehr.id);\n    return { ...eh\n    };\n  }) : [];\n  data.emrehr.others = otherEmrehr ? otherEmrehr.map(emrehr => {\n    return emrehr.otherName;\n  }) : [];\n  data.categories = serverData.jobCategoryIdList.map(category => {\n    return { ...masterDatas.jobCategories.find(cat => cat.id === category)\n    };\n  });\n  data.specialities = serverData.specialtyList.map(speciality => {\n    return {\n      skill: speciality.specialtyId,\n      years: speciality.yearsOfExperience\n    };\n  });\n  const primarycert = serverData.certificationsList.filter(cert => cert.isOther === false);\n  const othercert = serverData.certificationsList.filter(cert => cert.isOther === true);\n  data.certifications = {};\n  data.certifications.primary = primarycert ? primarycert.map(cert => {\n    return { ...masterDatas.certifications.find(em => em.id === cert.id)\n    };\n  }) : [];\n  data.certifications.others = othercert ? othercert.map(cert => {\n    return cert.otherName;\n  }) : [];\n  data.educationLevel = serverData.levelofEducation;\n  return data;\n};\nexport const stateToServer = (stateData, candidateId, appUserId) => {\n  const data = {\n    candidateId,\n    appUserId\n  };\n  data.levelofEducation = stateData.educationLevel;\n  data.jobCategoryIdList = stateData.categories.map(cat => cat.id);\n  const primaryCert = stateData.certifications.primary.map(cert => {\n    return {\n      id: cert.id,\n      isOther: false\n    };\n  });\n  const otherCert = stateData.certifications.others.map(cert => {\n    return {\n      otherName: cert,\n      isOther: true\n    };\n  });\n  data.certificationsList = [...primaryCert, ...otherCert];\n  const primaryEmrehr = stateData.emrehr.primary.map(emrehr => {\n    return {\n      id: emrehr.id,\n      isOther: false\n    };\n  });\n  const otherEmrehr = stateData.emrehr.others.map(emrehr => {\n    return {\n      otherName: emrehr,\n      isOther: true\n    };\n  });\n  data.emrehrSystemList = [...primaryEmrehr, ...otherEmrehr];\n  data.specialityList = stateData.specialities.map(speciality => {\n    return {\n      specialtyId: speciality.skill,\n      yearsOfExperience: speciality.years\n    };\n  });\n  data.workHistoryList = stateData.workHistory.map(work => {\n    return {\n      name: work.employer,\n      fromMonth: work.fromMonth,\n      fromYear: work.fromYear,\n      toMonth: work.toMonth,\n      toYear: work.toYear\n    };\n  });\n  data.educationList = stateData.educationList;\n  data.noResume = stateData.data.noResume;\n  return data;\n};","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/ResumeBuilder/transformer.js"],"names":["serverToState","serverData","masterDatas","data","workHistory","workHistoryList","map","work","employer","name","fromMonth","fromYear","toMonth","toYear","educationList","emrehr","primaryEmrehr","emrehrSystemList","filter","isOther","otherEmrehr","primary","eh","find","em","id","others","otherName","categories","jobCategoryIdList","category","jobCategories","cat","specialities","specialtyList","speciality","skill","specialtyId","years","yearsOfExperience","primarycert","certificationsList","cert","othercert","certifications","educationLevel","levelofEducation","stateToServer","stateData","candidateId","appUserId","primaryCert","otherCert","specialityList","noResume"],"mappings":"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","sourcesContent":["export const serverToState = (serverData, masterDatas) => {\n    const data = {};\n    data.workHistory = serverData.workHistoryList.map(work => {\n        return {\n            employer: work.name,\n            fromMonth: work.fromMonth,\n            fromYear: work.fromYear,\n            toMonth: work.toMonth,\n            toYear: work.toYear,\n        }\n    });\n    data.educationList = serverData.educationList;\n    data.emrehr = {};\n    const primaryEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === false);\n    const otherEmrehr = serverData.emrehrSystemList.filter(emrehr => emrehr.isOther === true);\n    data.emrehr.primary = primaryEmrehr ? primaryEmrehr.map(emrehr => {\n        const eh = masterDatas.emrehr.find(em => em.id === emrehr.id);\n        return {...eh}\n    }) : [];\n    data.emrehr.others = otherEmrehr ? otherEmrehr.map(emrehr => {\n        return emrehr.otherName;\n    }) : [];\n    data.categories = serverData.jobCategoryIdList.map(category => {\n        return {...masterDatas.jobCategories.find(cat => cat.id === category)};\n    });\n    data.specialities = serverData.specialtyList.map(speciality => {\n        return {\n            skill: speciality.specialtyId,\n            years: speciality.yearsOfExperience,\n        }\n    });\n    const primarycert = serverData.certificationsList.filter(cert => cert.isOther === false);\n    const othercert = serverData.certificationsList.filter(cert => cert.isOther === true);\n    data.certifications = {};\n    data.certifications.primary = primarycert ? primarycert.map(cert => {\n        return {...masterDatas.certifications.find(em => em.id === cert.id)};\n    }) : [];\n    data.certifications.others = othercert ? othercert.map(cert => {\n        return cert.otherName;\n    }) : [];\n    data.educationLevel = serverData.levelofEducation;\n    return data;\n}\nexport const stateToServer = (stateData, candidateId, appUserId) => {\n    const data = {candidateId, appUserId};\n    data.levelofEducation = stateData.educationLevel;\n    data.jobCategoryIdList = stateData.categories.map(cat => cat.id);\n    const primaryCert = stateData.certifications.primary.map(cert => {\n        return {\n            id: cert.id,\n            isOther: false,\n        }\n    })\n    const otherCert = stateData.certifications.others.map(cert => {\n        return {\n            otherName: cert,\n            isOther: true,\n        }\n    })\n    data.certificationsList = [...primaryCert, ...otherCert];\n    const primaryEmrehr = stateData.emrehr.primary.map(emrehr => {\n        return {\n            id: emrehr.id,\n            isOther: false,\n        }\n    });\n    const otherEmrehr = stateData.emrehr.others.map(emrehr => {\n        return {\n            otherName: emrehr,\n            isOther: true,\n        }\n    });\n    data.emrehrSystemList = [...primaryEmrehr, ...otherEmrehr];\n    data.specialityList= stateData.specialities.map(speciality => {\n        return {\n            specialtyId: speciality.skill,\n            yearsOfExperience: speciality.years,\n        }\n    });\n    data.workHistoryList = stateData.workHistory.map(work => {\n        return {\n            name: work.employer,\n            fromMonth: work.fromMonth,\n            fromYear: work.fromYear,\n            toMonth: work.toMonth,\n            toYear: work.toYear,\n        }\n    });\n    data.educationList = stateData.educationList;\n    data.noResume = stateData.data.noResume;\n    return data;\n}\n"]},"metadata":{},"sourceType":"module"}