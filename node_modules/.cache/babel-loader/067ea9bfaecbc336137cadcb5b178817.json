{"ast":null,"code":"import _objectSpread from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\projects\\\\Overture\\\\DevOTWebUI\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{setPersonalInfo,setCityState,setMasterData,addSpokenLanguagesList,removeSpokenLanguagesList}from'./slice';import{setError,resetError}from\"../slice\";import{setLoading}from\"../../common/Loader/slice\";import requestUtil from'../../../helpers/requestUtil';import{nextTab}from\"../action\";import{updateProfileFlag}from'../../Login/action';export function updatePersonalInfo(data){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(setPersonalInfo(data));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}export function resetErrorStatus(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(resetError());case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();}export function getCurrentPersonalInfo(_ref3){var url=_ref3.url,userId=_ref3.userId;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(setLoading(true));_context3.prev=1;_context3.next=4;return requestUtil(\"\".concat(url,\"/\").concat(userId),'GET');case 4:response=_context3.sent;dispatch(setPersonalInfo(response));_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);dispatch(setError(_context3.t0.message));case 11:dispatch(setLoading(false));case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[1,8]]);}));return function(_x3){return _ref4.apply(this,arguments);};}();}export function savePersonalInfo(_ref5){var url=_ref5.url,candidateId=_ref5.candidateId,userId=_ref5.userId,_ref5$gotoNextTab=_ref5.gotoNextTab,gotoNextTab=_ref5$gotoNextTab===void 0?true:_ref5$gotoNextTab;return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(setLoading(true));data=getState().personalInfo.data;_context4.prev=2;_context4.next=5;return requestUtil(\"\".concat(url),'POST',_objectSpread(_objectSpread({appUserId:userId,candidateId:candidateId},data),{},{spokenLanguagesList:data.spokenLanguagesList.map(function(item){return item.id;})}));case 5:if(gotoNextTab){dispatch(nextTab());dispatch(updateProfileFlag('isPersonalInfoTabCompleted'));}_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](2);dispatch(setError(_context4.t0.message));case 11:dispatch(setLoading(false));case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[2,8]]);}));return function(_x4,_x5){return _ref6.apply(this,arguments);};}();}export function getCityState(url){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return requestUtil(url,'GET');case 3:response=_context5.sent;dispatch(setCityState(response));_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);dispatch(setError(_context5.t0.message));case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,7]]);}));return function(_x6){return _ref7.apply(this,arguments);};}();}export function getSpokenLanguages(url){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch(setLoading(true));_context6.prev=1;_context6.next=4;return requestUtil(url,'GET');case 4:response=_context6.sent;dispatch(setMasterData({languages:response}));_context6.next=11;break;case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](1);dispatch(setError(_context6.t0.message));case 11:dispatch(setLoading(false));case 12:case\"end\":return _context6.stop();}}},_callee6,null,[[1,8]]);}));return function(_x7){return _ref8.apply(this,arguments);};}();}export function updateLanguageList(lang,action){return function(dispatch){switch(action){case'add':dispatch(addSpokenLanguagesList(lang));break;case'remove':dispatch(removeSpokenLanguagesList(lang));break;default:break;}};}","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/ProfileBuilder/PersonalInfo/action.js"],"names":["setPersonalInfo","setCityState","setMasterData","addSpokenLanguagesList","removeSpokenLanguagesList","setError","resetError","setLoading","requestUtil","nextTab","updateProfileFlag","updatePersonalInfo","data","dispatch","resetErrorStatus","getCurrentPersonalInfo","url","userId","response","message","savePersonalInfo","candidateId","gotoNextTab","getState","personalInfo","appUserId","spokenLanguagesList","map","item","id","getCityState","getSpokenLanguages","languages","updateLanguageList","lang","action"],"mappings":"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","sourcesContent":["import { setPersonalInfo, setCityState, setMasterData, addSpokenLanguagesList, removeSpokenLanguagesList } from './slice';\nimport { setError, resetError } from \"../slice\";\nimport { setLoading } from \"../../common/Loader/slice\";\nimport requestUtil from '../../../helpers/requestUtil';\nimport { nextTab } from \"../action\";\nimport {updateProfileFlag} from '../../Login/action';\nexport function updatePersonalInfo(data) {\n  return async dispatch => {\n    dispatch(setPersonalInfo(data));\n  };\n}\n\nexport function resetErrorStatus() {\n  return async dispatch => {\n    dispatch(resetError());\n  };\n}\n\nexport function getCurrentPersonalInfo({url, userId}) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n    try {\n      const response = await requestUtil(`${url}/${userId}`, 'GET');\n      dispatch(setPersonalInfo(response));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n    dispatch(setLoading(false));\n  };\n}\n\nexport function savePersonalInfo({url, candidateId, userId, gotoNextTab=true}) {\n  return async (dispatch, getState) => {\n    dispatch(setLoading(true));\n    const { data } = getState().personalInfo;\n    try {\n      await requestUtil(`${url}`, 'POST', {appUserId: userId, candidateId,\n        ...data, spokenLanguagesList: data.spokenLanguagesList.map(item => item.id)});\n      if(gotoNextTab) {\n        dispatch(nextTab());\n        dispatch(updateProfileFlag('isPersonalInfoTabCompleted'));\n      }\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n    dispatch(setLoading(false));\n  };\n}\n\nexport function getCityState(url) {\n  return async dispatch => {\n    try {\n      const response = await requestUtil(url, 'GET');\n      dispatch(setCityState(response));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n  };\n}\n\nexport function getSpokenLanguages(url) {\n  return async dispatch => {\n    dispatch(setLoading(true));\n    try {\n      const response = await requestUtil(url, 'GET');\n      dispatch(setMasterData({languages: response} ));\n    } catch (error) {\n      dispatch(setError(error.message))\n    }\n    dispatch(setLoading(false));\n  };\n}\n\nexport function updateLanguageList(lang, action) {\n  return (dispatch) => {\n    switch (action) {\n      case 'add':\n        dispatch(addSpokenLanguagesList(lang));\n        break;\n      case 'remove':\n        dispatch(removeSpokenLanguagesList(lang));\n        break;\n      default:\n        break;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}