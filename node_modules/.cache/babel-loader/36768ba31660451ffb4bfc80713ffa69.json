{"ast":null,"code":"import _defineProperty from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/projects/Overture/DevOTWebUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";var initialState={isError:false,isSuccess:false,errorMessage:'',data:{},profileFlag:{}};export var loginSlice=createSlice({name:'login',initialState:initialState,reducers:{loginRequest:function loginRequest(state){state.isError=false;state.isSuccess=false;state.errorMessage='';data:{}},loginSuccess:function loginSuccess(state,action){state.isError=false;state.isSuccess=true;state.errorMessage='';state.data=action.payload;state.profileFlag=action.payload&&action.payload.profileFlag;},setProfileFlag:function setProfileFlag(state,action){var flagName=action.payload;var newProfileFlag=_objectSpread(_objectSpread({},state.profileFlag),{},_defineProperty({},flagName,true));state.profileFlag=newProfileFlag;},loginFailure:function loginFailure(state,action){state.isError=true;state.isSuccess=false;state.errorMessage=action.payload;},reset:function reset(state){state.isError=false;state.isSuccess=false;state.errorMessage='';state.data={};}}});var _loginSlice$actions=loginSlice.actions,loginRequest=_loginSlice$actions.loginRequest,loginSuccess=_loginSlice$actions.loginSuccess,loginFailure=_loginSlice$actions.loginFailure,setProfileFlag=_loginSlice$actions.setProfileFlag,reset=_loginSlice$actions.reset;export{loginRequest,loginSuccess,loginFailure,setProfileFlag,reset};export default loginSlice.reducer;","map":{"version":3,"sources":["D:/projects/Overture/DevOTWebUI/src/components/Login/slice.js"],"names":["createSlice","initialState","isError","isSuccess","errorMessage","data","profileFlag","loginSlice","name","reducers","loginRequest","state","loginSuccess","action","payload","setProfileFlag","flagName","newProfileFlag","loginFailure","reset","actions","reducer"],"mappings":"2OAAA,OAAQA,WAAR,KAA0B,kBAA1B,CACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,KADU,CAEnBC,SAAS,CAAE,KAFQ,CAGnBC,YAAY,CAAE,EAHK,CAInBC,IAAI,CAAE,EAJa,CAKnBC,WAAW,CAAE,EALM,CAArB,CAQA,MAAO,IAAMC,CAAAA,UAAU,CAAGP,WAAW,CAAC,CAClCQ,IAAI,CAAE,OAD4B,CAElCP,YAAY,CAAZA,YAFkC,CAIlCQ,QAAQ,CAAE,CACNC,YAAY,CAAE,sBAACC,KAAD,CAAW,CACzBA,KAAK,CAACT,OAAN,CAAgB,KAAhB,CACAS,KAAK,CAACR,SAAN,CAAkB,KAAlB,CACAQ,KAAK,CAACP,YAAN,CAAqB,EAArB,CACAC,IAAI,CAAE,CAAE,CACT,CANO,CAORO,YAAY,CAAE,sBAACD,KAAD,CAAQE,MAAR,CAAmB,CAC/BF,KAAK,CAACT,OAAN,CAAgB,KAAhB,CACAS,KAAK,CAACR,SAAN,CAAkB,IAAlB,CACAQ,KAAK,CAACP,YAAN,CAAqB,EAArB,CACAO,KAAK,CAACN,IAAN,CAAaQ,MAAM,CAACC,OAApB,CACAH,KAAK,CAACL,WAAN,CAAoBO,MAAM,CAACC,OAAP,EAAkBD,MAAM,CAACC,OAAP,CAAeR,WAArD,CACD,CAbO,CAcRS,cAAc,CAAE,wBAACJ,KAAD,CAAQE,MAAR,CAAmB,CAC/B,GAAMG,CAAAA,QAAQ,CAAGH,MAAM,CAACC,OAAxB,CACA,GAAMG,CAAAA,cAAc,gCAAON,KAAK,CAACL,WAAb,wBAA2BU,QAA3B,CAAsC,IAAtC,EAApB,CACAL,KAAK,CAACL,WAAN,CAAoBW,cAApB,CACH,CAlBO,CAmBRC,YAAY,CAAE,sBAACP,KAAD,CAAQE,MAAR,CAAmB,CAC/BF,KAAK,CAACT,OAAN,CAAgB,IAAhB,CACAS,KAAK,CAACR,SAAN,CAAkB,KAAlB,CACAQ,KAAK,CAACP,YAAN,CAAqBS,MAAM,CAACC,OAA5B,CACD,CAvBO,CAwBRK,KAAK,CAAE,eAAAR,KAAK,CAAI,CACdA,KAAK,CAACT,OAAN,CAAgB,KAAhB,CACAS,KAAK,CAACR,SAAN,CAAkB,KAAlB,CACAQ,KAAK,CAACP,YAAN,CAAqB,EAArB,CACAO,KAAK,CAACN,IAAN,CAAa,EAAb,CACD,CA7BO,CAJwB,CAAD,CAA9B,CAqCA,wBAMHE,UAAU,CAACa,OANR,CACLV,YADK,qBACLA,YADK,CAELE,YAFK,qBAELA,YAFK,CAGLM,YAHK,qBAGLA,YAHK,CAILH,cAJK,qBAILA,cAJK,CAKLI,KALK,qBAKLA,KALK,C,oEAQP,cAAeZ,CAAAA,UAAU,CAACc,OAA1B","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nconst initialState = {\n  isError: false,\n  isSuccess: false,\n  errorMessage: '',\n  data: {},\n  profileFlag: {}\n};\n\nexport const loginSlice = createSlice({\n    name: 'login'\n  , initialState,\n\n    reducers: {\n        loginRequest: (state) => {\n        state.isError = false;\n        state.isSuccess = false;\n        state.errorMessage = '';\n        data: {}\n      },\n      loginSuccess: (state, action) => {\n        state.isError = false;\n        state.isSuccess = true;\n        state.errorMessage = '';\n        state.data = action.payload;\n        state.profileFlag = action.payload && action.payload.profileFlag;\n      },\n      setProfileFlag: (state, action) => {\n          const flagName = action.payload;\n          const newProfileFlag = {...state.profileFlag, [flagName]: true};\n          state.profileFlag = newProfileFlag;\n      },\n      loginFailure: (state, action) => {\n        state.isError = true;\n        state.isSuccess = false;\n        state.errorMessage = action.payload;\n      },\n      reset: state => {\n        state.isError = false;\n        state.isSuccess = false;\n        state.errorMessage = '';\n        state.data = {};\n      }\n    }\n});\n\nexport const {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  setProfileFlag,\n  reset\n} = loginSlice.actions;\n\nexport default loginSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}